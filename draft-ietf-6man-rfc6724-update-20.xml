<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC8028 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8028.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC6555 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6555.xml">
<!ENTITY RFC8305 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC3587 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3587.xml">
<!ENTITY RFC8925 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8925.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
<!ENTITY RFC4862 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC3493 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3493.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-6man-rfc6724-update-20" category="std" consensus="true" submissionType="IETF" updates="6724">
  <front>
    <title abbrev="Prioritizing known-local ULA in RFC 6724">Prioritizing known-local IPv6 ULAs through address selection policy</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2025" month="April" day="08"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 57?>

<t>This document draws on several years of operational experience to update the recommended process of Default Address Selection for Internet Protocol Version 6 (IPv6) defined in RFC6724, defining the concept of "known-local" Unique Local Address (ULA) prefixes that enable ULA-to-ULA communications within fd00::/8 to become preferred over both IPv4-IPv4 and GUA-to-GUA (Global Unicast Addresses) for local use. The document defines the means by which nodes can both identify and insert such prefixes into their address selection policy table. It also clarifies the mandatory, unconditional requirement for support for Rule 5.5 defined in Section 5 of RFC6724 and demotes the preference for 6to4 addresses. These changes to default behavior improve supportability of common use cases, including automatic / unmanaged scenarios, and makes preference for IPv6 over IPv4 consistent in local site networks for both ULA and GUA prefixes. It is recognized that some less common deployment scenarios may require explicit configuration or custom changes to achieve desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 61?>

<section anchor="introduction"><name>Introduction</name>

<t>Since its publication in 2012, Default Address Selection for Internet Protocol Version 6 (IPv6) <xref target="RFC6724"></xref> has become an important mechanism by which nodes can perform address selection, deriving the most appropriate source and destination address pair to use from a candidate set by following the procedures defined in the RFC. Part of the process involves the use of a policy table, where the precedence and labels for address prefixes are listed, and for which a default policy table is defined.</t>

<t>It was always expected that the default policy table may need to be changed based on operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, which include Section 10.6 where a ULA example is presented.</t>

<t>This document is written on the basis of such operational experience, in particular for scenarios where ULAs are used for their intended purpose as stated in <xref target="RFC4193"/>, i.e., they are designed to be routed within a local site and by default not advertised, used or received from external locations to that site. The document defines how preference for ULAs may be elevated for appropriate, common scenarios.</t>

<t>To support the preference to use ULA address pairs over both IPv4 and GUA address pairs for local intra-site scenarios, the concept of a "known-local" ULA address is introduced. This document describes the means for nodes to determine ULA prefixes that are known to be local to the site they are operating in and to insert those prefixes into their policy table with a label that differs from general ULA prefixes. This capability allows nodes to prefer ULA-ULA communication locally, but still use GUA-GUA address pairs for external communication, and importantly avoid selecting a ULA source to talk to a non-local ULA destination.</t>

<t>This document also reinforces the text in Section 5 of RFC6724 to require support for Rule 5.5.</t>

<t>RFC4193 defines ULAs within fc00::/7, where the L bit, as detailed in Section 3.1, is set to 1 for locally assigned (generated) prefixes, with L=0 as yet undefined. The use of known-locals as described in this document therefore applies to the currently used ULA prefixes under fd00::/8, where the prefixes conform to the definition in Section 3.1 of <xref target="RFC4193"/>.</t>

<t>The overall goal of this update is to improve behavior for common scenarios, and to assist in the phasing out of use of IPv4, while noting that some specific scenarios may still require explicit configuration.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC1918 addresses, and may or may not use some form of NAT. However, this document makes no comment or recommendation on how ULAs are used, or on the use of NAT in an IPv6 network.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>GUA: Global Unicast Addresses as defined in <xref target="RFC3587"/></t>

<t>ULA: Unique Local Addresses as defined in <xref target="RFC4193"/></t>

<t>Known-local ULA: A ULA prefix that an individual organization/site has determined to be local to a given node/network</t>

<t>RA: IPv6 Router Advertisement as defined in <xref target="RFC4861"/></t>

<t>PIO: IPv6 Prefix Information Option as defined in <xref target="RFC4861"/></t>

<t>SLAAC: IPv6 Stateless Address Auto-configuration <xref target="RFC4862"/></t>

</section>
<section anchor="operational-issues-regarding-preference-for-ipv4-addresses-over-ulas"><name>Operational Issues Regarding Preference for IPv4 addresses over ULAs</name>

<t>With multi-addressing being the norm for IPv6, more so where nodes are dual-stack, the ability for a node to pick an appropriate address pair for communication is very important.</t>

<t>Where getaddrinfo() as referenced in <xref target="RFC3493"/>, or a comparable API is used, the sorting behavior should take into account both
the source addresses of the requesting node as well as the destination addresses returned, and sort the candidate address pairs following the procedures defined in RFC6724.</t>

<t>The current default policy table leads to preference for use of IPv6 GUAs over IPv4 globals, which is widely considered preferential behavior to support greater use of IPv6 in dual-stack environments. This helps in allowing sites to phase out IPv4 as its evidenced use becomes ever lower.</t>

<t>However, there are two issues with preference, or rather non-preference, for ULAs as originally defined in RFC6724.</t>

<t>One is that the same default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses, such that IPv4-IPv4 address pairs are favored over ULA-ULA address pairs. For many site operators this behavior will be counter-intuitive, given the IPv6 GUA preference, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addresses are used in IPv4/IPv6 dual-stack network scenarios. The expected default prioritization of known-local IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addresses, does not happen for ULAs.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default. Local preference of ULAs over IPv4 is thus important to assist operators in phasing out IPv4 from dual-stack environments and is an important enabler for sites seeking to move from dual-stack to IPv6-only networking.</t>

<t>The other issue is that where nodes in a dual-stack site are addressed from both ULA and GUA prefixes, RFC6724 will see GUA-GUA address pairs chosen over ULA-ULA. One goal of ULA addresses was to allow local communications to be independent of the availability of external connectivity and addresses, such that persistent ULAs can be used even when the global prefix made available to a site is withdrawn or changes.</t>

<t>This document therefore introduces two changes to RFC6724 to support a node implementing elevated or differential preference for  known-local ULAs, i.e., ULAs within a common local network, over both IPv4 and IPv6 GUAs.</t>

<t>The first change is an update to the default policy table to elevate the preference for ULAs prefixes such that ULAs, like GUAs, carry a higher precedence than all IPv4 addresses, making IPv6 precedence over IPv4 consistent for both ULAs and GUAs.</t>

<t>The second change is the introduction of the concept of known-local ULAs. RFC6724 includes a method by which nodes <bcp14>MAY</bcp14> provide more fine-grained support for further elevating the preference for specific ULA prefixes, while leaving other general ULA prefixes at the precedence described in the previous paragraph. This document elevates the requirement for specific ULA prefixes to be inserted into the policy table to be a <bcp14>MUST</bcp14>, but only for observed prefixes that are known to be local, i.e., known-local ULAs. Nodes implementing this behavior will see ULA prefixes known to be local to the node's site having precedence over IPv4 addresses and also over IPv6 GUA addresses, such that they can use ULA addresses independently of global prefixes within their site and continue to use GUA-GUA address pairs to talk to destinations external to their site.</t>

<t>These changes aim to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. The changes are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was formally deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addresses has further declined, with very little evidence of its use on the public internet. Note that RFC7526 does not deprecate the 6to4 IPv6 prefix 2002::/16, it only deprecates the 6to4 Relay IPv4 prefix.</t>

<t>This document therefore demotes the precedence of the 6to4 prefix in the policy table to the same precedence as carried by the Teredo prefix. Leaving this entry in the default table will cause no problems and will help if any deployments still exist, and ensure 6to4 prefixes are differentiated from general GUAs.</t>

<t>The discussion regarding the adding of 6to4 site prefixes in section 10.7 of RFC6724 remains valid.</t>

</section>
<section anchor="adjustments-to-rfc6724"><name>Adjustments to RFC6724</name>

<t>This document makes three specific changes to RFC6724: first to update the default policy table, second to change Rule 5.5 on preferring addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14>, and third to require that nodes <bcp14>MUST</bcp14> insert observed known-local ULA prefixes into their policy table.</t>

<section anchor="policy-table-update"><name>Policy Table Update</name>

<t>This update alters the default policy table listed in Rule 2.1 of RFC6724.</t>

<t>It should be noted the order of rows in the policy table rows in the policy table is of no consequence and only the precedence value is relevant.</t>

<t>The table below reflects the current RFC6724 state on the left, and the updated state defined by this RFC on the right:</t>

<figure><artwork><![CDATA[
                    RFC6724                               Updated                  
Prefix       Precedence Label        Prefix        Precedence Label              
::1/128              50     0        ::1/128               50     0
                                     $known_local/48       45    14 (**)
::/0                 40     1        ::/0                  40     1
::ffff:0:0/96        35     4        ::ffff:0:0/96         20     4 (*)
2002::/16            30     2        2002::/16              5     2 (*)
2001::/32             5     5        2001::/32              5     5
fc00::/7              3    13        fc00::/7              30    13 (*)
::/96                 1     3        ::/96                  1     3
fec0::/10             1    11        fec0::/10              1    11
3ffe::/16             1    12        3ffe::/16              1    12

(*) value(s) changed in update
(**) $known_local = the ULA Known-Local /48 IPv6 prefix(es) (if any) 
with precedence and labels per the rules in Sec 5.3

]]></artwork></figure>

<t>The update moves 2002::/16 to de-preference its status in line with <xref target="RFC7526"/> and moves the precedence of fc00::/7 above legacy IPv4, with ::ffff:0:0/96 now set to precedence 20.</t>

</section>
<section anchor="rule-55"><name>Rule 5.5</name>

<t>The heuristic for address selection defined in Rule 5.5 of Section 5 of RFC6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.</t>

<t>The text in RFC6724 states that the Rules <bcp14>MUST</bcp14> be followed in order, but also includes a discussion note under Rule 5.5 that says that an IPv6 implementation is not required to remember which next-hops advertised which prefixes and thus that Rule 5.5 is only
applicable to implementations that track this information.</t>

<t>This document removes that exception and elevates the requirement to prefer addresses in a prefix advertised by a next-hop router to a <bcp14>MUST</bcp14> for all nodes.</t>

<t>This change means that an IPv6 implementation will need to remember which next-hops advertised which prefixes
<xref target="RFC8028"/>, despite the conceptual models of IPv6 hosts in Section 5 of <xref target="RFC4861"/> and Section 3 of <xref target="RFC4191"/>
having no such requirement.</t>

</section>
<section anchor="automatic-insertion-of-known-local-ula-prefixes-into-the-policy-table"><name>Automatic insertion of known-local ULA prefixes into the policy table</name>

<t>Section 2.1 of RFC6724 states that "an implementation <bcp14>MAY</bcp14> automatically add additional site-specific rows to the default table based on its configured addresses, such as for Unique Local Addresses (ULAs)", but it provides no detail on how such behavior might be implemented.</t>

<t>If a node can determine which ULA prefix(es) are known to be local, it can provide differential treatment for those over general ULAs, and insert these into the policy table at a higher precedence than GUAs while keeping all general ULA prefixes to a lower precedence.</t>

<t>This document thus elevates the <bcp14>MAY</bcp14> requirement above for insertion to a <bcp14>MUST</bcp14> for the specific case of known-local ULAs.</t>

<t>These known-local ULA prefixes are inferred from ULA addresses assigned to interfaces or learned from Prefix Information Options (PIOs) in Router Advertisements (RAs) <xref target="RFC4861"/> received on any interface regardless of how the PIO flags are set. Further, they are learned from Route Information Options (RIOs) in RAs received on any interface by Type C hosts that process RIOs, as defined in <xref target="RFC4191"/>.</t>

<t>Section 3.1 of RFC4193 only defines ULA prefixes where the L-bit is set to 1, i.e., prefixes under fd00::/8 where the prefix is locally assigned or generated. The use of ULAs where L=0, i.e., prefixes under fc00::/8, is currently undefined.</t>

<t>The following rules define how the learnt known-local ULA prefixes under fd00::/8 are inserted into the address selection policy table for a node, through a conceptual list of known-local prefixes.</t>

<t><list style="numbers">
  <t>Any RIO or PIO that is delivered in an RA in which the "SNAC Router" RA header flag bit <xref target="SNACBIT"/> is set <bcp14>MUST</bcp14> be ignored when considering the following rules.</t>
  <t>RIOs from within fd00::/8 are considered the preferred information source for determining known-local ULAs and should override other conflicting information or assumptions from other sources, including PIOs.</t>
  <t>RIOs within fd00::/8 that are of length /40 or longer <bcp14>MUST</bcp14> be added to the known-local ULA list. RIOs for shorter prefixes <bcp14>MUST NOT</bcp14> be used to insert known-local ULA entries in the address selection policy table</t>
  <t>PIOs received within fd00::/8 that are not already in the nodes known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48, regardless of how the PIO flags are set.</t>
  <t>ULA interface addresses from within fd00::/8, particularly ones not created by SLAAC, and not already covered by the known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48. However, as with rule 1, if the ULA interface address was generated on the basis of a PIO that has only been seen in RAs in which the SNAC router flag bit is set, this ULA prefix <bcp14>MUST NOT</bcp14> be used as described in this rule (rule 5).</t>
  <t>Regardless of their length or how the PIO flags are set, other PIOs from within fd00::/8 that are not already covered by the known-local ULA list <bcp14>MAY</bcp14> be added to the list, but only with the advertised prefix length.</t>
  <t>When inserting known-local ULA entries into the policy table, they <bcp14>MUST</bcp14> have a label of 14 (rather than the default ULA label of 13) and a precedence of 45.</t>
  <t>Entries <bcp14>MUST</bcp14> be removed from the known-local ULA list and the Policy Table when the announced RIOs or PIOs are deprecated, or an interface address is removed, and there is no covering RIO or PIO.</t>
</list></t>

<t>When support is added for the insertion of known-local ULA prefixes into the current policy table it <bcp14>MUST</bcp14> default to on, but a mechanism <bcp14>SHOULD</bcp14> be supported to administratively toggle the behavior off and on.</t>

<t>Tools that display a node's current policy table <bcp14>MUST</bcp14> show all currently inserted known-local ULA prefixes.</t>

<t>The identification and insertion of known-local prefixes under fc00::/8 is currently not defined.</t>

<t>Note that a practical limit exists on the number of RIOs and PIOs that can be placed into a single RA. Therefore, there is a practical limit to the number of known-local ULAs that can be expressed on a single network and the number of ULA prefixes that can automatically be preferred over IPv4 and GUA prefixes within the policy table. This limit is unlikely to impact most networks, especially residential and other small unmanaged networks that automatically generate ULA prefixes.</t>

<t>Section 4 of RFC4191 says "Routers <bcp14>SHOULD NOT</bcp14> send more than 17 Route Information Options in Router Advertisements per link. This arbitrary bound is meant to reinforce that relatively few and carefully selected routes should be advertised to hosts." The exact limit will depend on other Options that are used. So while this is not the practical limit discussed above, operators <bcp14>MUST</bcp14> take extra care not to cause the RA size to exceed the MTU when filling the RA with RA Options when exceeding this limit.</t>

<t>Note that in the case of Rule 2 above it would be expected that ULA prefixes being included in the known-local prefix
list be compliant with Section 3 of RFC4193 (i.e., /48 in size) but the above rule is pragmatic in that it allows
the use of ULA prefixes from /48 to /40 in length.
Most networks use ("are expected to use") /48 prefixes as per
RFC4193. However, it is possible that in some circumstances a
larger managed enterprise may wish to use a shorter prefix (e.g., to simplify management, filtering
rules, etc, and to overcome the issue with the number of RIOs an RA
can carry as described in the above paragraph). However, such
non-compliant use of ULAs may be problematic in other ways, e.g., carrying an increased risk of collision with other
ULA prefixes, where you might be using someone else's compliant prefix because shorter prefixes have a lower chance to be globally unique.</t>

</section>
</section>
<section anchor="configuration-of-the-default-policy-table"><name>Configuration of the default policy table</name>

<t>As stated in Section 2.1 of RFC6724 "IPv6 implementations <bcp14>SHOULD</bcp14> support configurable address selection via a mechanism at least as powerful as the policy tables defined here".</t>

<t>Based on operational experience to date, it is important that node policy tables can be changed once deployed to support future emerging use cases. This update thus re-states the importance of such configurability.</t>

</section>
<section anchor="intended-behaviors"><name>Intended behaviors</name>

<t>In this section we review the intended default behaviors after this update is applied.</t>

<section anchor="gua-gua-preferred-over-ipv4-ipv4"><name>GUA-GUA preferred over IPv4-IPv4</name>

<t>This is the current behavior, and remains unaltered. The rationale is to promote use of IPv6 GUAs in dual-stack environments.</t>

</section>
<section anchor="gua-gua-preferred-over-ula-ula"><name>GUA-GUA preferred over ULA-ULA</name>

<t>This is the current behavior, and remains unaltered for the general case.</t>

<t>However, where a ULA prefix is determined to be local, and added as a known-local ULA prefix to a node's address selection policy table, communications to addresses in other known-local ULA prefixes will prefer ULA-ULA address pairs to GUA-GUA (matching label, higher precedence).</t>

</section>
<section anchor="known-local-ula-known-local-ula-preferred-over-gua-gua"><name>Known-local ULA - Known-local ULA preferred over GUA-GUA</name>

<t>As described in the previous case, this document elevates preference for use of ULAs over GUAs in cases where the ULA prefix(es) in use can be determined to be local to a site or organization.</t>

<t>By only adapting this behavior for known-local ULAs, a node will not select a ULA source to talk to a non-local ULA destination and will instead correctly use GUA-GUA.</t>

<t>Nodes not yet implementing this RFC will continue to use GUA-GUA over ULA-ULA for all cases.</t>

<t>As an example, consider a site that uses prefixes ULA1::/48, ULA2::/48 and GUA1::/48.</t>

<t>Host A has address ULA1::1 and GUA1:1::1
Host B has address ULA2::1 and GUA1:2::1</t>

<t>Both ULA prefixes have been determined to be known-local through RIOs.
Perhaps ULA2 is reachable within the site, but its prefix is not in direct use at host A.</t>

<t>If host A sends to host B the candidate pairs are ULA1::1 - ULA2::1 and GUA1::1::1 - GUA1:2::1.</t>

<t>In this case ULA1::1 - ULA2::1 wins because of matching labels (both 14) and higher precedence than GUA (45 vs 40).</t>

<t>If host A were to send to a host C with addresses ULA3::1 (where ULA3::/48 has not been learned to be a known-local prefix) and GUA2:1::1, host A would use the GUA address pair for the communication as the GUAs have matching labels (both 1) where the known-local ULA and general ULA do not (14 and 13 respectively).</t>

</section>
<section anchor="known-local-ula-ula-preferred-over-ipv4-ipv4"><name>Known-local ULA-ULA preferred over IPv4-IPv4</name>

<t>This update changes previous behavior for this case. RFC6724 as originally defined would lead to IPv4 being preferred over ULAs, which is contrary to the spirit of the IPv6 GUA preference over IPv4, and to the goal of removing evidenced use of IPv4 in a dual-stack site before transitioning to IPv6-only.</t>

<t>This document elevates the precedence of known-local ULAs above IPv4, so known-local ULA-ULA address pairs will be chosen over IPv4-IPv4 pairs (matching label, higher precedence).</t>

</section>
<section anchor="ipv4-ipv4-preferred-over-ula-gua"><name>IPv4-IPv4 preferred over ULA-GUA</name>

<t>An IPv6 ULA address will only be preferred over an IPv4 address if both IPv6 ULA source and destination addresses are available. With Rule 5 of Section 6 of RFC6724 and the ULA-specific label added in <xref target="RFC6724"/> (which was not present in <xref target="RFC3484"/>) an IPv4 source and destination will be preferred over an IPv6 ULA source and an IPv6 GUA destination address, even though generally known-local IPv6 ULA addresses are preferred over IPv4 in the policy table as proposed in this update. The IPv4 matching label trumps ULA-GUA.</t>

</section>
</section>
<section anchor="discussion-of-ula-source-with-gua-or-remote-ula-destination"><name>Discussion of ULA source with GUA or remote ULA destination</name>

<t>In this section we present a discussion on the scenarios where a ULA source may be communicating with a GUA or ULA destination.</t>

<t>A potential problem exists when a ULA source attempts to communicate with GUA or remote ULA destinations. In these scenarios, the ULA source as stated earlier is by default intended for communication only with the local network, meaning an individual site, several sites that are part of the same organization, or multiple sites across cooperating organizations, as detailed in <xref target="RFC4193"/>. As a result, most GUA and ULA destinations are not attached to the same local network as the ULA source and are, therefore, not reachable from the ULA source.</t>

<t>Scenario 1: ULA source and GUA destination</t>

<t>When only a ULA source is available for communication with GUA destinations, this generally implies no connectivity to the IPv6 Internet is available. Otherwise, a GUA source would have been made available and selected for use with GUA destinations. As a result, the ULA source will typically fail when it attempts to communicate with most GUA destinations. However, corner cases exist where the ULA source will not fail, such as when GUA destinations are attached to the same local network as the ULA source.</t>

<t>Scenario 2: ULA source and remote ULA destination</t>

<t>Receiving a DNS response for a ULA destination that is not attached to the local network, in other words, a remote ULA destination, is considered a misconfiguration in most cases, or at least this contradicts the operational guidelines provided in Section 4.4 of RFC4193. Nevertheless, this can occur, and the ULA source will typically fail when it attempts to communicate with ULA destinations that are not attached to the same local network as the ULA source. This case provides a rationale for implementing support for known-local ULA prefix insertion in the policy table, such that differential behavior can be applied for known-local versus general ULA prefixes.</t>

<t>The remainder of this section discusses several complementary mechanisms involved with these scenarios.</t>

<section anchor="the-ula-label-and-its-precedence"><name>The ULA Label and its Precedence</name>

<t>RFC6724 added (in obsoleting RFC3484) a separate label for ULAs (the whole range, under fc00::/7), whose default precedence is raised by this update. This separate label interacts with Rule 5 of Section 6 of RFC6724, which says:</t>

<figure><artwork><![CDATA[
Rule 5: Prefer matching label.

If Label(Source(DA)) = Label(DA) and Label(Source(DB)) <> Label(DB), 
then prefer DA.

Similarly, if Label(Source(DA)) <> Label(DA) and Label(Source(DB)) = 
Label(DB), then prefer DB.
]]></artwork></figure>

<t>In the first scenario, the ULA source label, whether known-local or not, will not match the GUA destination label. Therefore, an IPv4 destination, if available, will be preferred over a GUA destination with a ULA source, even though the GUA destination has higher precedence than the IPv4 destination in the policy table. This means the IPv4 destination will be moved up in the list of destinations over the GUA destination with the ULA source.</t>

<t>If the ULA (fc00::/7) label is removed from the policy table, a GUA destination with a ULA source will be preferred over an IPv4 destination, as GUA and ULA will be part of the same label (for ::/0).</t>

<t>In the second scenario, if the ULA source has been recognized as being within a known-local prefix that has been inserted into the address selection policy table, then the known-local ULA source and general ULA destination will have different labels, and therefore IPv4 communication will be preferred.</t>

<t>If the ULA source has not been recognized as known-local, e.g., if the insertion of known-local prefixes into the policy table has been administratively disabled, its general ULA label will match the general ULA destination label and therefore, whether part of the local network or not, the ULA destination will be preferred over an IPv4 destination.</t>

</section>
<section anchor="happy-eyeballs"><name>Happy Eyeballs</name>

<t>Regardless of the preference resulting from the above discussion, Happy Eyeballs version 1 <xref target="RFC6555"/> or version 2 <xref target="RFC8305"/>, if implemented, will try both the GUA or ULA destination with the ULA source and the IPv4 destination and source pairings.
The ULA source will typically fail to communicate with most GUA or remote ULA destinations, and IPv4 will be preferred if IPv4 connectivity is available unless the GUA or ULA destinations are attached to the same local network as the ULA source.</t>

</section>
<section anchor="try-the-next-address"><name>Try the Next Address</name>

<t>As stated in Section 2 of RFC6724:</t>

<t>"Well-behaved applications <bcp14>SHOULD NOT</bcp14> simply use the first address returned from an API such as getaddrinfo() and then give up if it fails. For many applications, it is appropriate to iterate through the list of addresses returned from getaddrinfo() until a working address is found. For other applications, it might be appropriate to try multiple addresses in parallel (e.g., with some small delay in between) and use the first one to succeed."</t>

<t>Therefore, when an IPv4 destination is preferred over GUA or ULA destinations, IPv4 will likely succeed if IPv4 connectivity is available, and the GUA or ULA destination may only be tried if Happy Eyeballs is implemented.</t>

<t>On the other hand, if the GUA or ULA destination with the ULA source is preferred, the ULA source will typically fail to communicate with GUA or ULA destinations that are not connected to the same local network. However, if the operational guidelines in Section 4.3 of RFC4193  are followed, recognizing this failure can be accelerated, and transport layer timeouts (e.g., TCP) can be avoided. The guidelines will cause a Destination Unreachable ICMPv6 Error to be received by the source device, signaling the next address in the list to be tried, as discussed above.</t>

</section>
</section>
<section anchor="following-ula-operational-guidelines-in-rfc4193"><name>Following ULA operational guidelines in RFC4193</name>

<t>This section re-emphasizes two important operational requirements stated in <xref target="RFC4193"/> that should be followed by operators.</t>

<section anchor="filtering-ula-source-addresses-at-site-borders"><name>Filtering ULA-source addresses at site borders</name>

<t>Section 4.3 states "Site border routers and firewalls should be configured to not forward
any packets with Local IPv6 source or destination addresses outside the site, unless they have been explicitly configured with routing information about specific /48 or longer Local IPv6 prefixes".</t>

<t>And further that "Site border routers should respond with the appropriate ICMPv6 Destination Unreachable message to inform the source that the packet was not forwarded".</t>

<t>As stated in the above discussion, such ICMPv6 messages can assist in fast failover for TCP connections.</t>

</section>
<section anchor="avoid-using-ula-addresses-in-the-global-dns"><name>Avoid using ULA addresses in the global DNS</name>

<t>Section 4.3 of RFC4193 states that "AAAA and PTR records for locally assigned local IPv6 addresses are not recommended being installed in the global DNS."</t>

<t>This is particularly important given the general method presented in this document elevates the priority for ULAs above IPv4. However, where support for insertion of known-local prefixes is implemented, such "rogue" ULAs in the global DNS are no longer a concern for address selection as they would have the lowest precedence.</t>

</section>
</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using the introduction of RFC6724 as a measuring stick, the updates defined in this document will likely take several years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC6724 has been published but we continue to see existing commercial and open source operating systems exhibiting RFC3484 (or other) behavior.</t>

<t>While it should be noted that RFC6724 defines a solution to adjust the address preference selection table that is functional theoretically, operationally the solution is operating system dependent and in practice policy table changes cannot be signaled by any currently deployed network mechanism. While RFC7078 defines such a DHCPv6 option, there are few if any implementations. This lack of an intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually, renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

</section>
<section anchor="limitations-of-rfc6724"><name>Limitations of RFC6724</name>

<t>The procedures defined in RFC6724 do not give optimal results for all scenarios. As stated in the introduction, the aim of this update is to improve the behavior for the most common scenarios.</t>

<t>It is widely recognized in the IETF 6man WG that the whole 3484/6724/getaddrinfo() model is fundamentally inadequate for optimal address selection.  A model that considers address pairs directly, rather than sorting on destination addresses with the best source for that address, would be preferable, but beyond the scope of this document.</t>

<t>To simplify address selection, operators may instead look to deploy IPv6-only and/or may choose to only use GUA addresses and no ULA addresses. Other approaches to reduce the use of IPv4, e.g., through use of DHCPv4 Option 108 as defined in <xref target="RFC8925"/> as part of an "IPv6 Mostly" deployment model, also helps simplify address selection for nodes.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including (in alphabetic order) Erik Auerswald, Dale Carder, Brian Carpenter, Tom Coffeen, Lorenzo Colitti, Chris Cummings, David Farmer (in particular for the ULA to GUA/ULA discussion text, and discussion of using the specific fd00::/8 prefix for known-locals), Bob Hinden, Scott Hogg, Ed Horley, Ted Lemon, Jen Linkova, Michael Richardson, Kyle Rose, Nathan Sherrard, Ole Troan, Eduard Vasilenko, Eric Vyncke, Paul Wefel, Timothy Winters, and XiPeng Xiao.</t>

</section>
<section anchor="implementation-status"><name>Implementation Status</name>

<t>This section should be removed before publication as an RFC.</t>

<t>There are two known implementations of the ULA known-local preference mechanism.
The first implementation was created by Lorenzo Colitti at Google as a prototype solution, with public code available for reference on their android platform available to the public <xref target="ANDROID"/>. It was last updated in April of 2024, and does not include the capability to listen for RIO/PIO changes, but does support adding the ULA prefix learned on the interface to the known-local preference.</t>

<t>The second implementation was written by Jeremy Duncan at Tachyon Dynamics and made available as open source, reference prototype code available <xref target="RAIO-ULA-PY"/>. This implementation includes a full implementation written in python, including the capability to listen to RIO and PIO on the wire and adjust ULA known-local prefixes as needed. It was last updated in May of 2024.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RF 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC1918 addresses are used instead.</t>

<t>The requirements of RFC4193, stated earlier in this document, should be followed for optimal behavior.</t>

<t>Operators should be mindful of cases where communicating nodes have differing behaviors for address selection, e.g., RFC3484 behavior, RFC6724, the updated RFC6724 behavior defined here, some other non-IETF-standardized behavior, or even no mechanism. There may thus be inconsistent behavior for communications initiated in each direction between two nodes. Ultimately all nodes should be made compliant to the updated specification described in this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="summary-of-changes-and-additional-text-since-rfc6724"><name>Summary of changes and additional text since RFC6724</name>
<t>This section should be removed before publication as an RFC.</t>

<t><list style="symbols">
  <t>Introduced concept of known-locals and rules for their insertion/removal in the table.</t>
  <t>Changed default policy table to move fc00::/7 to precedence 30, above legacy IPv4.</t>
  <t>Changed default policy table to move the 6to4 address block 2002::/16 to the same precedence as the Teredo prefix.</t>
  <t>Changed ::ffff:0:0/96 to precedence 20.</t>
  <t>Changed Rule 5.5 to a <bcp14>MUST</bcp14> support.</t>
  <t>Defined the concept of known-local ULA prefixes for currently defined RFC4193 ULAs with L=1 under fd00::/8, how they may be learnt, and the <bcp14>MUST</bcp14> requirement to insert them into the policy table.</t>
  <t>Added text clarifying intended behaviors.</t>
  <t>Added text discussing ULA to GUA/ULA case.</t>
  <t>Added text for the security section.</t>
  <t>Added text to account for SNAC bit.</t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC6724;
&RFC8028;
&RFC4861;
&RFC2119;
&RFC4191;
&RFC4193;
&RFC7526;
<reference anchor="SNACBIT" target="https://datatracker.ietf.org/doc/draft-ietf-6man-snac-router-ra-flag/">
  <front>
    <title>SNAC Router Flag in ICMPv6 Router Advertisement Messages</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ANDROID" target="https://r.android.com/3046000">
  <front>
    <title>Optionally prefer known-local ULAs in Android</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="RAIO-ULA-PY" target="https://github.com/jeremy-duncan/raio_ula">
  <front>
    <title>Python known-local ULA implementation</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC8174;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&RFC1918;
&RFC6555;
&RFC8305;
&RFC3587;
&RFC8925;
&RFC3484;
&RFC4862;
&RFC3493;


    </references>



  </back>

<!-- ##markdown-source:
H4sIADh+9WcAA7V96XLbWHrofz7FuZpUXamLpHbZrTs9Gdmyp9WxJceSp+9U
KpUCgUMJYxDgYJGa3eU8S54lT5ZvPQsAqj3TFf2wJfLgLN/59g2z2WzS5m1h
z82HOq/qvM1/zst787msnspZUaVJYa4+PJ6ZT+8uGtM+1FV3/2CSLKtt05jG
FjZt86o066rI080kWSxq+/jMXDCNyUvz8e1rc/bi6GSSVWmZrGD1rE6W7Sy3
7XJ2tkrKWb1MccCsW2dJa2dHB5M0ac9N02aTplus8qaBZdvNGh69enP3dpKv
63PT1l3THh0cfHtwNElqm8B3ZTt5uj83Z+8vriefn+gDW5e2nV3ighOevjnn
3UySrn2o6vOJoZ+Z/G9gyzDkem5edXVyX+SV+4I3f52nn4ffVTUs/Ka09f3G
3Ka5LVPbmGvbPlX1ZzfIrpK8ODcLefiPy6p+SuoM4LYuktLOYavju7mbm9cP
ANjeVu7yVe9z2sYPeZP214Shcxr6x7/Ct/MknXefx9f6YW4uuzJN+ov9YGu7
2vS/owXvkvRhA4hxuYGhedr0F/9rRg/9seVxmQybp9VqMimrepW0+aPFmwBc
wcuRX18eHL2UX09enh3Kr0eHh9/qp4ffHvpfj+XXF6dHZ/jr7fXF61dXd3zD
bVLfW0CqnYe2XTfn+/uAC0lbJ+lnW88RFedwlH1A0f0+djZlks6AFgCXZnUy
WxbJ/f4Oz8nEhOuYjzTAvIVvEemvXr9HSpJPL7JHW7d5Y1e2bM17IKfk3iKY
Lq4vP95cXW7ZYj1Pyqyu8gwhtX98cHJ2cHAQLX2zRopMimJj1rVdwlI9Amxw
Mxc8C0Ln4upmBh/PPvxly5r3efvQLWjBv9KNz/jy9uskr/6jK5Jo/Q8boKFy
SPWrdUFnTYhhmEleLnvXDDend3t2enqqN358oL8en758oZ9+e+Q+PXl54lHi
yH2Klz+ZzWYmWTR4q+1kcveQNwYutCOgw60+NQY201i4C9jnxiY1fLA01Rr+
ZjAa+xP8QdRr2sowwwBOaE1tASIwUWYzgHSVIkeEZy/tMumKFi6YmeStY5Jw
Xsd/gEVWbZVWhfmzrZGXmTOzi5x2z2R2mZcwJ/NJxP0pf4bMFBdOK9jMusXF
dgIw75hPZf63zpp3BHRdfxegv0eokP9kkYcnrbFlsigs3susrfDyDR6lK/OU
Tt2YJ7hyWH+ZHRycn++/xJMv8LhWcKqG/VUANLOo2geUECcz/McAcpo/faJZ
4T+z+6eiWiAC4MyNg4lt9ggYjB1dY+fmDs7lL4Yg0NBhVzaB/Sw25ukhTx9M
WWXwBSAfr5xnMD5fbmhh4FVAUqbpYJw7b17C3mGivN4qtgDjARpzc9WapGgq
kxZJnS9z3QBMnbRVvZkawHpgVbkgRm3/1uU10y+epunW66rm3z92AN7T+Wl4
mbey6ClenNws7Tuzq6qV1Ri8hG04z1lbnei+bUNgagABHpLyHh+ocH7CtoV9
SB5B6CKd1XAzuptkkRd5u8El8Yph+Q4nSGC2KWwqLTqUNQYEX4W0mJp9OCUc
GZhRZpoUEAVEOQzFfa6Sz7Bob4ekHRAqEAIAgJq8aREmcGS+4CYHiilZ8DX0
EN0dop3gi7suugSgUaSt+zL/GTZBCNsg6hV4eXKKzK6LakOwd7uEDW70VpBs
4W7zFne0zO87pmcQTiYFJaFahUAEGZQDC4BJm5wwOyD/dVKDrAOibebAWIif
rPIsK+xk8juk5rrKOrrXyeQ2R6DkLcCoWxRCSwiGo4PDo+lvZwz/Jkjz7+Yh
aZQegRLgyvGmARQri6fKm9UYwcChkOMOyQDZS50/KntZVUCpyRrQaF3nyOya
qqtTK6jatHnJB9N51gnQFrJGQKxlDZBNcLksJ0bZwIlgL8uqKKonXYG4ZdbB
0yF94Ddwwrn5kNTE3NzQBsn4sSoehUhwJfg+ieh3CgcGvFQqggUIR3HXRbKw
BWOe27TyB9ATTYEYmzGS4yCGXOKIK1wGsVM2PZ9MAFuf4C6S4inZNCQq0lZx
FjcyOgOiaWlxGHJVQcTMLIAoMxRH49Ln/wEsGV2O5oemwfV2mFj8/dO6saTF
o1aPwCfhPLBJXJMXHO4POR4cZlUx+ajUgxXuEzzvDgFoXQFLJbLBCexPCS7X
hAzu8GAqIGQGY4Nv5mdyTQnRvzyOa8CNNLBpAmssp+H3J7AmgKkgdHBVAFVO
wpZ4/Ti8kL0h9QJTAxWlZhbtWAVvgrQhxIAOQY8jWFLACUWud/W6AmwDsDQA
T0bUX34R5fLLF1hkbudTfGxDEyELuS/d3ZKOmKk4TUKGiLAEytAbKCsgOtUJ
ARdpR7AhxGRQkTImLfsTcgmYAifi66WLQBYJk26Ro6Dk99k2nRwRETYJfOCR
zkYE4gl/qszWgQ2vpnKCrievhAUQWw9YQ9NTFBzPjwd5fQCADzo1wSgQQD3F
J+mrPsGqOUl9YsyATaan9NkmrfNFpF3g2swnSaICiFcAN5oz1pvwhmlZuV7e
sJAC7dghgiBlSao/HhlGiYIC+nFjRzWUiE0g0iDKIPPi5bN8CcBuGBXubUlK
a7hLOWyarFXuJ8h3G386MQlQ8xuofXycAhSdRQf41OYFKWek0I1fmEPHaB5m
pI4rgSGSPIKtoQIH1Q3atcgVPH1SfCZBDBsNjYZA3Ay4AqlqtSUzIpXrbGFD
W1WttnLKwZiqBgsIWTu6ISJRVTglVfhFKGbemUXeTpE5ANKAWRvrecfzwyni
IopAWPvQozhCpBE+scv3COTnlfQp3/277w5w7g0835Uqc4jCRQAGFNDwLhi3
RZyG0Gpx00vk7EDgRW4dA087UObpkojjRDiPq9bOCOgJWB6C2hUqFTIb2ymq
9wSQwO0GfJNu0xJnAHCY+wounCQ+7FlMrJy2qOqs028RiH22NFUCQ6g2rSoT
a1CTENuAB+PkAjTkQSSf4NqB6bJOoipmAwIcVP+0p1QyLTyvWsKRLkpWh71y
SjBD2BsUbTXw1QbYKlARGy546tpUOGBKC5FyXq0WgvSNbPgMaRCO6VxxU2al
92Re6V9iQnt7QdX2Da5CWgcIGVyCzkr3BvNfX9zNzffVExrB0x7asMpfVoZN
3VYkEtu9olGXJF8iUTqlY5WhsgarMCfkQ4g5AEADNfqOGG5VVPcbxovPwETh
6wxUnPefbu92pvy/ub6h3z+++ddPVx/fXOLvt99fvHvnfpnIiNvvbz69u/S/
+Sdf37x//+b6kh+GT0300WTn/cVfdhhuOzcf7q5uri/e7QzJCQ/KIiDne7Uo
P5NmEpHgq9cf/vu/Dk8A8f+POKm+fJE/Xh6+OIE/ADuEXVZlsZE/UYZMgExt
UhPIAPWAo+ct3TRqIui0M0iLAL5v/g0h8+/n5veLdH148gf5AA8cfagwiz4k
mA0/GTzMQBz5aGQZB83o8x6k4/1e/CX6W+EefPj7fy5QIs8OX/7zHwBlgBrO
zTbfAnNCZ1YQ10HP0Zcvkwlg6fmom2T8MWZWk8m/xM6sc3MRMEpRDZDjZWBF
ZR1R9T3YYT8TheyTYvDAUoJVi6yvPyTmHpS8kuT0vtAGyCNY6Wqrz3Bsvy/P
DnG/H65u5MkPvMUrdbYBUbKD8LnHb99dXLyWCW5R7SXLW+3Wi66tZrFVrU8f
4dNA0DeBRn7VNB1A96O9Z782bSl2IAQuDlYWkZlMJj+iEFyBcpzP5Ht8fGHV
jEQ3sfNBTNluAZ2ApRRrPKSSw4XMQHtPP7MWqaoRabs0jhQj9OHDJYaGb2Th
quDx6hIwBNjsxms6QI4/0uL3oA7As6ib7O4hpN2RA5Q8YQOCdgETo6MB1b6L
D1c4M7NR0ithcj64iECg/64AFALezMpjkqZVBxiBOvaEH2GL3UN1KS5LQPyG
ZqNzw86eLLCXpBHpPbDuLe697epS7eNGNX9v4/f1wl839UUlEy1AVJBxY7mw
SRZorg5tvDRn4Rj4oJxUFCMUdbjMAnsl5xSoNOSw5dlIBjvItt64ua9tgjQX
rgM798gEEv0xr6sSaVEV7wdbrBvh2QwDpH3ePjAAS6oII3xDjiKLljmhBa7D
Lh381KKm+GRrgFAgmcluRsnzBIoRkxUpih40hE5AeqhxoCodfuPMPli7qvP7
nIMEo9dyU7ICpn6MJlltcWaQGr7u4Cw+TggGC2gEKLdi4g49jkQDqK6AFAwG
kEFPywZO5Qi/EABLMCicC1ptmWjY3LwlnafcsF3G5lhVNyzI3Y0/oWKHThgk
IFvPgJ66HGMSU+HIeHpFsgjQqlqlhChkm6Gnoc31VmAz6A6iyy+SEt3309BX
IfRkAf2RHaHbxvnfybgK8Mv7KwLCdI6LnJSqk31WPj2GiiAJ7HeyHpybyl2o
hmtFo1sO479gkuP5AirzvgtSSh5QYZHIgQdYcLNZRZpkKyMdOqLeDGdBcNFc
gc7IwSp+KjGPOSFctXY+0+FRie3UYNOzDeLhXmBQCwCRFM4VDQIDuAJ9q5+A
rR2DXbVzGktsdGQiZ0LUXdnzcxAg0G3hrCyCT+tugSGuCH/m8NGHWTyc56Ky
BJxQgeSvhai2i5yCzi7yRICuscA6oifJq7CFv7FF38TeZo4iiWeN+FxjLUOj
AoA92sGU8DmeckbKroeeWoMEaWJsjvmEwpw8aMFs7EarvZwTJ9nW6MLU+QII
zLDbLb6NFD00ZcRe5gZ5ohqqMSGiCxihjExfdLpePE1tBbAM0bFYOv928pjk
RRCkCTwqZYnm8yN5ceAgo0xyjTECDrcQHlBgTLiCRfaFFgUtxEJRVdZVkrm1
C8saKIEzZwrG0CgHSzhKMvC+eH+Cc7U1JJeCsErgeFGpKvqWc1Ejsjj3I1I0
ebhELPck/iCOrc7X0E2TqHOAhwmOTcd8kE51mBvGvyVcfavecUZ2Dfc678ZQ
AMJ3coKxAB7tzXlL/MXx/ov8sxXTPk1qUCUT85DfIxUEEQwYX44KUzDOEX50
jmD8aDAujLo1ShiNEB7IoAo+8SfHg+RBbEuxNXDA9i9j7q5bnP7I01e2faiy
fjAK7D0XlCClHRWQ2X1NQYbIN7fsanaeEIC9ThmB2PlsQt+VenhAfaTAFvOW
MZ+pSZwnWyHY86PRd6AtdA1FA2Gj64e+W1lQoHFqdhQZHtuh4wnoE6alBMv6
2LXAYAna9OyXJd6Js1YLePJRdNlf8VErqQxv7ZpZa0iQIxoSsspo81u94HjF
/7cxYvMS7EdxM1BjkLmhFqlfDlQHTzbkXkcm14s0kHRwzLUgVhpxPOs4BHva
XQgGUBoO3bnwxbhACHzUgZHUeHbtXPgUhiGyCgL1Sb4KnZkhL4ERWUEYuhxJ
UAi8nRKzxz37CP1+ELn3LksxAIhxcLCBxejl96/JjGnEQ6nuZLdNtJbzJu0a
0SqJOtm3raTgzTsJR6q3OnHUqnFKpnH29zfdapXUmyCsi3G1TBgsMqLfhY4B
GBanPjCjAnWefD0ixVyGRG0LjIeiHCY/B9s1iHckWID/kLmBWWBgbnBE/lT0
71x4LCBXvrKh+hnvgDw4esTMpuiQyuTs5AYAEd4CxapJhzOgiUeTCRuhtAB2
GYJkQuJrZW3ZndeS3fbpSdqKMno8+tHBwdH5+f7hGVC28AT3ROMf+YiAYYLj
B58R5L00FEeySz+dLK5csceonKEYht8bkmw53wKOuEP7u9LtmHfCoInpwIbQ
n1JGFKLRMHKDIjRLfLqCD1fMPOgrNL1NvkQUCfzvjbju7U8gB/nCwUjp6ug8
DvOd7tGqKqkCIxCWQiCI4LXzaZEql2VCxzQ3cZggyOfI4vBg/iKMS9WYEgm8
5DEp8owI4SL7a9e0vH+vR/Vvjn3z7UNtg7jFUP06F70mTl4bU2Wmqgj4HAGX
x0TkTCYJ0XPAdTENg9HCh6/1rkvgj7OHas0KJsswCtU85HUWBuSIBkQ7QO+1
REqdiOtnE/5a8BTBCAyFP7njZDc6vABRIJEUmNizXbfjxBByjSAgjjiO5d0k
V6064xYUTKLUDyCZGuNmMLLG2OsYtWz9gtMaKOACIPhb53JYiMR7pAkYw6ZS
TeoHOSARRXkq9sIAoFCYNGGwz6Ee5TQodyrsstXrsQKhTIaok4juFRbEBG55
rAaFtT2fTP7T/bhc3/BHl3z+55OsOviZiCObfz54GLyj8Lj/3A/aOkpmPD8/
3D88ehl/enpA/x3o36OD3KjRkw5+/omw9z8Ie/dPdK6TU/z38MTsfvPNHmxm
/2Dw4Al/dOg3MzLIjYI5lvBzfnB+sP/tmX57fMqD/Bwjg0CcyKhd2IuTLeEq
xzziyD8xMgggI6NknkMYcnw0MuI0mGdkkI6aaNg9/vaYDnysf24ZdCCjdhm+
3/a2ahSybp7xQTpqsrQpLnN4MPz20N3R+CAdNTkGGTMEG3/rQDA+SEdNJnAg
pv3dZs+lj+VqrU4QoSKkM98RpSLj5EgW+5EQFwOdYhfTcndZhO6ZiXqWRxLp
1qRcAul3PvMLpMRxxASIEwmfRWdQE6AMqdGBc5oUJeQ0HU1HsT5aP1TbyOFa
PY5qKA4DkgUq2AUI5nSjoX6cKEZ7AIKmZQTzHB2w2FChx0d4sF0NYgBka5g/
6FX00H/upOVyawqKJOB8jQRNvPzkWgNSQcmEUNOLFE/QiZZdobxfUmAiFh94
8j/SnZGQXag2z7snqcU2JpljgR0f6Dwo5SQxxB2X8ydQA9dQKIdL4pR/ceSK
yBfxv7KrhdWMSz1uEwKCv/KaGsmnTpZyW0C5CRJyQtktqWqk/VRIhkJNrsgH
ShNzYdG5MX0FC3Yn6IYp8z+h54MiY6hEbjP3f+sNO0WJsQ1UV9KKVG0XtYzT
1p4DNunEmmT694N5QoSHxTYYooQNrCW5TV1AGOQm/7lPUQFDs43yQE990g8F
lglyLicozAjCqLM4C8qKzf0AqEyVF87QZeVwJFIxqhlG+tVkchsk0QaUGZLJ
Dnu5Q3Ciy8pZ2pzAlZFLVosBUNufOS2c1Lue01CUMk3yRY6nQXQ79O6yJbst
VQFrOpq9HSbWvFVvGmXqiLkuaTk0mfPlrFBXI6+THo+zmJfqmEXXik+AZJzw
UCUJsc2/1HKSufj1IkduiyEy5w1jjwQ5ewJ/nLg2XIokuk/GXWKI9NvcpBQJ
Zs/fZ2vXZKtgftmY349IjaKswTQj9jHwmojcERdCkmeRgyfziBmTMRnGzkJL
Bsl7Ggdjp9FWjE7I2y5hITJPe/HAxucek49hmaBXHrMObYIRfH5oa0oI4NWH
qxu4YhQfIxkn8P1HQLuIpF16MjHGjV9XjONCqqIQFxEMsIDBcjk+TYNOkLfs
UwmSqKPt0k7Gd/vR7faieWYnwGjvNmtrXguL4siJFBbgHNMtuT+HlKjYy2LU
JFHxubhM0cDR6BNEZ4u8DXNA1Q+7JcVykGGJzw5SRislnLaXD8qBEJri3XcH
29ZKNZ0T5YnP/ix9VcNd5OdjLY+/dfdIV9Rux9XeuRh1+57u5wuyggQdxA0p
PQ4FUEFBzZiUXCr0ZHI4NxeACHDDCDLEPK6PwMMUgCo133aC+IO/MLvDje0E
9Zs7+O2DTeg8WMqJV/rLL1JJiu5Evl5VqeCOKDeBIm+acaI+oh5UYZNHc0JB
xvV+2R2CLUha8cEP3ronCUn4oaC4sO+R0mvWnsRjgQy4RlbNoRGURQB7yVj3
M+MdNE23EpqjbfITvGaU1IHsA850LGcaVBFqfALj6La8B718H6xXSosGtaZ2
MATEYDaGJ+7jGN66Ao2zoeqWeTijnqY/ukCoz7zvT4X+xtw6T8zz+IjlXydz
OqNnNluPSDkLBQi+zDk02b81dpzxg9M37Fsv+RJcsEfBB4AEK2761cx2Mjmd
SxG+ckcvP8ZQcBqU0GBYpRT3NGe9kBJL2YIsvcNDpxVTmLgC/xeOHWQtJ5pz
g/YActmls3gHJ6UwgWOgg5KixHMKNLeIzS+sRf+tLVXYRNyCmIXo745DMFeQ
fOogWXSAnaN5+3SOXfr3dA9u7WwuCZR6xezyVHDU2698KtT6YSuTGUXZr7o9
UITGLi+IU7psl8DSiK4SzvZibn58INCS9jTSMcKT6Yg+KHoDwRXUXOtKZgBK
6F2Lg2FeH6djuIHHexyH7PkVTrAsBBDtjexAEZZNQ9FQtgJIfamRH9plZCRl
WXWU+0e8rJI74ioyjV1xfmg5gsXk9qVdOKdtbdnI5ttDSHrZx7mppQuvY34D
XZwqqH+nVaWu5Nh7LSTtbJ7KYDkQuRSC4lTJHV+4QhzGnyRDsYW1+piAh+7u
6v6+YHXImTDVcin+cCpGqwrR57K8WWOsK9EI9OgGaXeYP89Z9U77cbrJtoOL
ViT15poB7C2WEbht0btitYtDfap4+XggImKSkrEJuLTKWw5hNcquyo4MetRH
CWlgI4Q99LBkAQE8UlW3ML2nRGB+vCCVkWN+U481wwU1oO9WGmgT4WL2p7Xk
YCFcdDVNrFNK8JMNi+twotjGXgzaDUQFhCOR/V5FP5lyfBoM+pSYb0N4hQYw
nJZrnbU0fWooYzOntcMaHcI31nkwthzE311VO19atHsVMX08UnvixFsTWs/L
GmdjfHEFsHBye9Zi4B6+eMYg2mq3ocO2yMvPApGkBglVYzh+ARyIEvvQo9Sy
r0gq6vhIGFkXalzaJ86YAA617PCErCcBGEj4NUEsLGD3MCeZXfMdST5FuPOd
kJOKszao7plArIdxYgml5NzcVmLXs+OOtRBWiGO09QkMZJhPg6xHon5Km7c/
wfnpJDxPJaFl8pBeAPb+zIldP6VW9O73d5+YdS9h06rOw1CScPC/bpvG8HMu
rE0bi8hbsFV9ARxdFE8CAkbhGFeURzTDdRDipHWZSkMGNCFRRCnOmGGM10x7
jhxxatTussmIkQGMWAMY9oh7k7yi3ZFOQuXayb264+RMrVSbToIcimjLJC1x
bgAtKv7o6hct4H1IiPTw7k5ShwCg9JydPXreu0QIt7VwM1AImeLXFdjM5AsW
oFPhW5rXabdq2oQ6MiUTSumlZHGiaV+pR/ndT3nzoMlBSc/aMLt2fo/l3xXA
CqG73Mg0XPwHuNKSIJ6QuQcMpk1dsSIyNGrhQNKXsl6dujRg74BiE2SQkiY4
0Bn1elyC2l4ADHQCTrAcwKNA6DGQMnDJqdA7ZWrEvgawbTolrU0uNdRH0AJA
KgNAfeb2IkAXDfueUSfFxyf9lDwUNpuq847IjnKQ8VrAtDC2aEh0u20KmBeW
yXNg66nCR148VC9STZnj7C9ybKALlfIqXsetQJZbA/+Uku4L/rf4jHdGHO+O
d6ue5QqlyHU5MDAf8yRSjQBNC4spTojZeCrgtFqeE+7Q+6sQpjtwvFfPt4+g
mBsV9edjTSPI+xsvIIJd44sVZ0Zy3liY07vsWkyoARjU93iZrsGMSBuXddKh
xjpznnbr9sC6NrmqPbgoJXouXVa4G4Mqgc1kciWGkibVPKFO/pjbJ9Fl5Yl+
exwgpSWFWeJCY66JzjjQoBmAI6oH1aOIhziPUyp0BSZvzenpSkoxUT+d3otW
NwPJrSie1i9meqbS6Lk9Sq76P7RDZwiosxzvMKw/Cvt2eO/keE3jVFPW2cBN
tujVWvNPCvvz3pfpSEp9FGJjfrXVcCFdo9f9YJDjqWDdBS6YPiAyk4U4HYYb
9vgeeoWhZjb4pHdDsgIxmO1pxgj6fim2i0GMF8L5MhBFIKLBwKPci+Pk2gqK
qPy50lQuoKqjolZkOBu28ZMsWY/kDePehhn7Emfi8CRoXnzZ/0hDCJ/6B2jc
2gRTeQHOqbQyUEiT2pWJ1wpbKQxTnTGZidMLt+QCR2VmGpdlFsfFS6U2spk6
d63Cjbhr19igCgBmwZQX9NvBr0f0qxo1/AWRHdY0kwtK0ZSfO/RD8S8e+Ko/
8CgaiH/BhWldTCw+ybk1uP/w6tT5/pHcux9s/ZCseRX2QiQgI7RjiaAynl3D
k03ALvAWkLnleFOsU7VkH5gLDkTy72T2NGo7wPHaqOLUVwIqTGbDQ5/LFw4C
cy82SPEePvuEHFGVDSCqmA00ZpdKKA5P2Fm0PQZpdk9OzWNjTg72olM9We4b
QEYdoTd98VrcnY6dwX6OcT+7ruzvmLEEbxlBSHemYTKtERjq/nsKjSMCxtTt
g+wLNXj66e5OEsTlzqKFEHshxNkCnb2A5/TZMW4nDMZmFR1n95Ct+sNjrZok
k3Ocyc5G2GpfOIto12xYx1gj7uQwwdeujJfGMriwElkq2E7E+hqK37DqGNkJ
WdmaG73O69xVfo0UlfqzOCOBBLIUnZG7jyqmoqph6WkyXh634NxuXxMp5Xmu
DG8Q8I5i3bE3dBhOIpuDN9xU/e9HZKwrtw0K7HyhL4/5auEbPDhUg1jIlq4q
2Xv/cQvi1e8/yMk0vuI4X7qasbNQQm1phScxeldXNzfUwoCTlMKksLN+C0iR
zz6DhD3TrEBpRBpHf/mCTAER7ElYwZr7pgV9BV7CqD13li1bHhaaBhAYHFY/
RnwdOfiUiw3bBxITQuAA4bE20j1gjTn4xhKjOfONi0Y0SsJUzqo1PRhjDvaD
XrGgEk3gd+bSZ7KJd0JOSRyYhH1NhCZ+u+Cwo0aHQj/KkRMfbb/bXKTkiNEd
sFjYthTSyDaGHbCAWVStq44kc139wuR3ilZI2tau1lxC4Jf5mpNiG85ScnB6
LdjC+Z2JDHIIzCcs3Q072jkjbNg5I44N9Uo10RXpvAyuoworFNqpV9oqqItw
HXSMpAqUUFWlEAq1EcFOg/xkktYVNRP1bdrCR5pBU6+wd5WJ6tXJhUwitMwG
gPRxtRY7Xfs4Ge0yOrjK1z7lOS89O+w5hVI1Lhd/8k+hh1nuzBye96frEbAE
hViPD8eiUezKg4cX6HAoPKxYLJ78ySWm/aOCcmaBAXEE1/c0XHFubvDIT9Qt
i+lByZREsddbe4XM3FFBvNJqHY1utneLPcgTd2w3a3HlLzGjjigsb5+nK4cN
8VrOiAYbpURXFdlmRLo9Cy3cAN41Lu1zAmkP/elZ6PwDCBaiytEAVbZxwY+U
+8BlfZfXt6SxYbGK5Ov0zTTNuRmjgh7le68j9v6a0vWM7WEq2pXmxSRmBcw3
cu5R8SJWc3PVJO5MPWus9pFuluVaGRM6ze67nBpDWNc7NfICnsyDyM3x3Fzj
zcIcBQlCUSrhJGna1dNQuv9m5Bpwlzh0/49ggDaMpIaUkkSaBH6qJbeU9hZz
WJ69xanjI6Ijgjys5o2SRJ1qLh4J8ckNFgJgN10z3v6Sg7Ts2pISrEhga2yo
cYKEXM3svgVF3flhXcPhzImpUBay/nknoOTiIooFw8X5qiNqKMkqHulxu4jf
i6YqLEFSdLU99BRY9NvDNbPe4hoH7CL0nh4qrBhDS2Yax5Jf7KG1gdm0vpOL
09fRMk98MV6kLhFIoiUpvyBBanj6dZVVbRwMWsaVX/zcuZTy9vQxNoUJWru3
hH67lxd7e+Y7+Qz+ICjGI17BiN//QYe8giNjfEnLEc0l6nW3+SqnBCXK/Bmu
4J/fusR3ZhIsEa3wah7VtVxJITRVVSpKDCSI2C7a/jHEYOo2i60hlccTmJwp
HjJPhlsYsFe1PmaHSy8Dp1tV+8Hsom76Xcd6/NiG0AGxxe/RqhYejt8eltca
hpGH9ACcY9OtdRbN94x4IJ1tbKtOv4wE3pXPDNt1ZKRE0AwTe2Le9RUwfN6y
6l0cQDNUHd2jfX2W97eLjAGLAPfmDg2lZNfjYZD6JhvibvG2DLvqJxpAdn1T
ht4j45LgFtblZ319/q5Q0ZgbKNAyIm9QHwdIz3NSQvxMQboT+Tak1Umsnvau
IL74AC7OmRbDJtiwRj8Frr+e7jNeteDAOMhyAqGEI7IpiY8QHnzrdBjPIrYB
rHBSKLAWlP2ECBWrBMqMFDZf7SM46dmmIBC/B5m9MW82FiOvDWqKvZTF0NfF
mjeioKM1did5Q3ram5FkP5XQi0Pk9PT0yxc8gn5xxF/gO2OoOfsyrHQRzthS
3kvr+dvQ1B7jHU6TG7ArbotIY9CDBUcCBeHu4Vd1vmfth+3G+VS7F52MXFC+
dK1/vL0VGXNdSRey/fC/yZ5AtajmnNFrrESUmqVtAfVAqQBFYudHWxQzUgSR
DNdBQ7wwIwqvdOO81yyHlRVps0p5E0VJ7TTVeuq15eT7LKnRH0kZbNhBVxO2
Dwy3ocHzsEkoJpO1nOilcZJQVg37aGpniXAvHejABb6hQdrJBUmeS0zR4v2w
cTTYkEum6G0LEd35PaJYKap+RYEShXkboR43wKYEt4zahuSoh7dPwLQYWDHE
MV+DsgBSzHWa75DuHfCdcoxPyIseehHRMSScBhguaXuy1K/juLe6tpA3tcQW
F3BLzUlgzh6vyZteldwNyzK+BGzb42TC38FEwvN/ldfhGefd8+agQOc5Cg7z
pZbPmcGR9RsljHE7Tqkinjop6mKreAbMDlGjDm6w4MR7uSQMTJBBCRiHily+
shV2ExXMvHv9Yc89jG8R0FSKYHdBa5jEXAYX8Kn0njJ5+9qbuuY+r5TELUUc
kuQut5DZxxxVYay2SlyqHxbNerIM9FGei7CIvYZx/iF5nd+6sh+8s+1AFqhK
SEat1trO7IraNf4sTfZ88k44V1CUuOV1JYwhPk3TlX8DBFyaJHPxt5q6xnGJ
fkNheeEICFKsGm+CrFbAD0nx2bn1I6Q+gjOVgYHYJyIyv5WgFrbloKC8CnGC
THiNL+VT4/SdjyfIvqjsaSwcg6iENU4+JO3F3yZwI2pLf24SrBvhkhKYo18U
BTeLb8jQYA1GZn0RU7A91Ql36OUAmWsfxWXGY+ARgLBPzTsfItYuqLwN01f8
LkEue+KXM3jkdn0AGKIuiiTAttnOvCerxxUzEqmyEVmQ3V7+FQxLdLYh/ROb
R9MFiNkxbXSLcl03vRuE8wDj8FAeda68vL6NsSzgQlH19gX8cEL83UdiSPge
gdF3bwSBqTgoxU52/3o/zbWFdYrCg8XvjMUf51xFBVOeUn07YdXgpTviWl98
5OJa22Kx1KV3EzRyduHXgJOzOzl0032FydLEejLd7k5d3Xd2h5canFjgpEgv
dZl1uaVLRiIkF/jv2RZ5sk3otiJ2eRemdefUUblaxm7I4QpyYsJer0oncSst
TPrNEnYul4p1kjEYdbsMEgIwPTNpOuKF2AdE2shL57r4DWbh5YWqCyWdx6+Z
bN0rFaXBny1JeeRgi2vcGfRhJEOdTuWjVs0Ghq0wmsFkTT3sYP/4wixqbZwH
FjwR4uGBbIA73+lB3SBqUteg5o/ZO082yorCPpAUtcC1iT7q1FVIYFdnZcj9
DcJTD/kiDx2fZldV2j13SqpSyrmSaNhZK/Gdq7TwOoEVi87V3NNtR76JwOL0
uCIt6yQysezKVEQoPAn6q1RwRN26C9URZDUsFuwd0vjuvlwYpEjccwVoVkqK
FWCkuLOqIT1BQNz5+iCXcOuaVquLGqvmEFLYIOfgxUsHETZ2tNcjd8sOm8dj
GYf0yeulLmu9DCaPoOVCVWd1MlvrGwnRV8DbmHEfC21c7EE/4hIKe6Yjt/BC
DaTXcAK8bQKTz4Efwaac3RrAoupk5Wtu2Gjr+PZqvIy6iXQkbNwdtFsWYPn8
a/i/wJoE7EqNHWH4DXtBXVDUV7vkgo4w7VFVQzxokS9tukmxKSRoZmvpJ5G4
Wq6cItxw6jrnjs/AgxwtuS23sDl+OU7ckjvrtOtiXksHSlwU/arSyhKreagI
DB/Yd7shHvsOa1L8S4aCHoO/8tIGzdkiqxnRa0WqJzpzGpccGXScHygTIauV
N3Lkq+ff/oSDeqlb8p7KkTfU8ZXJKx8Ct54sj68LN/gWZ/Pjn7w6xEEWZEv7
eMj92DynTjfCKrKEKIZwoUwyuFncLzXkFWAMaAAw6ULm4Eo3CV02vewozook
1A2KVvX9H9RrakzJdfS0QFkatAJge1BTdFxREVMkG8rI4xd2U4m93KSAee4u
VJTJa/+0wmXkBaK+xmpFjgNOyC2qSlrmIhMLWr8Diu/LK6nShwoDWFQp6jN3
e+2BQc+IVEPJD2CtGN1UDSM7tiFn4Ry+60tqdMQ5I18RfzzRl+EcHrwc6wGC
b5nGvkWNc6DCfXDZBxYsFZudoNco3/CUm2fxm0C2g8y/c5A7fqaol4EE4Moh
bXdLr6NvNP8Qm4Ujo/Rj6azYCY6rb8t117qmxnW+6Bx54zjFed+uYZfeVAKW
5QJFHjcA2wMTOf9sLjpAT7DRQBm8xDjw64S7g70CVlXiX2sqkwIDvVqZ19Vy
afHNVe9AeJY/V/ABNsPNp+b1Qw149LpbrdArinM9grL/NqlBcaDley/oVIcI
5+Lvk4fD51VhbzNW3LIojcurcc4kc9XtQavg8HV5e3CUamG+xzgxbPw2rdoW
dOh70JjeZPBLXVggwzvAhXd2hRj+Ayg37/Lyc/WYTM37HOQEUPNH/B+0SRzw
LxsUxhVmrFwnRLi3gKI1fD01N/DVHWBqibN38JH5M1jzIGc+V1OEd2r+vCnB
HpuaD0lXmB+BPgGR7vIVqEcb8yMFZ0Vl/f/5BxBP8F9ScXFM3Kjqlpro9RwI
XpPS8JakhYbvKU64zOzt67l48tyrZrjbU7/OqfLxlL5NIfqWV1WC9vr9PmXY
INj3kughELoZ/lRV95z/hyXKoIm02MtH9TDxXUpn5bSKsoGW5ER3ybXa+xvA
WKPNCaKx5Tcihy9CIFOLp/vll4vry483V5eY9CWv+i3QqtXmqIDAF2CWUXbu
0cGRpO26Hs76+tuWktfXgbJDjWWZCXy8utnHrg2iFTJLpincSxMy12M4yLLQ
7O/KSVVpEDDSNsVfStzxf+Qy9E27cBk/wCOrjbkE9RgN+9bcAasFUWEuN2Wy
ytNG3oETZ2A1oSEwDeDvL693TcBqL65uMFt49uEvCGq2pHvdA303Qiw+Hmxd
to0sZQNcswzb0myFP3ZJBtBL9byC8gk7EnP9EqmkYyiu1afYYg9dkluw432y
Udwgar3Vt/28FhWAiSmkOGzhxtUR7tVAaTR4YGnKna5gT1lIfyOvZ3ehtvFX
WyP9G2lKLW4JIjuXdOrfVoT1qvqOpKR0CgDJdC7alR4Blet0wjlOgVU0eGFl
+EojUiFcRk/g2fR+n+kgAbUHmemYrzNU1QK788apMP4ZkFoZFmBieWtQTRUn
7XJbnyBUHb6srRn3h6hSoqawr81zKTbex5A51dvpwGHx55QjNxyXwHIp1HBn
6ukg1ddPj++V4hcNhpYkYx9eHVVp0mspxnwQg0RQRMZcGqYD8NEHKdiLRCnR
IxIirOuYTwUCvkXV3DW3DAGOzMSX/worc72oRbozyW9/2y0LxovriwGZXVcl
mz+3/n0E7u0HZdTRkRqpRj6S3yhUv8FcV3kr9ZY3qfAmuOFa+DZy8d/t00qJ
exeDtDr/BtQsrtHd9oIafhmT9siNu94eH0yHXXO/elJSLIP3JJgFHORz3OrX
BZ/i9wLgx/HLAIJF4369wz69fqTvQut6LorgxFGXQigkAra+vSZoUYAYHnhf
+Gn1M3/SNw2Zd98dDl6PLD2YNprbzz3yfDCS9tZrFuv7Xa7GE0fwEBfcYQkR
MgVNGQwKdkf3y6J7Y1VJFsd6oFNzaW802PWpVA4veN4b1vq3TeIT1PpqQc0t
ZrOZWYBtMvkf+0+RHFSMAAA=

-->

</rfc>

