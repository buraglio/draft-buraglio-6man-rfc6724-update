<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC8028 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8028.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC6555 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6555.xml">
<!ENTITY RFC8305 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC3587 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3587.xml">
<!ENTITY RFC8925 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8925.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
<!ENTITY RFC4862 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC3493 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3493.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-6man-rfc6724-update-20" category="std" consensus="true" submissionType="IETF" updates="6724">
  <front>
    <title abbrev="Prioritizing known-local ULA in RFC 6724">Prioritizing known-local IPv6 ULAs through address selection policy</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2025" month="June" day="16"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 57?>

<t>This document draws on several years of operational experience to update the recommended process of Default Address Selection for Internet Protocol Version 6 (IPv6) defined in RFC6724, defining the concept of "known-local" Unique Local Address (ULA) prefixes that enable ULA-to-ULA communications within fd00::/8 to become preferred over both IPv4-IPv4 and GUA-to-GUA (Global Unicast Addresses) for local use. The document defines the means by which nodes can both identify and insert such prefixes into their address selection policy table. It also clarifies the mandatory, unconditional requirement for support for Rule 5.5 defined in Section 5 of RFC6724 and demotes the preference for 6to4 addresses. These changes to default behavior improve supportability of common use cases, including automatic / unmanaged scenarios, and makes preference for IPv6 over IPv4 consistent in local site networks for both ULA and GUA prefixes. It is recognized that some less common deployment scenarios may require explicit configuration or custom changes to achieve desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 61?>

<section anchor="introduction"><name>Introduction</name>

<t>Since its publication in 2012, Default Address Selection for Internet Protocol Version 6 (IPv6) <xref target="RFC6724"></xref> has become an important mechanism by which nodes can perform address selection, deriving the most appropriate source and destination address pair to use from a candidate set by following the procedures defined in the RFC. Part of the process involves the use of a policy table, where the precedence and labels for address prefixes are listed, and for which a default policy table is defined.</t>

<t>It was always expected that the default policy table may need to be changed based on operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, which include Section 10.6 where a ULA example is presented.</t>

<t>This document is written on the basis of such operational experience, in particular for scenarios where ULAs are used for their intended purpose as stated in <xref target="RFC4193"/>, i.e., they are designed to be routed within a local site and by default not advertised, used or received from external locations to that site. The document defines how preference for ULAs may be elevated for appropriate, common scenarios.</t>

<t>To support the preference to use ULA address pairs over both IPv4 and GUA address pairs for local intra-site scenarios, the concept of a "known-local" ULA address is introduced. This document describes the means for nodes to determine ULA prefixes that are known to be local to the site they are operating in and to insert those prefixes into their policy table with a label that differs from general ULA prefixes. This capability allows nodes to prefer ULA-ULA communication locally, but still use GUA-GUA address pairs for external communication, and importantly avoid selecting a ULA source to talk to a non-local ULA destination.</t>

<t>This document also reinforces the text in Section 5 of RFC6724 to require support for Rule 5.5.</t>

<t>RFC4193 defines ULAs within fc00::/7, where the L bit, as detailed in Section 3.1, is set to 1 for locally assigned (generated) prefixes, with L=0 as yet undefined. The use of known-locals as described in this document therefore applies to the currently used ULA prefixes under fd00::/8, where the prefixes conform to the definition in Section 3.1 of <xref target="RFC4193"/>.</t>

<t>The overall goal of this update is to improve behavior for common scenarios, and to assist in the phasing out of use of IPv4, while noting that some specific scenarios may still require explicit configuration.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC1918 addresses, and may or may not use some form of NAT. However, this document makes no comment or recommendation on how ULAs are used, or on the use of NAT in an IPv6 network.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>GUA: Global Unicast Addresses as defined in <xref target="RFC3587"/></t>

<t>ULA: Unique Local Addresses as defined in <xref target="RFC4193"/></t>

<t>Known-local ULA: A ULA prefix that an individual organization/site has determined to be local to a given node/network</t>

<t>RA: IPv6 Router Advertisement as defined in <xref target="RFC4861"/></t>

<t>PIO: IPv6 Prefix Information Option as defined in <xref target="RFC4861"/></t>

<t>SLAAC: IPv6 Stateless Address Auto-configuration <xref target="RFC4862"/></t>

</section>
<section anchor="operational-issues-regarding-preference-for-ipv4-addresses-over-ulas"><name>Operational Issues Regarding Preference for IPv4 addresses over ULAs</name>

<t>With multi-addressing being the norm for IPv6, more so where nodes are dual-stack, the ability for a node to pick an appropriate address pair for communication is very important.</t>

<t>Where getaddrinfo() as referenced in <xref target="RFC3493"/>, or a comparable API is used, the sorting behavior should take into account both
the source addresses of the requesting node as well as the destination addresses returned, and sort the candidate address pairs following the procedures defined in RFC6724.</t>

<t>The current default policy table leads to preference for use of IPv6 GUAs over IPv4 globals, which is widely considered preferential behavior to support greater use of IPv6 in dual-stack environments. This helps in allowing sites to phase out IPv4 as its evidenced use becomes ever lower.</t>

<t>However, there are two issues with preference, or rather non-preference, for ULAs as originally defined in RFC6724.</t>

<t>One is that the same default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses, such that IPv4-IPv4 address pairs are favored over ULA-ULA address pairs. For many site operators this behavior will be counter-intuitive, given the IPv6 GUA preference, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addresses are used in IPv4/IPv6 dual-stack network scenarios. The expected default prioritization of known-local IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addresses, does not happen for ULAs.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default. Local preference of ULAs over IPv4 is thus important to assist operators in phasing out IPv4 from dual-stack environments and is an important enabler for sites seeking to move from dual-stack to IPv6-only networking.</t>

<t>The other issue is that where nodes in a dual-stack site are addressed from both ULA and GUA prefixes, RFC6724 will see GUA-GUA address pairs chosen over ULA-ULA. One goal of ULA addresses was to allow local communications to be independent of the availability of external connectivity and addresses, such that persistent ULAs can be used even when the global prefix made available to a site is withdrawn or changes.</t>

<t>This document therefore introduces two changes to RFC6724 to support a node implementing elevated or differential preference for  known-local ULAs, i.e., ULAs within a common local network, over both IPv4 and IPv6 GUAs.</t>

<t>The first change is an update to the default policy table to elevate the preference for ULAs prefixes such that ULAs, like GUAs, carry a higher precedence than all IPv4 addresses, making IPv6 precedence over IPv4 consistent for both ULAs and GUAs.</t>

<t>The second change is the introduction of the concept of known-local ULAs. RFC6724 includes a method by which nodes <bcp14>MAY</bcp14> provide more fine-grained support for further elevating the preference for specific ULA prefixes, while leaving other general ULA prefixes at the precedence described in the previous paragraph. This document elevates the requirement for specific ULA prefixes to be inserted into the policy table to be a <bcp14>MUST</bcp14>, but only for observed prefixes that are known to be local, i.e., known-local ULAs. Nodes implementing this behavior will see ULA prefixes known to be local to the node's site having precedence over IPv4 addresses and also over IPv6 GUA addresses, such that they can use ULA addresses independently of global prefixes within their site and continue to use GUA-GUA address pairs to talk to destinations external to their site.</t>

<t>These changes aim to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. The changes are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was formally deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addresses has further declined, with very little evidence of its use on the public internet. Note that RFC7526 does not deprecate the 6to4 IPv6 prefix 2002::/16, it only deprecates the 6to4 Relay IPv4 prefix.</t>

<t>This document therefore demotes the precedence of the 6to4 prefix in the policy table to the same precedence as carried by the Teredo prefix. Leaving this entry in the default table will cause no problems and will help if any deployments still exist, and ensure 6to4 prefixes are differentiated from general GUAs.</t>

<t>The discussion regarding the adding of 6to4 site prefixes in section 10.7 of RFC6724 remains valid.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>This document makes three specific changes to RFC6724: first to update the default policy table, second to change Rule 5.5 on preferring addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14>, and third to require that nodes <bcp14>MUST</bcp14> insert observed known-local ULA prefixes into their policy table.</t>

<section anchor="policy-table-update"><name>Policy Table Update</name>

<t>This update alters the default policy table listed in Rule 2.1 of RFC 6724.</t>

<t>It should be noted the order of rows in the policy table is of no consequence and only the precedence value is relevant.</t>

<t>The table below reflects the current RFC6724 state on the left, and the updated state defined by this RFC on the right:</t>

<figure><artwork><![CDATA[
                    RFC6724                               Updated                  
Prefix       Precedence Label        Prefix        Precedence Label              
::1/128              50     0        ::1/128               50     0
                                     $known_local/48       45    14 (**)
::/0                 40     1        ::/0                  40     1
::ffff:0:0/96        35     4        ::ffff:0:0/96         20     4 (*)
2002::/16            30     2        2002::/16              5     2 (*)
2001::/32             5     5        2001::/32              5     5
fc00::/7              3    13        fc00::/7              30    13 (*)
::/96                 1     3        ::/96                  1     3
fec0::/10             1    11        fec0::/10              1    11
3ffe::/16             1    12        3ffe::/16              1    12

(*) value(s) changed in update
(**) $known_local = the ULA Known-Local /48 IPv6 prefix(es) (if any) 
with precedence and labels per the rules in Sec 5.3

]]></artwork></figure>

<t>The update moves 2002::/16 to de-preference its status in line with <xref target="RFC7526"/> and moves the precedence of fc00::/7 above legacy IPv4, with ::ffff:0:0/96 now set to precedence 20.</t>

</section>
<section anchor="rule-55"><name>Rule 5.5</name>

<t>The heuristic for address selection defined in Rule 5.5 of Section 5 of RFC6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.</t>

<t>The text in RFC6724 states that the Rules <bcp14>MUST</bcp14> be followed in order, but also includes a discussion note under Rule 5.5 that says that an IPv6 implementation is not required to remember which next-hops advertised which prefixes and thus that Rule 5.5 is only
applicable to implementations that track this information.</t>

<t>This document removes that exception and elevates the requirement to prefer addresses in a prefix advertised by a next-hop router to a <bcp14>MUST</bcp14> for all nodes.</t>

<t>This change means that an IPv6 implementation will need to remember which next-hops advertised which prefixes
<xref target="RFC8028"/>, despite the conceptual models of IPv6 hosts in Section 5 of <xref target="RFC4861"/> and Section 3 of <xref target="RFC4191"/>
having no such requirement.</t>

</section>
<section anchor="automatic-insertion-of-known-local-ula-prefixes-into-the-policy-table"><name>Automatic insertion of known-local ULA prefixes into the policy table</name>

<t>Section 2.1 of RFC6724 states that "an implementation <bcp14>MAY</bcp14> automatically add additional site-specific rows to the default table based on its configured addresses, such as for Unique Local Addresses (ULAs)", but it provides no detail on how such behavior might be implemented.</t>

<t>If a node can determine which ULA prefix(es) are known to be local, it can provide differential treatment for those over general ULAs, and insert these into the policy table at a higher precedence than GUAs while keeping all general ULA prefixes to a lower precedence.</t>

<t>This document thus elevates the <bcp14>MAY</bcp14> requirement above for insertion to a <bcp14>MUST</bcp14> for the specific case of known-local ULAs.</t>

<t>These known-local ULA prefixes are inferred from ULA addresses assigned to interfaces or learned from Prefix Information Options (PIOs) in Router Advertisements (RAs) <xref target="RFC4861"/> received on any interface regardless of how the PIO flags are set. Further, they are learned from Route Information Options (RIOs) in RAs received on any interface by Type C hosts that process RIOs, as defined in <xref target="RFC4191"/>.</t>

<t>Section 3.1 of RFC4193 only defines ULA prefixes where the L-bit is set to 1, i.e., prefixes under fd00::/8 where the prefix is locally assigned or generated. The use of ULAs where L=0, i.e., prefixes under fc00::/8, is currently undefined.</t>

<t>The following rules define how the learnt known-local ULA prefixes under fd00::/8 are inserted into the address selection policy table for a node, through a conceptual list of known-local prefixes.</t>

<t><list style="numbers">
  <t>Any RIO or PIO that is delivered in an RA in which the "SNAC Router" RA header flag bit <xref target="SNACBIT"/> is set <bcp14>MUST</bcp14> be ignored when considering the following rules.</t>
  <t>RIOs from within fd00::/8 are considered the preferred information source for determining known-local ULAs and should override other conflicting information or assumptions from other sources, including PIOs.</t>
  <t>RIOs within fd00::/8 that are of length /40 or longer <bcp14>MUST</bcp14> be added to the known-local ULA list. RIOs for shorter prefixes <bcp14>MUST NOT</bcp14> be used to insert known-local ULA entries in the address selection policy table</t>
  <t>PIOs received within fd00::/8 that are not already in the nodes known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48, regardless of how the PIO flags are set.</t>
  <t>ULA interface addresses from within fd00::/8, particularly ones not created by SLAAC, and not already covered by the known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48. However, as with rule 1, if the ULA interface address was generated on the basis of a PIO that has only been seen in RAs in which the SNAC router flag bit is set, this ULA prefix <bcp14>MUST NOT</bcp14> be used as described in this rule (rule 5).</t>
  <t>Regardless of their length or how the PIO flags are set, other PIOs from within fd00::/8 that are not already covered by the known-local ULA list <bcp14>MAY</bcp14> be added to the list, but only with the advertised prefix length.</t>
  <t>When inserting known-local ULA entries into the policy table, they <bcp14>MUST</bcp14> have a label of 14 (rather than the default ULA label of 13) and a precedence of 45.</t>
  <t>Entries <bcp14>MUST</bcp14> be removed from the known-local ULA list and the Policy Table when the announced RIOs or PIOs are deprecated, or an interface address is removed, and there is no covering RIO or PIO.</t>
</list></t>

<t>When support is added for the insertion of known-local ULA prefixes into the current policy table it <bcp14>MUST</bcp14> default to on, but a mechanism <bcp14>SHOULD</bcp14> be supported to administratively toggle the behavior off and on.</t>

<t>Tools that display a node's current policy table <bcp14>MUST</bcp14> show all currently inserted known-local ULA prefixes.</t>

<t>The identification and insertion of known-local prefixes under fc00::/8 is currently not defined.</t>

<t>Note that a practical limit exists on the number of RIOs and PIOs that can be placed into a single RA. Therefore, there is a practical limit to the number of known-local ULAs that can be expressed on a single network and the number of ULA prefixes that can automatically be preferred over IPv4 and GUA prefixes within the policy table. This limit is unlikely to impact most networks, especially residential and other small unmanaged networks that automatically generate ULA prefixes.</t>

<t>Section 4 of RFC4191 says "Routers <bcp14>SHOULD NOT</bcp14> send more than 17 Route Information Options in Router Advertisements per link. This arbitrary bound is meant to reinforce that relatively few and carefully selected routes should be advertised to hosts." The exact limit will depend on other Options that are used. So while this is not the practical limit discussed above, operators <bcp14>MUST</bcp14> take extra care not to cause the RA size to exceed the MTU when filling the RA with RA Options when exceeding this limit.</t>

<t>Note that in the case of Rule 2 above it would be expected that ULA prefixes being included in the known-local prefix
list be compliant with Section 3 of RFC4193 (i.e., /48 in size) but the above rule is pragmatic in that it allows
the use of ULA prefixes from /48 to /40 in length.
Most networks use ("are expected to use") /48 prefixes as per
RFC4193. However, it is possible that in some circumstances a
larger managed enterprise may wish to use a shorter prefix (e.g., to simplify management, filtering
rules, etc, and to overcome the issue with the number of RIOs an RA
can carry as described in the above paragraph). However, such
non-compliant use of ULAs may be problematic in other ways, e.g., carrying an increased risk of collision with other
ULA prefixes, where you might be using someone else's compliant prefix because shorter prefixes have a lower chance to be globally unique.</t>

</section>
</section>
<section anchor="configuration-of-the-default-policy-table"><name>Configuration of the default policy table</name>

<t>As stated in Section 2.1 of RFC6724 "IPv6 implementations <bcp14>SHOULD</bcp14> support configurable address selection via a mechanism at least as powerful as the policy tables defined here".</t>

<t>Based on operational experience to date, it is important that node policy tables can be changed once deployed to support future emerging use cases. This update thus re-states the importance of such configurability.</t>

</section>
<section anchor="intended-behavior"><name>Intended behavior</name>

<t>In this section we review the intended default behavior after this update is applied.</t>

<section anchor="gua-gua-preferred-over-ipv4-ipv4"><name>GUA-GUA preferred over IPv4-IPv4</name>

<t>This is the current behavior, and remains unaltered. The rationale is to promote use of IPv6 GUAs in dual-stack environments.</t>

</section>
<section anchor="gua-gua-preferred-over-ula-ula"><name>GUA-GUA preferred over ULA-ULA</name>

<t>This is the current behavior, and remains unaltered for the general case.</t>

<t>However, where a ULA prefix is determined to be local, and added as a known-local ULA prefix to a node's address selection policy table, communications to addresses in other known-local ULA prefixes will prefer ULA-ULA address pairs to GUA-GUA (matching label, higher precedence).</t>

</section>
<section anchor="known-local-ula-known-local-ula-preferred-over-gua-gua"><name>Known-local ULA - Known-local ULA preferred over GUA-GUA</name>

<t>As described in the previous case, this document elevates preference for use of ULAs over GUAs in cases where the ULA prefix(es) in use can be determined to be local to a site or organization.</t>

<t>By only adapting this behavior for known-local ULAs, a node will not select a ULA source to talk to a non-local ULA destination and will instead correctly use GUA-GUA.</t>

<t>Nodes not yet implementing this RFC will continue to use GUA-GUA over ULA-ULA for all cases.</t>

<t>As an example, consider a site that uses prefixes ULA1::/48, ULA2::/48 and GUA1::/48.</t>

<t>Host A has address ULA1::1 and GUA1:1::1
Host B has address ULA2::1 and GUA1:2::1</t>

<t>Both ULA prefixes have been determined to be known-local through RIOs.
Perhaps ULA2 is reachable within the site, but its prefix is not in direct use at host A.</t>

<t>If host A sends to host B the candidate pairs are ULA1::1 - ULA2::1 and GUA1::1::1 - GUA1:2::1.</t>

<t>In this case ULA1::1 - ULA2::1 wins because of matching labels (both 14) and higher precedence than GUA (45 vs 40).</t>

<t>If host A were to send to a host C with addresses ULA3::1 (where ULA3::/48 has not been learned to be a known-local prefix) and GUA2:1::1, host A would use the GUA address pair for the communication as the GUAs have matching labels (both 1) where the known-local ULA and general ULA do not (14 and 13 respectively).</t>

</section>
<section anchor="known-local-ula-ula-preferred-over-ipv4-ipv4"><name>Known-local ULA-ULA preferred over IPv4-IPv4</name>

<t>This update changes previous behavior for this case. RFC6724 as originally defined would lead to IPv4 being preferred over ULAs, which is contrary to the spirit of the IPv6 GUA preference over IPv4, and to the goal of removing evidenced use of IPv4 in a dual-stack site before transitioning to IPv6-only.</t>

<t>This document elevates the precedence of known-local ULAs above IPv4, so known-local ULA-ULA address pairs will be chosen over IPv4-IPv4 pairs (matching label, higher precedence).</t>

</section>
<section anchor="ipv4-ipv4-preferred-over-ula-gua"><name>IPv4-IPv4 preferred over ULA-GUA</name>

<t>An IPv6 ULA address will only be preferred over an IPv4 address if both IPv6 ULA source and destination addresses are available. With Rule 5 of Section 6 of RFC6724 and the ULA-specific label added in <xref target="RFC6724"/> (which was not present in <xref target="RFC3484"/>) an IPv4 source and destination will be preferred over an IPv6 ULA source and an IPv6 GUA destination address, even though generally known-local IPv6 ULA addresses are preferred over IPv4 in the policy table as proposed in this update. The IPv4 matching label trumps ULA-GUA.</t>

</section>
</section>
<section anchor="discussion-of-ula-source-with-gua-or-remote-ula-destination"><name>Discussion of ULA source with GUA or remote ULA destination</name>

<t>In this section we present a discussion on the scenarios where a ULA source may be communicating with a GUA or ULA destination.</t>

<t>A potential problem exists when a ULA source attempts to communicate with GUA or remote ULA destinations. In these scenarios, the ULA source as stated earlier is by default intended for communication only with the local network, meaning an individual site, several sites that are part of the same organization, or multiple sites across cooperating organizations, as detailed in <xref target="RFC4193"/>. As a result, most GUA and ULA destinations are not attached to the same local network as the ULA source and are, therefore, not reachable from the ULA source.</t>

<t>Scenario 1: ULA source and GUA destination</t>

<t>When only a ULA source is available for communication with GUA destinations, this generally implies no connectivity to the IPv6 Internet is available. Otherwise, a GUA source would have been made available and selected for use with GUA destinations. As a result, the ULA source will typically fail when it attempts to communicate with most GUA destinations. However, corner cases exist where the ULA source will not fail, such as when GUA destinations are attached to the same local network as the ULA source.</t>

<t>Scenario 2: ULA source and remote ULA destination</t>

<t>Receiving a DNS response for a ULA destination that is not attached to the local network is considered a misconfiguration. This contradicts the operational guidelines provided in Section 4.4 of RFC4193. Nevertheless, this can occur, and the ULA source will typically fail when it attempts to communicate with ULA destinations that are not attached to the same local network as the ULA source. This case provides a rationale for implementing support for known-local ULA prefix insertion in the policy table, such that differential behavior can be applied for known-local versus general ULA prefixes.</t>

<t>The remainder of this section discusses several complementary mechanisms involved with these scenarios.</t>

<section anchor="the-ula-label-and-its-precedence"><name>The ULA Label and its Precedence</name>

<t>RFC6724 added (in obsoleting RFC3484) a separate label for ULAs (the whole range, under fc00::/7), whose default precedence is raised by this update. This separate label interacts with Rule 5 of Section 6 of RFC6724, which says:</t>

<figure><artwork><![CDATA[
Rule 5: Prefer matching label.

If Label(Source(DA)) = Label(DA) and Label(Source(DB)) <> Label(DB), 
then prefer DA.

Similarly, if Label(Source(DA)) <> Label(DA) and Label(Source(DB)) = 
Label(DB), then prefer DB.
]]></artwork></figure>

<t>In the first scenario, the ULA source label, whether known-local or not, will not match the GUA destination label. Therefore, an IPv4 destination, if available, will be preferred over a GUA destination with a ULA source, even though the GUA destination has higher precedence than the IPv4 destination in the policy table. This means the IPv4 destination will be moved up in the list of destinations over the GUA destination with the ULA source.</t>

<t>If the ULA (fc00::/7) label is removed from the policy table, a GUA destination with a ULA source will be preferred over an IPv4 destination, as GUA and ULA will be part of the same label (for ::/0).</t>

<t>In the second scenario, if the ULA source has been recognized as being within a known-local prefix that has been inserted into the address selection policy table, then the known-local ULA source and general ULA destination will have different labels, and therefore IPv4 communication will be preferred.</t>

<t>If the ULA source has not been recognized as known-local, e.g., if the insertion of known-local prefixes into the policy table has been administratively disabled, its general ULA label will match the general ULA destination label and therefore, whether part of the local network or not, the ULA destination will be preferred over an IPv4 destination.</t>

</section>
<section anchor="happy-eyeballs"><name>Happy Eyeballs</name>

<t>Regardless of the preference resulting from the above discussion, Happy Eyeballs version 1 <xref target="RFC6555"/> or version 2 <xref target="RFC8305"/>, if implemented, will try both the GUA or ULA destination with the ULA source and the IPv4 destination and source pairings.
The ULA source will typically fail to communicate with most GUA or remote ULA destinations, and IPv4 will be preferred if IPv4 connectivity is available unless the GUA or ULA destinations are attached to the same local network as the ULA source.</t>

</section>
<section anchor="try-the-next-address"><name>Try the Next Address</name>

<t>As stated in Section 2 of RFC6724:</t>

<t>"Well-behaved applications <bcp14>SHOULD NOT</bcp14> simply use the first address returned from an API such as getaddrinfo() and then give up if it fails. For many applications, it is appropriate to iterate through the list of addresses returned from getaddrinfo() until a working address is found. For other applications, it might be appropriate to try multiple addresses in parallel (e.g., with some small delay in between) and use the first one to succeed."</t>

<t>Therefore, when an IPv4 destination is preferred over GUA or ULA destinations, IPv4 will likely succeed if IPv4 connectivity is available, and the GUA or ULA destination may only be tried if Happy Eyeballs is implemented.</t>

<t>On the other hand, if the GUA or ULA destination with the ULA source is preferred, the ULA source will typically fail to communicate with GUA or ULA destinations that are not connected to the same local network. However, if the operational guidelines in Section 4.3 of RFC4193  are followed, recognizing this failure can be accelerated, and transport layer timeouts (e.g., TCP) can be avoided. The guidelines will cause a Destination Unreachable ICMPv6 Error to be received by the source device, signaling the next address in the list to be tried, as discussed above.</t>

</section>
</section>
<section anchor="following-ula-operational-guidelines-in-rfc4193"><name>Following ULA operational guidelines in RFC4193</name>

<t>This section re-emphasizes two important operational requirements stated in <xref target="RFC4193"/> that should be followed by operators.</t>

<section anchor="filtering-ula-source-addresses-at-site-borders"><name>Filtering ULA-source addresses at site borders</name>

<t>Section 4.3 states "Site border routers and firewalls should be configured to not forward
any packets with Local IPv6 source or destination addresses outside the site, unless they have been explicitly configured with routing information about specific /48 or longer Local IPv6 prefixes".</t>

<t>And further that "Site border routers should respond with the appropriate ICMPv6 Destination Unreachable message to inform the source that the packet was not forwarded".</t>

<t>As stated in the above discussion, such ICMPv6 messages can assist in fast failover for TCP connections.</t>

</section>
<section anchor="avoid-using-ula-addresses-in-the-global-dns"><name>Avoid using ULA addresses in the global DNS</name>

<t>Section 4.3 of RFC4193 states that "AAAA and PTR records for locally assigned local IPv6 addresses are not recommended being installed in the global DNS."</t>

<t>This is particularly important given the general method presented in this document elevates the priority for ULAs above IPv4. However, where support for insertion of known-local prefixes is implemented, such "rogue" ULAs in the global DNS are no longer a concern for address selection as they would have the lowest precedence.</t>

</section>
</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using the introduction of RFC6724 as a measuring stick, the updates defined in this document will likely take several years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC6724 has been published but we continue to see existing commercial and open source operating systems exhibiting RFC3484 (or other) behavior.</t>

<t>While it should be noted that RFC6724 defines a solution to adjust the address preference selection table that is functional theoretically, operationally the solution is operating system dependent and in practice policy table changes cannot be signaled by any currently deployed network mechanism. While RFC7078 defines such a DHCPv6 option, there are few if any implementations. This lack of an intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually, renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

</section>
<section anchor="limitations-of-rfc6724"><name>Limitations of RFC6724</name>

<t>The procedures defined in RFC6724 do not give optimal results for all scenarios. As stated in the introduction, the aim of this update is to improve the behavior for the most common scenarios.</t>

<t>It is widely recognized in the IETF 6man WG that the whole 3484/6724/getaddrinfo() model is fundamentally inadequate for optimal address selection.  A model that considers address pairs directly, rather than sorting on destination addresses with the best source for that address, would be preferable, but beyond the scope of this document.</t>

<t>To simplify address selection, operators may instead look to deploy IPv6-only and/or may choose to only use GUA addresses and no ULA addresses. Other approaches to reduce the use of IPv4, e.g., through use of DHCPv4 Option 108 as defined in <xref target="RFC8925"/> as part of an "IPv6 Mostly" deployment model, also helps simplify address selection for nodes.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including (in alphabetic order) Erik Auerswald, Dale Carder, Brian Carpenter, Tom Coffeen, Lorenzo Colitti, Chris Cummings, David Farmer (in particular for the ULA to GUA/ULA discussion text, and discussion of using the specific fd00::/8 prefix for known-locals), Bob Hinden, Scott Hogg, Ed Horley, Ted Lemon, Jen Linkova, Michael Richardson, Kyle Rose, Nathan Sherrard, Ole Troan, Eduard Vasilenko, Eric Vyncke, Paul Wefel, Timothy Winters, and XiPeng Xiao.</t>

</section>
<section anchor="implementation-status"><name>Implementation Status</name>

<t>This section should be removed before publication as an RFC.</t>

<t>There are two known implementations of the ULA known-local preference mechanism.
The first implementation was created by Lorenzo Colitti at Google as a prototype solution, with public code available for reference on their android platform available to the public <xref target="ANDROID"/>. It was last updated in April of 2024, and does not include the capability to listen for RIO/PIO changes, but does support adding the ULA prefix learned on the interface to the known-local preference.</t>

<t>The second implementation was written by Jeremy Duncan at Tachyon Dynamics and made available as open source, reference prototype code available <xref target="RAIO-ULA-PY"/>. This implementation includes a full implementation written in python, including the capability to listen to RIO and PIO on the wire and adjust ULA known-local prefixes as needed. It was last updated in May of 2024.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RF 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC1918 addresses are used instead.</t>

<t>The requirements of RFC4193, stated earlier in this document, should be followed for optimal behavior.</t>

<t>Operators should be mindful of cases where communicating nodes have differing behavior for address selection, e.g., RFC3484 behavior, RFC6724, the updated RFC6724 behavior defined here, some other non-IETF-standardized behavior, or even no mechanism. There may thus be inconsistent behavior for communications initiated in each direction between two nodes. Ultimately all nodes should be made compliant to the updated specification described in this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="summary-of-changes-and-additional-text-since-rfc6724"><name>Summary of changes and additional text since RFC6724</name>
<t>This section should be removed before publication as an RFC.</t>

<t><list style="symbols">
  <t>Introduced concept of known-locals and rules for their insertion/removal in the table.</t>
  <t>Changed default policy table to move fc00::/7 to precedence 30, above legacy IPv4.</t>
  <t>Changed default policy table to move the 6to4 address block 2002::/16 to the same precedence as the Teredo prefix.</t>
  <t>Changed ::ffff:0:0/96 to precedence 20.</t>
  <t>Changed Rule 5.5 to a <bcp14>MUST</bcp14> support.</t>
  <t>Defined the concept of known-local ULA prefixes for currently defined RFC4193 ULAs with L=1 under fd00::/8, how they may be learnt, and the <bcp14>MUST</bcp14> requirement to insert them into the policy table.</t>
  <t>Added text clarifying intended behavior.</t>
  <t>Added text discussing ULA to GUA/ULA case.</t>
  <t>Added text for the security section.</t>
  <t>Added text to account for SNAC bit.</t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC6724;
&RFC8028;
&RFC4861;
&RFC2119;
&RFC4191;
&RFC4193;
&RFC7526;
<reference anchor="SNACBIT" target="https://datatracker.ietf.org/doc/draft-ietf-6man-snac-router-ra-flag/">
  <front>
    <title>SNAC Router Flag in ICMPv6 Router Advertisement Messages</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ANDROID" target="https://r.android.com/3046000">
  <front>
    <title>Optionally prefer known-local ULAs in Android</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="RAIO-ULA-PY" target="https://github.com/jeremy-duncan/raio_ula">
  <front>
    <title>Python known-local ULA implementation</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC8174;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&RFC1918;
&RFC6555;
&RFC8305;
&RFC3587;
&RFC8925;
&RFC3484;
&RFC4862;
&RFC3493;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAPmJUGgAA7V96XLbWHrofz4FriZVV+oiqV12605PRrbsaXVsybHk6TuV
SqUOgUMJYxDgYJGa3eU8S54lT5ZvPQsAqj3TFf2wJfLgLN/59g2z2WzS5m1h
z5MPdV7VeZv/nJf3yeeyeipnRZWaIrn68HiWfHp30STtQ1119w+JybLaNk3S
2MKmbV6Vyboq8nQzMYtFbR+fmQumSfIy+fj2dXL24uhkklVpaVawelabZTvL
bbucna1MOauXKQ6YdevMtHZ2dDBJTXueNG02abrFKm8aWLbdrOHRqzd3byf5
uj5P2rpr2qODg28Pjiamtga+K9vJ0/15cvb+4nry+Yk+sHVp29klLjjh6Ztz
3s3EdO1DVZ9PEvqZyf8JbBmGXM+TV11t7ou8cl/w5q/z9PPwu6qGhd+Utr7f
JLdpbsvUNsm1bZ+q+rMbZFcmL86ThTz8x2VVP5k6A7itC1PaOWx1fDd38+T1
AwC2t5W7fNX7nLbxQ96k/TVh6JyG/vGv8O3cpPPu8/haP8yTy65MTX+xH2xt
V5v+d7TgnUkfNoAYlxsYmqdNf/G/ZvTQH1sel8mweVqtJpOyqlemzR8t3gTg
Cl6O/Pry4Oil/Hry8uxQfj06PPxWPz389tD/eiy/vjg9OsNfb68vXr+6uuMb
bk19bwGpdh7adt2c7+8DLpi2NulnW88RFedwlH1A0f0+djalSWdAC4BLs9rM
loW539/hOZmYcJ3kIw1I3sK3iPRXr98jJcmnF9mjrdu8sStbtsl7ICdzbxFM
F9eXH2+uLrdssZ6bMqurPENI7R8fnJwdHBxES9+skSJNUWySdW2XsFSPABvc
zAXPgtC5uLqZwcezD3/ZsuZ93j50C1rwr3TjM768/drk1X90hYnW/7ABGiqH
VL9aF3RWQwwjmeTlsnfNcHN6t2enp6d648cH+uvx6csX+um3R+7Tk5cnHiWO
3Kd4+ZPZbJaYRYO32k4mdw95k8CFdgR0uNWnJoHNNBbuAva5saaGD5ZJtYa/
GYyJ/Qn+IOpN2iphhgGc0Ca1BYjARJnNANJVihwRnr20S9MVLVwwM8lbxyTh
vI7/AIus2iqtiuTPtkZelpwlu8hp95LMLvMS5mQ+ibg/5c+QmeLCaQWbWbe4
2E4A5p3kU5n/rbPJOwK6rr8L0N8jVMh/ssjDTZvY0iwKi/cyayu8/ASP0pV5
Sqdukie4clh/mR0cnJ/vv8STL/C4VnCqhv1VALRkUbUPKCFOZvhPAsiZ/OkT
zQr/Jbt/KqoFIgDO3DiY2GaPgMHY0TV2ntzBufzFEAQaOuzKGtjPYpM8PeTp
Q1JWGXwByMcr5xmMz5cbWhh4FZBU0nQwzp03L2HvMFFebxVbgPEAjXly1Sam
aKokLUydL3PdAExt2qreTBPAemBVuSBGbf/W5TXTL56m6dbrqubfP3YA3tP5
aXiZt7LoKV6c3CztO7OrqpXVGLyEbTjPWVud6L5tQ2BqAAEeTHmPD1Q4P2Hb
wj6YRxC6SGc13IzuxizyIm83uCReMSzf4QQGZpvCptKiQ1mTgOCrkBbTZB9O
CUcGZpQlTQqIAqIchuI+V+YzLNrbIWkHhAqEAACgJm9ahAkcmS+4yYFiShZ8
DT1Ed4doJ/jirosuAWgUaeu+zH+GTRDCNoh6BV6enCKz66LaEOzdLmGDG70V
JFu427zFHS3z+47pGYRTkoKSUK1CIIIMyoEFwKRNTpgdkP/a1CDrgGibOTAW
4ierPMsKO5n8Dqm5rrKO7nUyuc0RKHkLMOoWhdASguHo4PBo+tsZw78J0vx7
8mAapUegBLhyvGkAxcriqfJmNUYwcCjkuEMyQPZS54/KXlYVUKpZAxqt6xyZ
XVN1dWoFVZs2L/lgOs/aAG0hawTEWtYAWYPLZTkxygZOBHtZVkVRPekKxC2z
Dp4O6QO/gRPOkw+mJubmhjZIxo9V8ShEgivB9yai3ykcGPBSqQgWIBzFXRdm
YQvGPLdp5Q+gJyYFYmzGSI6DGHLGEVe4DGKnbHo+mQC2PsFdmOLJbBoSFWmr
OIsbGZ0B0bS0OAy5qiBiliyAKDMUR+PS5/8BLBldjuaHSYPr7TCx+PundWNJ
i0etHoFPwnlgk7gmLzjcH3I8OMyqYvJRqQcr3Bs87w4BaF0BSyWywQnsTwaX
a0IGd3gwFRAyg7HBN/MzuSZD9C+P4xpwIw1smsAay2n4/QmsCWAqCB1cFUCV
k7AlXj8OL2RvSL3A1EBFqZlFO1bBmyBtCDGgQ9DjCJYUcEKR6129rgDbACwN
wJMR9ZdfRLn88gUWmdv5FB/b0ETIQu5Ld7ekI2YqTk3IEBGWQBl6A2UFRKc6
IeAi7Qg2hJgMKlLGpGV/Qi4BU+BEfL10EcgiYdItchSU/D7bppMjIsImgQ88
0tmIQDzhT5XZOrDh1VRO0PXklbAAYusBa2h6ioLj+fEgrw8A8EGnJhgFAqin
+Ji+6hOsmpPUJ8YM2JT0lD7bpHW+iLQLXJv5JElUAPEK4EZzxnoT3jAtK9fL
GxZSoB07RBCkLEn1xyPDKFFQQD9u7KiGErEJRBpEGWRevHyWLwHYDaPCvS1J
aQ13KYdNzVrlvkG+2/jTiUmAmt9A7ePjFKDoLDrApzYvSDkjhW78whw6RvMw
I3VcCQwR8wi2hgocVDdo1yJX8PSm+EyCGDYaGg2BuBlwBVLVaktmRCrX2cKG
tqpabeWUgzFVDRYQsnZ0Q0SiqnBKqvCLUMy8SxZ5O0XmAEgDZm2s5x3PD6eI
iygCYe1Dj+IIkUb4xC7fI5CfV9KnfPfvvjvAuTfwfFeqzCEKFwEYUEDDu2Dc
FnEaQqvFTS+RswOBF7l1DDztQJmnSyKOE+E8rlo7I6AnYHkIaleoVMhsbKeo
3hNAArcb8E26TUucAcCR3Fdw4STxYc9iYuW0RVVnnX6LQOyzpakSGEK1aVWZ
WIOahNgGPBgnF6AhDyL5BNcOTJd1ElUxGxDgoPqnPaWSaeF51RKOdFGyOuyV
U4IZwj5B0VYDX22ArQIVseGCp66TCgdMaSFSzqvVQpC+kQ2fIQ3CMZ0rbsqs
9J7MK/1LTGhvL6javsFVSOsAIYNL0Fnp3mD+64u7efJ99YRG8LSHNqzyl1XC
pm4rEontXtGoS5IvkSid0rHKUFmDVZgT8iHEHACggRp9Rwy3Kqr7DePFZ2Ci
8HUGKs77T7d3O1P+P7m+od8/vvnXT1cf31zi77ffX7x7536ZyIjb728+vbv0
v/knX9+8f//m+pIfhk+T6KPJzvuLv+ww3HZuPtxd3VxfvNsZkhMelEVAzvdq
UX6aZhKR4KvXH/77vw5PAPH/jzipvnyRP14evjiBPwA7hF1WZbGRP1GGTIBM
rakJZIB6wNHzlm4aNRF02iVIiwC+b/4NIfPv58nvF+n68OQP8gEeOPpQYRZ9
SDAbfjJ4mIE48tHIMg6a0ec9SMf7vfhL9LfCPfjw9/9coESeHb785z8AygA1
nCfbfAvMCZ1ZQVwHPUdfvkwmgKXno26S8ceYWU0m/xI7s86Ti4BRimqAHC8D
KyrriKrvwQ77mShknxSDB5YSrFpkff3BJPeg5JUkp/eFNkAewUpXW32GY/t9
eXaI+/1wdSNPfuAtXqmzDYiSHYTPPX777uLitUxwi2ovWd5qt150bTWLrWp9
+gifBoK+CTTyq6bpALof7T37tWlLsQMhcHGwsojMZDL5EYXgCpTjfCbf4+ML
q2YkuomdD2LKdgvoBCylWOMhlRwuZAbae/qZtUhVjUjbpXGkGKEPHy4xNHwj
C1cFj1eXgCHAZjde0wFy/JEWvwd1AJ5F3WR3DyHtjhyg5AkbELQLmBgdDaj2
XXy4wpmZjZJeCZPzwUUEAv13BaAQ8GZWHk2aVh1gBOrYE36ELXYP1aW4LAHx
G5qNzg07e7LAXkwj0ntg3Vvce9vVpdrHjWr+3sbv64W/buqLSiZagKgg48Zy
YU0WaK4Obbw0Z+EY+KCcVBQjFHW4zAJ7JecUqDTksOXZSAY7yLbeuLmvrUGa
C9eBnXtkAon+mNdVibSoiveDLdaN8GyGAdI+bx8YgCVVhBG+IUeRRcuc0ALX
YZcOfmpRU3yyNUAokMxkN6PkeQLFiMmKFEUPGkInID3UOFCVDr9xZh+sXdX5
fc5BgtFruSlZAVM/RmNWW5wZpIavOziLjxOCwQIaAcqtmLhDjyPRAKorIAWD
AWTQ07KBUznCLwTAEgwK54JWWyYaNk/eks5TbtguY3OsqhsW5O7Gn1CxQycM
EpCtZ0BPXY4xialwZDy9IlkEaFWtUkIUss3Q09DmeiuwGXQH0eUXpkT3/TT0
VQg9WUB/ZEfotnH+dzKuAvzy/oqAMJ3jIiel6mSflU+PoSJIAvudrAfnpnIX
quFa0eiWw/gvmOR4voDKvO+ClJIHVFgkcuABFtxsVpEm2cpIh46oN8NZEFw0
V6AzcrCKnzLJY04IV62dz3R4VGI7Ndj0bIN4uBcY1AJAmMK5okFgAFegb/UT
sLVjsKt2TmOJjY5M5EyIuit7fg4CBLotnJVF8GndLTDEFeHPHD76MIuH81xU
loATKpD8tRDVdpFT0NlFngjQNRZYR/QkeRW28De26JvY28xRJPGsEZ9rrGVo
VACwRzuYEj7HU85I2fXQU2uQIE2MzTGfUJiTBy2Yjd1otZdz4iTbGl2YOl8A
gRl2u8W3kaKHpozYyzxBnqiGakyI6AJGKCPTF52uF09TWwEsQ3Qsls6/bR5N
XgRBmsCjUpZoPj+SFwcOMsok1xgj4HAL4QEFxoQrWGRfaFHQQiwUVWVdmcyt
XVjWQAmcOVMwhkY5WMJRkoH3xfsTnKutIbkUhFUCx4tKVdG3nIsakcW5H5Gi
ycMlYrkn8QdxbHW+hm4ao84BHiY4Nh3zQTrVYZ4w/i3h6lv1jjOya7jXeTeG
AhC+kxOMBfBob85b4i+O91/kn62Y9qmpQZU0yUN+j1QQRDBgfDkqTME4R/jR
OYLxo8G4MOrWKGE0Qngggyr4xJ8cD5IHsS3F1sAB27+MubtucfojT1/Z9qHK
+sEosPdcUIKUdlRAZvc1BRki39yyq9l5QgD2OmUEYuezCX1X6uEB9ZECW8xb
xnymiXGebIVgz49G34G20DUUDYSNrh/6bmVBgcap2VFkeGyHjiegT5iWEizr
Y9cCgyVo07Nflngnzlot4MlH0WV/xUetpDK8tWtmrSFBjmhIyCqjzW/1guMV
/98mEZuXYD+Km4Eag8wNtUj9cqA6eLIh9zoyuV6kgaSDY64FsdKI41nHIdjT
7kIwgNJw6M6FL8YFQuCjDoykxrNr58KnMAyRVRCoN/kqdGaGvARGZAVh6HIk
QSHwdkrMHvfsI/T7QeTeuyzFACDGwcEGFqOX378mM6YRD6W6k9020VrOm7Rr
RKsk6mTftpKCN+8kHKneauOoVeOUTOPs72+61crUmyCsi3G1TBgsMqLfhY4B
GBanPjCjAnWefD0ixVyGRG0LjIeiHCY/B9s1iHckWID/kLmBWWBgbnBE/lT0
71x4LCBXvrKh+hnvgDw4esTMpuiQyuTs5AYAEd4CxapJhzOgiUeTCRuhtAB2
GYJkQuJrZW3ZndeS3fbpSdqKMno8+tHBwdH5+f7hGVC28AT3ROMf+YiAYYLj
B58R5L00FEeySz+dLK5csceonKEYht8bkmw53wKOuEP7u9LtJO+EQRPTgQ2h
P6WMKESjYeQGRWiW+HQFH66YedBXaHon+RJRJPC/N+K6tz+BHOQLByOlq6Pz
OMx3ukerqqQKjEBYCoEggtfOp0WqXJYJHdPcxGGCIJ8ji8OD+YswLlVjSiTw
kkdT5BkRwkX2165pef+sR0l+6t2Ic759qG0QuBjqX+ei2MTZa2O6zFQ1AZ8k
4BKZiJ7JJiGCDtgu5mEwXvj4tV52CQxy9lCtWcNkIUaxmoe8zsKIHBGBqAfo
vpZQqZNx/XTCX4ueIhyBo/And5ztRocXIAokTIGZPduVO84MId8IAuKIA1l6
IZwAIu64BYWTKPkDiKbGyBkMrTH6OkYvnL9AkRU46t86l6xCtNyjQUANtolq
0jPI04i4yFOxuwUAglKjCaN6DscoeUHZUGGXrV6DFUhkMkS9QXR/sCAeVR6r
QTNtzyeT/3Q/Lqk3/NEln//5JKsOfibiseafDx4G7ygO7j/3g7aOkhnPzw/3
D49exp+eHtB/B/r36CA3avSkg59/Iiz9D8LS/ROd6+QU/z08SXa/+WYPNrN/
MHjwhD869JsZGeRGwRxL+Dk/OD/Y//ZMvz0+5UF+jpFBIDdk1C7sxQmRcJVj
HnHknxgZBJCRUTLPIQw5PhoZcRrMMzJIR000vh5/e0wHPtY/tww6kFG7DN9v
e1tNFLJunvFBOmqytCkuc3gw/PbQ3dH4IB01OQZhMgQbf+tAMD5IR00mcCCm
/d1mz+WJ5WqWThChIqRLviNKRQbJISt2GCEuBsrDLubf7rKs3Esm6kIeyZhb
kxYJpN/5FC+QBscREyBOJPwUvT5NgDKkLwdeaNKIkNN0NB0F9Wj9UD8jz2r1
OKqKOAwwC9SkC5DA6UZj+jhRjPYABM2/COY5OmDxoMKNj/BguxrYPcjQMFHQ
6+Kho9xJxeXWXBPJtPkaSWm8nOSiAtI1yVZQG4s0TFB+ll2hvF9yXSIWH7js
P9KdkTBdqNrOuyfhxMYk2V2BwR4oNyjMJAPEHZcTJVDV1pgnx0Xi3H7x2Ipo
FzG/squF1dRKPW4TAoK/8ioZyadOlnJbQLkJEnJCaSypqp79nEeGQk0+xwfK
B3Pxz3mS9BUp2J2gG+bG/4QuDgqBoba4za7/rTfsFCLGNtBRSftR/VzUL85P
ew7YpPxqNunfD+YJER5W1WAsEjawliw29fVgNJsc5T4XBSzKNkr4PPXZPRRB
Jsi55J8w9QfDy+IVKCu26wOgMlVeOIuWlcCRkMSoBhjpV5PJbZAtG1BmSCY7
7M4OwYm+KWdSc6ZWRr5XzfpHtX7mtG1S73reQVHKNJsXOZ5Gy+3Qjcsm67ac
BCzeaPZ2mFjzVt1mlJIjdrnk39BkzmmzQl2N3Et6PE5XXqoHFn0oPtORccJD
lSTENkdSy9nk4sCLPLYtxsKc24tdD+TVCRxv4sNwuZDoJxn3fSHSb/OHUsiX
XXyfrV2TTYKJZGMOPiI1CqcG04wYwsBrInJHXAhJnkUOnswjZkzGZAE7S8wM
svQ04MXeoa0YbcitLvEfskN7gb/GJxmTM2Fp0P2O6YXWYKieH9qa+wF49eHq
Bq4YxcdIagl8/xHQLiJpl4dMjHHj1xUruJDyJ8RFBAMskGBdHJ+mQW/HW3ae
BNnS0XZpJ+O7/eh2e9E8sxNgtHebtU1eC4viEIlUEOAc0y1JPoeUkdhLV9Rs
UHGuuJTQwKPoM0Fni7wNkz3V4boll3KQSonPDnJDKyWctpf4yREPmuLddwfb
1ko1bxPliU/zLH35wl3k0GMtj79190hX1G7H1d65GHX7Lu3nK6+CTBzEDakx
DgVQQdHLmJRczvNkcjhPLgAR4IYRZIh5XAiBhykAVWq+bYP4g78wu8ON7QSF
mjv47YM1dB6s2cQr/eUXKRlFvyFfr6pUcEeUhEAhNk0tUWdQD6qwyaM5oSDj
er++DsEWZKf4KAdv3ZOEZPZQ9FvY90iNNWtP4phABlwjq+YYCMoigL2kpvuZ
8Q6aplsJzdE2+QleM8reQPYBZzqWMw3KBTUQgQFzW96DXr4P1ivlP4NaUzsY
AmIwG8MT93EMb12BxmlPdcs8nFFP8xxdxNOn2PenQsdibp0n5nl8xDqvkzmd
0TObrUek5IQCBF/mPJfsxxo7zvjB6Rt2opd8CS6qo+ADQIIVN/1qZjuZnM6l
2l65o5cfYyg4DWplMH5Sih+a01tIiaW0QJbe4aHTiilMXH7/C8cO0pONJteg
PYBcduks3sFJKR7gGOigdsh4ToHmFrH5hbXoqLWlCpuIWxCzEP3dcQjmCpI4
HWSFDrBzNEGfzrFL/57uwa2dzSVTUq+YXZsKjnr7lU+FWj9sZTKjKPtVtweK
0NjlBQFJl9YSWBrRVcLZXsyTHx8ItKQ9jbSG8GQ6og+K3kBwBTXXutoYgBJ6
1+Kol9fH6Rhu4PEeBxx7foUTrP8ARHsjO1CEZdNQNJStAFJfauRvdqkXpiyr
jpL8iJdVckdcLqZBKk4ELUewmNy+tAvntK0tG9l8ewhJL/s4CbV0cXRMZKCL
UwX177Sq1JUce6+FpJ3NUyVY90MuhaAKVZLEF67ihvHHZCi2sCgfM+3Q3V3d
3xesDjkTplouxR9OVWdVIfpcljdrDGoZDTWPbpB2h4nynD7vtB+nm2w7uGhF
Uliuqb7eYhmB2xa9K1a7OKanipcP/CEimpSMTcClVd5yrKpRdlV2ZNCjPkpI
Axsh7KGHJd0H4JGquoV5PCUC8+MFqYwc3Jt6rBkuqJF7t9JAmwgXsz+tJdkK
4aKraQadUoKfbFhFhxPFNvZi0FcgqhQcCeH3SvfJlOPTYHCnxMQawis0gOG0
XNSsNejThFIzc1o7LMYhfGOdB4PIQaDdla/zpUW7VxHTxyO1J068NaGFu6xx
NomvogAWTm7PWgzcwxfPGERb7TZ02BZ5+VkgYmqQUDXG3RfAgSiDDz1KLfuK
pHSOj4QhdKHGpX3i1AjgUMsOT8h6EoCBhF8ThLwCdg9zktk135EsU4Q73wk5
qTg9gwqcCcR6GCeWUErOk9tK7Hp23LEWwgpxjLY+U4EM82mQ3kjUT/nx9ic4
P52E56kkhkwe0gvA3p85g+un1Ire/f7uE7PuJWxa1XkYShIO/tdt0xh+zsWv
aWMReQu2qi+Ao4jiSUDAKBzj0vGIZrjgQZy0LiVpyIAmJIoolxlTifGaac+R
I06N2l02GTEygKFpAMMecW+SV7Q70kmoLtvcqztOztRKWekkSJaItkzSEucG
0KLij65+0QLeh4RID+/umDoEAOXh7OzR894lQritFZqBQsgUv67AZiZfsACd
KtzSvE67VdMaar1kJpS7S1nhRNO+JI8SuZ/y5kGzgEzP2kh27fwe67wrgBVC
d7mRabjKD3ClJUE8IXMPGEybuqpEZGjUq4GkL6W3OnVpwN4BxSbIICUfcKAz
6vW4TLS9ABjoBJxg3r9HgdBjIPXekjyhd8rUiA0MYNt0SlqbXGqoj6AFgFQG
gPrMfUSALhr2PaNOio9P+rl3KGw2VecdkR0lG+O1gGmR2KIh0e22KWBeWCbP
ga2nCh958VC9SDU3jtO8yLGBLlRKoHgd9/xYbg3wU+65r+zf4jPeGXG8O96t
epariCLX5cDAfMxNpBoBmhYWc5kQs/FUwGm1DifcofdXIUx34Hivnu8TQTE3
qt7Px7pDkPc3XkAEu8YXK06B5ASxMHl32bWYOQMwqO/xMl0nGZE2LrukQ411
5jzt1u2BdW1yVXtwUe7zXNqpcNsFVQInkyuxkzR55glV8sfcPokqKw8M2uCY
JQVZ4npiLn3OOMygiX4jigeVnYh/OI8TKnQBJm5N3elKSiRRL53eihYxA8Gt
KJrWr1l6pqDouT1KSvo/tENnBqirHG8wLDMK23N43+R46eJUM9PZvDVbtGot
7Sd1/Xnfy3Qkcz4KsDG32mq2kKbRa3IwSOVUsO4CD0wfEJXJPpwOgw17fA+9
+s9kNvikd0OyArGX7dnECPp+xbWLQIzXu/lqD0UgosDAn9yL4uTa8Ylo/LkK
VK6TqqPaVWQ3G7bwTWbWI+nBuLdhYr5EmTg4CXoXX/Y/0vfBZ/gBGrfWYMYu
wDmVjgUKaVK6MvFZYceEYUYzpjJxFuGWlN+omkyjsszguEap1H41U+esVbgR
b+0aGyT7wyyY8IJeO/j1iH5Vk4a/ILLD0mVyQCma8nOHfij+xQNf9QceRQPx
L7gwLX+JhSe5tgb3H16dut4/knP3g60fzJpXYR+EAQmhjUkElfHsGpxsAnaB
t4DMLcebYo2qJesgueAwJP9ORk+jlgMcr40KS33Bn8JkNjz0uXzhIDD3UoPU
7uGzT8gRVdUAoorZQJPsUqXE4Qm7irZHIJPdk9PksUlODvaiUz1Zbg9AJh2h
N33xWpydjp3Bfo5xP7uuuu+YsQRvGUFId6ZBMi0FGGr+ewqNIwLG1O2DrAs1
d/pZ7U4SxFXNooMQeyHE2QKdvYDn9NkxbicMxWYVHWf3kG36w2MtjiSDc5zJ
zkbYal84i2jXnFfHWCPu5DDBl6iMV8AyuLDgWArVTsT2GorfsLgY2QnZ2JoC
vc7r3BV4jdSO+rM4E4EEstSWkbOPCqOi4mBpXTJeBbfgFG5f+ihVeK7abhDu
jiLdsS90GEwii4M33FT970dkrKuqDerofD0vj/lq4Rs8OFSDWMiWrvjY+/5x
C+LT7z/IqTS+sDhfutKws1BCbel4JxF6Vz43T6hTAacohSlhZ/1OjyKfff4I
+6VZgdJ4NI7+8gWZAiLYk7CCNbdHC9oHvIRRe+4sW7Y8rCcNIDA4rH6M+Dpy
8CnXFLYPJCaEwAHCY92ie8Aac++NpUVz3hvXhmiMhKmcVWt6MMYcbPu8YkEl
msDvkkufxya+CTklcWAS9jURmnjtgsOO2hwK/ShDTjy0/aZykZIjJnfAYmHb
Ui8j2xg2ugJmUbWuCJKMdfUKk9cpWsG0rV2tuVLAL/M1J8Vum6Vk4PQ6rYXz
OwMZ5BCYT1ihGzauczbYsEFGHBnqVWSiI9L5GFzjFFYotCGvdE9QB+E6aAxJ
hSahqkoBFOoWgg0F+UmT1hX1DPXd2MJHmkHvrrBFVRKVpZMDmURomQ0A6aNq
LTa09lEy2mV0cJWvfcpzPnp213MCpWpcLvrkn0L/stxZcnjen65HwBISYj0+
HItGsasCHl6gw6HwsGKxePInh5i2iQqqlgUGxBFce9NwxXlyg0d+oqZYTA9K
piSKvd7aq1fmxgnik1braHSzvVvsQZ64Y7tZiyN/ifl0RGF5+zxdOWyI13JG
NNgoJTqqyDYj0u1ZaOEG8K5xaZ8RSHvoT89C5x9AsBBVjgaoso0LfqTMB67e
u7y+JY0NS1UkW6dvpmnGzRgVxPtjlUlTXUyyAo4aNVKTJoakVmW5lrSE3q77
LqfWDdZ1N43cdyfzIORyPE+u8VJgjoJkmOiDQA5p2tXTUDD/ZrwYMIY45v6P
XJ62dKSWkZL9aQIX05KbPntjNyyg3uKP8aHMERkc1ttG2Z1OqxZngrjTBgsB
sJuuGW9QydFV9kpJiVQkazWo0zgZQD5i9ruCju0cqK4lcOYkTCjGWHW8E1By
VRAFceHifLkQtXxk7YxUsF10MC2aqrAESVGz9tDIt+hwh2tmlcOV9u8i9J4e
4Am4EjBCpnEQ+MUeGgqYBut7rThVG41q46vlIk2HQBItSYkBBqnh6de1TTVP
MNoYl2zxc+dSbNtTpdiKJWjt3hL67V5e7O0l38ln8AdBMR7xCkb8/g865BUc
GQNDWi+YXKJKdpuvcsosopSd4Qr++a1LfJdMgiWiFV7No4KUKylVprJHRYkB
8xezQxs0hhhM/WCxeaOyZwKTs6JDvsdwCyPtqpEHo+jQTnxNt2rlg9lFU/S7
jlXwsQ2h72CLy6JVBTocvz2ersUHIw/pATg5plvrLJqoGfFAOtvYVp1qGMmq
K5/StevISImgGWbkxLzrK2D4vFHUuziAZqj1uUf7qijvbxcZA1bv7c0dGkpN
rcfDIGdNNsT93G0Z9r03Gvl1nU2Gjp/EZa8trEus+vrEW6GiMQ9OoCBEjpw+
DpCK5qSEuIiCPCVyS0gzkliz7F1BfPEBXJwfLIZNsGENWwpcfz1PZ7zcwIFx
kJ4EQglHZFMSHyE8+NbpMJ5FbANY4aRQoOgr+wkRKlYJlBkpbL7avD/pmZUg
EL8Hmb1J3mwshkwbVPJ6uYahm4qVZkRBR2vsCfI28LQ3I8l+KnIXX8bp6emX
L3gE/eKIv8C3ulD79GVYoiKcsaWEldbzt6GVPMY7nCY3YFfcuJDGoPMJjgQK
wt3Dr+p8z6r+2+3qqfYXOhm5oHzpmvN4Uymyw7qSLmT74X+TKYBqUc3JntdY
QijFRtsi4YFSAYrEzo+2KGakCCIZroOWdWEqE17pxjmeWQ4rK9J2kvKuiJIa
Xqrh02ucyfdZUis+kjLYUoOuJmzwF25Do95hG0/MAms5Q0tDHKGsGna61N4P
4V460IELfIeCNHwLsjOXmFvF++Ho5GBDLguity1EdOeyiMKcqPoVBUoU5m2E
etyimjLTMmrskaMe3j4B02JgxRDHRAsK36eYpDTfId074DvlGJ+QVzH0gplj
SDgNMFzy7WSpX8dxb3VtIW9qWi3e25bah8CcPV6TN73ythuWZXwJ2FjHyYS/
g4mE5/8qh8EzfrfnzUGBznMUHCY6LZ8zgyPrN8r04oaZUv47dVLUhUXxDJjW
oUYd3GDBGfNySRhTIIMSMA4VuXxlK+z3KZh59/rDnnsY+/xrFkSwu6B5i0ku
gwv4VHonl7wf7U1dcydWyr6W6gvJTpdbyOxjjqowlkkZl6OH1a6eLAN9lOci
LGKHX5w4SA7jt65eB+9sO5AFqhJNUau1tjO7ooaKP0sbPJ91E84VVBNueaEI
Y4jPr3R12wABl9/IXPyt5pxxSKHf8ldeCQKCFMu9myAdFfBDcnN2bv0IKWzg
FGNgIPaJiMxvJShibTmeJy8rnCATXuNr89Q4fedDAbIvqlcai6QgKmFxko8m
e/G3CTyA2nSf2/jqRrgWBOboVzPBzeI7LDTOgkFVX30UbE91wh1q35+5Bk9c
HzwGHgEIu8O88yFi7YLK2zB9xW/743olfn2CR25XwM8QdQEgAbbNduY9WT2u
mJFIlY3Iguz28i9JWGL+GdI/sXk0XYCYHdNGjyYXZNPbOziBL47s5FFvycvr
2xjLAi4UlV1fwA9nst99JIaEnf5H344RxJTieBL7x/0L+DRJFtYpCg8WvzMW
f5wuFVU6eUr1DX9Vg5f+hWt9NZELSW0Lo1If3U3QatlFTgNOzp7g0E33FSZL
E+vJdLs7dXXf2R1eanBigZMivRRU1uWW9hZGSC5wvbMt8mSb0G1F7PIuzMfO
qedxtYzdkMMV5MSEvV6VNnGzK8zWzQDPtdVdo+y9348yiOVjXqVpOuKF2MBD
Gr1Lb7n4HWPh5YWqC2WLxy+CbN1LD6UFny1JeeQ4iWutGXRKJEOdTuUDTs0G
hq0wEMFkTV3mYP/4SitqPpwHFjwR4uGBbIB70+lB3SBqI9eg5o+JN082SmjC
To0UcMC1iT7q1JU2YN9lZcj9DcJTD/kiDx2fya6qtHvulFRelHMJ0LDzlfEt
p7Ri2sCKReeK5em2I99EYHF6XJGmchJUWHZlKiIUngT9VUovon7aheoIshpW
+fUOmfj+u1zRo0jccwVoQkmKpVukuLOqIc08QNz5wh6XKevaSquLGsvdEFLY
2ebgxUsHETZ2tBsj97MO27tj/YV0suvlHGuhC+Z9oOVC5WK1ma31nYHoK+Bt
zLgBhbYW9qAfcQmFXc2RW3ihBtJrOAHeNoHJJ6+PYFPObg1gUbVZ+WIZNto6
vr0aL6NuIh0JW2sHDZEFWD5xGv4vsJgA+0ZjKxd+B15Q0BN1vi65EiPMWFTV
EA9a5EubblJs2wia2VoaQRhXhJVTcBpOXefckxl4kKMlt+UWNsevr4mbZmed
9kXMa+kRiYuiX1WaTWIZDlVv4QP7bjfEY99hMYl/DZDQFQdQnn2tgqZbkdWM
6LUi1ROdOY3Lawx6wg+UiZDVyjsz8tXz72fCQb2sK3mT5Mg75PjK5KUMgVtP
lscXeif4nuXkxz95dYiDLMiW9vGQ+7F5Ti1qhFVkhiiGcKE0Gdws7pda5gow
BjQAmHQhc3CJmgQom15iEyc0EuoG1ab6hg5qEjWm5Dp6WqAsDWr42R7U7BpX
DcQUyYYy8viF3VRiLzcpYJ67CxVl8mI+LU0ZecWnL45akeOAc2mLqpKmtsjE
gubsgOL78tKo9KHCABaVePqk214DX9AzItVQQvusFaObqmFkx0bhLJzDt3FJ
cY04Z+Qr4o8n+rqaw4OXY8078D3Q2HCocQ5UuA+u18BKo2KzE3QD5Ruectcr
flfHdpD5twJyT84U9TKQAFzyow1p6YXxjaYOYjtvZJR+LJ0VW7hx2Wy57lrX
drjOF50jbxynOO/7LOzSu0TAslygyOPOXXtgIuefk4sO0BNsNFAGLzEO/Npw
W69XwKpK/GtN9U1goFer5HW1XFp8t9Q7EJ7lzxV8gO1q82ny+qEGPHrdrVbo
FcW5HkHZf2tqUBxo+d4rNNUhwmn0++Th8ClR2JSMFbcsysDyapwzyVxZetDM
N3yh3R4cpVok32OcGDZ+m1ZtCzr0PWhMbzL4pS4skOEd4MI7u0IM/wGUm3d5
+bl6NNPkfQ5yAqj5I/4P2iQO+JcNCuMKk02uDRHuLaBoDV9Pkxv46g4wtcTZ
O/go+TNY8yBnPldThHea/HlTgj02TT6Yrkh+BPoERLrLV6AebZIfKTgrKuv/
zz+AeIL/TMVVLXGHqVvqftdzIHhNSsNbktEZvknYcH3Y29dz8eS5l8Fwm6Z+
gVLl4yl9m0L0La+qBA3w+w3GsIWvbwLRQyB0M/ypqu45dQ9ri0ETabEJj+ph
4ruU3sdpFSXyLMmJ7vJitTu3vOMeC5tbfmdx+KoCMrV4ul9+ubi+/HhzdYn5
WvIy3gKtWu1qCgh8AWYZJdYeHRxJxq3rsqwvqG0p73wdKDvU+ZWZwMerm31s
tyBaIbNkmsK91iBzXYCDLAtN3K6cVJXK/pF+J/5S4p78I5eh78KFy/gBHllt
kktQj9Gwb5M7YLUgKpLLTWlWedrIW2ri5KkmNASmAfz95fWuCVjtxdUNJvrO
PvwFQc2WdK/tn28jiFXDg63LtpGlbIBrlmE/ma3wxzbGAHope1dQPmHLYC49
IpV0DMW1bBR746FLcgt2vDcbxQ2i1lt9H89rUQGYmEKKw95rXNjgXt6TRoMH
lqbc6Qr2lIX0N/ICdRdqG3/5NNJ/Im2jxS1BZOfyRf37hLDQVN9iZEqnAJBM
52pbKe6vXIsSznEKrKLBKyXDlw6RCuEyegLPpvf7TAe5oz3ITMd8naGqFtid
N06F8c+A1MqwchLrUoNCqDjflvvxBKHq6HVqo+4Q1UnUEvZVdS7DxrsYMqd5
u0nDos0pB244LIGFTqjgztTRQZqvnx5f/MRvAgwNSUY+vDmqrqT3Roy5IAYp
nIiLuXQ0B9ijC1KQF2lSgkckQ1jVST4VCPcWNXPXlDKEN/ISX7YrnMz1kBbh
zhS//XW0LBcvri8GVHZdlWz93PoXBrjXE5RRJ0ZqgBq5SH6jTP0Gs1TltdFb
XnXCm+BGaeHrwsV9t08rGfeyBGlF/g1oWVxbu+0NMvy2JO1tG3erPT6YDrvd
fvWkpFcGLzJIFnCQz3GLXhd7ihv348dxt/5g0bjP7rC/rh/pu8e6XokiN3HU
pRAKSYCtr5cJWgsghgfOF35a3cyf9FVAybvvDgfvL5beSRvNyufedj4WSXvr
NXn1fSpX43kjeIgL7oyECJmCogz2BHuje+XMvaGqIotbPdCouSY3GuzaSyp/
FzTvDWv92yDxCepYtaCeFLPZLFmAZTL5Hw+e5ZT0iwAA

-->

</rfc>

