<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC8028 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8028.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC6555 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6555.xml">
<!ENTITY RFC8305 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC3587 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3587.xml">
<!ENTITY RFC8925 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8925.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-6man-rfc6724-update-17" category="std" consensus="true" submissionType="IETF" updates="6724">
  <front>
    <title abbrev="Prioritizing known-local ULAs in RFC 6724">Prioritizing known-local IPv6 ULAs through address selection policy</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2025" month="January" day="23"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 55?>

<t>This document draws on several years of operational experience to update RFC 6724, defining the concept of "known-local" ULA prefixes that enable ULA-to-ULA communications within fd00::/8 to become preferred over both IPv4-IPv4 and GUA-to-GUA for local use. The document defines the means by which nodes can both identify and insert such prefixes into their address selection policy table. It also clarifies the mandatory, unconditional requirement for support for Rule 5.5 and demotes the preference for 6to4 addresses. These changes to default behavior improve supportability of common use cases, including automatic / unmanaged scenarios, and makes preference for IPv6 over IPv4 consistent in local site networks for both ULA and GUA prefixes. It is recognized that some less common deployment scenarios may require explicit configuration or custom changes to achieve desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 59?>

<section anchor="introduction"><name>Introduction</name>

<t>Since its publication in 2012, <xref target="RFC6724"/> has become an important mechanism by which nodes can perform address selection, deriving the most appropriate source and destination address pair to use from a
candidate set by following the procedures defined in the RFC. Part of the process involves the use of a policy table, where the precedence and labels for address prefixes are listed, and for which a default policy table is defined.</t>

<t>It was always expected that the default policy table may need to be changed based on operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, which include Section 10.6 where a ULA example is presented.</t>

<t>This document is written on the basis of such operational experience, in particular for scenarios where ULAs are used for their intended purpose as stated in <xref target="RFC4193"/>, i.e., they are designed to be routed within a local site and by default not advertised, used or received from externally to that site. The document defines how preference for ULAs may be elevated for appropriate, common scenarios.</t>

<t>To support the preference to use ULA address pairs over both IPv4 and GUA address pairs for local intra-site scenarios, the concept of a "known-local" ULA address is introduced. This document describes the means for nodes to determine ULA prefixes that are known to be local to the site they are operating in and to insert those prefixes into their policy table with a label that differs to general ULA prefixes. This capability allows nodes to prefer ULA-ULA communication locally, but still use GUA-GUA address pairs for external communication, and importantly avoid selecting a ULA source to talk to a non-local ULA destination.</t>

<t>This document also reinforces the text in RFC 6724 to require support for Rule 5.5.</t>

<t>RFC 4193 defines ULAs within fc00::/7, where the L bit, as detailed in Section 3.1, is set to 1 for locally assigned (generated) prefixes, with L=0 as yet undefined. The use of known-locals as described in this document therefore applies to the currently used ULA prefixes under fd00::/8, where the prefixes conform to the definition in Section 3.1.</t>

<t>The overall goal of this update is to improve behavior for common scenarios, and to assist in the phasing out of use of IPv4, while noting that some specific scenarios may still require explicit configuration.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC 1918 addressing, and may or may not use some form of NAT. However, this document makes no comment or recommendation on how ULAs are used, or on the use of NAT in an IPv6 network.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>GUA: Global Unicast Addressing as defined in <xref target="RFC3587"></xref></t>

<t>ULA: Unique Local Addressing as defined in <xref target="RFC4193"></xref></t>

<t>Known-local ULA: A ULA prefix that an individual organization/site has determined to be local to a given node/network</t>

</section>
<section anchor="operational-issues-regarding-preference-for-ipv4-addresses-over-ulas"><name>Operational Issues Regarding Preference for IPv4 addresses over ULAs</name>

<t>With multi-addressing being the norm for IPv6, more so where nodes are dual-stack, the ability for a node to pick an appropriate address pair for communication is very important.</t>

<t>Where getaddrinfo() or a comparable API is used, the sorting behavior should take into account both
the source addresses of the requesting node as well as the destination addresses returned, and sort the candidate address pairs following the procedures defined in RFC 6724.</t>

<t>The current default policy table leads to preference for use of IPv6 GUAs over IPv4 globals, which is widely considered preferential behavior to support greater use of IPv6 in dual-stack environments. This helps allow sites to phase out IPv4 as its evidenced use becomes ever lower.</t>

<t>However, there are two issues with preference, or rather non-preference, for ULAs as originally defined in RFC 6724.</t>

<t>One is that the same default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses, such that IPv4-IPv4 address pairs are favored over ULA-ULA address pairs. For many site operators this behavior will be counter-intuitive, given the IPv6 GUA preference, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addressing is used in IPv4/IPv6 dual-stack network scenarios. The expected default prioritization of known-local IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addressing, does not happen for ULAs.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default. Local preference of ULAs over IPv4 is thus important to assist operators in phasing out IPv4 from dual-stack environments and is an important enabler for sites seeking to move from dual-stack to IPv6-only networking.</t>

<t>The other issue is that where nodes in a dual-stack site are addressed from both ULA and GUA prefixes, RFC 6724 will see GUA-GUA address pairs chosen over ULA-ULA. One goal of ULA addressing was to allow local communications to be independent of the availability of external connectivity and addressing, such that persistent ULAs can be used even when the global prefix made available to a site is withdrawn or changes.</t>

<t>This document therefore introduces two changes to RFC 6724 to support a node implementing elevated or differential preference for  known-local ULAs, i.e., ULAs within a common local network, over both IPv4 and IPv6 GUAs.</t>

<t>The first change is an update to the default policy table to elevate the preference for ULAs prefixes such that ULAs, like GUAs, carry a higher precedence than all IPv4 addresses, making IPv6 precedence over IPv4 consistent for both ULAs and GUAs.</t>

<t>The second change is the introduction of the concept of known-local ULAs. RFC 6724 includes a method by which nodes <bcp14>MAY</bcp14> provide more fine-grained support for further elevating the preference for specific ULA prefixes, while leaving other general ULA prefixes at the precedence described in the previous paragraph. This document elevates the requirement for specific ULA prefixes to be inserted into the policy table to be a <bcp14>MUST</bcp14>, but only for observed prefixes that are known to be local, i.e., known-local ULAs. Nodes implementing this behavior will see ULA prefixes known to be local to the node's site having precedence over IPv4 addresses and also over IPv6 GUA addresses, such that they can use ULA addressing independently of global prefixes within their site and continue to use GUA-GUA address pairs to talk to destinations external to their site.</t>

<t>These changes aim to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. The changes are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was formally deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addressing has further declined, with very little evidence of its use on the public internet. Note that RFC 7526 does not deprecate the 6to4 IPv6 prefix 2002::/16, it only deprecates the 6to4 Relay IPv4 prefix.</t>

<t>This document therefore demotes the precedence of the 6to4 prefix in the policy table to the same precedence as carried by the Teredo prefix. Leaving this entry in the default table will cause no problems and will help if any deployments still exist, and ensure 6to4 prefixes are differentiated from general GUAs.</t>

<t>The discussion regarding the adding of 6to4 site prefixes in section 10.7 of RFC6724 remains valid.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>This document makes three specific changes to RFC 6724: first to update the default policy table, second to change Rule 5.5 on preferring addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14>, and third to require that nodes <bcp14>MUST</bcp14> insert observed known-local ULA prefixes into their policy table.</t>

<section anchor="policy-table-update"><name>Policy Table Update</name>

<t>This update alters the default policy table listed in Rule 2.1 of RFC 6724.</t>

<t>The table below reflects the current RFC 6724 state on the left, and the updated state defined by this RFC on the right:</t>

<figure><artwork><![CDATA[
                    RFC 6724                              Updated                  
Prefix       Precedence Label        Prefix        Precedence Label              
::1/128              50     0        ::1/128               50     0
                                     $known_local/48       45    14 (**)
::/0                 40     1        ::/0                  40     1
::ffff:0:0/96        35     4        ::ffff:0:0/96         20     4 (*)
2002::/16            30     2        2002::/16              5     2 (*)
2001::/32             5     5        2001::/32              5     5
fc00::/7              3    13        fc00::/7              30    13 (*)
::/96                 1     3        ::/96                  1     3
fec0::/10             1    11        fec0::/10              1    11
3ffe::/16             1    12        3ffe::/16              1    12

(*) value(s) changed in update
(**) $known_local = the ULA Known-Local /48 IPv6 prefix(es) (if any) 
with precedence and labels per the rules in Sec 5.3

]]></artwork></figure>

<t>The update moves 2002::/16 to de-preference its status in line with <xref target="RFC7526"/> and moves the precedence of fc00::/7 above legacy IPv4, with ::ffff:0:0/96 now set to precedence 20.</t>

</section>
<section anchor="rule-55"><name>Rule 5.5</name>

<t>The heuristic for address selection defined in Rule 5.5 of Section 5 of RFC 6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.</t>

<t>The text in RFC 6724 states that the Rules <bcp14>MUST</bcp14> be followed in order, but also includes a discussion note under Rule 5.5 that says that an IPv6 implementation is not required to remember which next-hops advertised which prefixes and thus that Rule 5.5 is only
applicable to implementations that track this information.</t>

<t>This document removes that exception and elevates the requirement to prefer addresses in a prefix advertised by a next-hop router to a <bcp14>MUST</bcp14> for all nodes.</t>

<t>This change means that an IPv6 implementation will need to remember which next-hops advertised which prefixes
<xref target="RFC8028"/>, although the conceptual models of IPv6 hosts in Section 5 of <xref target="RFC4861"/> and Section 3 of <xref target="RFC4191"/>
have no such requirement.</t>

</section>
<section anchor="automatic-insertion-of-known-local-ula-prefixes-into-the-policy-table"><name>Automatic insertion of known-local ULA prefixes into the policy table</name>

<t>Section 2.1 of RFC 6724 states that "an implementation <bcp14>MAY</bcp14> automatically add additional site-specific rows to the default table based on its configured addresses, such as for Unique Local Addresses (ULAs)", but it provides no detail on how such behavior might be implemented.</t>

<t>If a node can determine which ULA prefix(es) are known to be local, it can provide differential treatment for those over general ULAs, and insert these into the policy table at a higher precedence than GUAs while keeping all general ULA prefixes to a lower precedence.</t>

<t>This document thus elevates the <bcp14>MAY</bcp14> requirement above for insertion to a <bcp14>MUST</bcp14> for the specific case of known-local ULAs.</t>

<t>These known-local ULA prefixes are inferred from ULA addresses assigned to interfaces or learned from Prefix Information Options (PIOs) in Router Advertisements (RAs) <xref target="RFC4861"/> received on any interface regardless of how the PIO flags are set. Further, they are learned from Route Information Options (RIOs) in RAs received on any interface by Type C hosts that process RIOs, as defined in <xref target="RFC4191"/>.</t>

<t>Section 3.1 of RFC 4193 only defines ULA prefixes where the L-bit is set to 1, i.e., prefixes under fd00::/8 where the prefix is locally assigned or generated. The use of ULAs where L=0, i.e., prefixes under fc00::/8, is currently undefined.</t>

<t>The following rules define how the learnt known-local ULA prefixes under fd00::/8 are inserted into the address selection policy table for a node, through a conceptual list of known-local prefixes.</t>

<t><list style="numbers">
  <t>Any RIO or PIO that is delivered in an RA in which the "SNAC Router" RA header flag bit <xref target="SNACBIT"/> is set <bcp14>MUST</bcp14> be ignored when considering the following rules.</t>
  <t>RIOs from within fd00::/8 are considered the preferred information source for determining known-local ULAs and should override other conflicting information or assumptions from other sources, including PIOs.</t>
  <t>RIOs within fd00::/8 that are of length /40 or longer <bcp14>MUST</bcp14> be added to the known-local ULA list. RIOs for shorter prefixes <bcp14>MUST NOT</bcp14> be used to insert known-local ULA entries in the address selection policy table</t>
  <t>PIOs within fd00::/8 of length /64 that are not already in the nodes known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48, regardless of how the PIO flags are set.</t>
  <t>ULA interface addresses from within fd00::/8, particularly ones not created by SLAAC, and not already covered by the known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48. However, as with rule 0, if the ULA interface address was generated on the basis of a PIO that has only been seen in RAs in which the SNAC router flag bit is set <bcp14>MUST NOT</bcp14> be used as described in this rule (rule 4).</t>
  <t>Regardless of their length or how the PIO flags are set, other PIOs from within fd00::/8 that are not already covered by the known-local ULA list <bcp14>MAY</bcp14> be added to the list, but only with the advertised prefix length.</t>
  <t>When inserting known-local ULA entries into the policy table, they <bcp14>MUST</bcp14> have a label of 14 (rather than the default ULA label of 13) and a precedence of 45.</t>
  <t>Entries <bcp14>MUST</bcp14> be removed from the known-local ULA list and the Policy Table when the announced RIOs or PIOs are deprecated, or an interface address is removed, and there is no covering RIO or PIO.</t>
</list></t>

<t>When support is added for the insertion of known-local ULA prefixes it <bcp14>MUST</bcp14> default to on, but a mechanism <bcp14>SHOULD</bcp14> be supported to administratively toggle the behavior off and on.</t>

<t>Tools that display a node's default policy table <bcp14>MUST</bcp14> show all currently inserted known-local ULA prefixes.</t>

<t>The identification and insertion of known-local prefixes under fc00::/8 is currently not defined.</t>

<t>Note that a practical limit exists on the number of RIOs and PIOs that can be placed into a single RA. Therefore, there is a practical limit to the number of known-local ULAs that can be expressed on a single network and the number of ULA prefixes that can automatically be preferred over IPv4 and GUA prefixes within the policy table. This limit is unlikely to impact most networks, especially residential and other small unmanaged networks that automatically generate ULA prefixes.</t>

<t>Section 4 of RFC 4191 says "Routers <bcp14>SHOULD NOT</bcp14> send more than 17 Route Information Options in Router Advertisements per link. This arbitrary bound is meant to reinforce that relatively few and carefully selected routes should be advertised to hosts." The exact limit will depend on other Options that are used. So while this is not the practical limit discussed above, operators <bcp14>MUST</bcp14> take extra care not to overflow the RA with RA Options when exceeding this limit.</t>

<t>Note that in the case of Rule 2 above it would be expected that ULA prefixes being included in the known-local prefix
list be compliant with Section 3 of RFC4193 (i.e., /48 in size) but the above rule is pragmatic in that it allows
the use of ULA prefixes of up to /40 in length.
Most networks use ("are expected to use") /48 prefixes as per
RFC4193. However, it is possible that in some circumstances a
larger managed enterprise may wish to use a shorter prefix (e.g., to simplify management, filtering
rules, etc, and to overcome the issue with the number of RIOs an RA
can carry as described in the above paragraph). However, such
non-compliant use of ULAs may be problematic in other ways, e.g., carrying an increased risk of collision with other
ULA prefixes, where you might be using someone else's compliant prefix because shorter prefixes have a lower chance to be globally unique.</t>

</section>
</section>
<section anchor="configuration-of-the-default-policy-table"><name>Configuration of the default policy table</name>

<t>As stated in Section 2.1 of RFC 6724 "IPv6 implementations <bcp14>SHOULD</bcp14> support configurable address selection via a mechanism at least as powerful as the policy tables defined here".</t>

<t>Based on operational experience to date, it is important that node policy tables can be changed once deployed to support future emerging use cases. This update thus re-states the importance of such configurability.</t>

</section>
<section anchor="intended-behaviors"><name>Intended behaviors</name>

<t>In this section we review the intended default behaviors after this update is applied.</t>

<section anchor="gua-gua-preferred-over-ipv4-ipv4"><name>GUA-GUA preferred over IPv4-IPv4</name>

<t>This is the current behavior, and remains unaltered. The rationale is to promote use of IPv6 GUAs in dual-stack environments.</t>

</section>
<section anchor="gua-gua-preferred-over-ula-ula"><name>GUA-GUA preferred over ULA-ULA</name>

<t>This is the current behavior, and remains unaltered for the general case.</t>

<t>However, where a ULA prefix is determined to be local, and added as a known-local ULA prefix to a node's address selection policy table, communications to addresses in other known-local ULA prefixes will prefer ULA-ULA address pairs to GUA-GUA (matching label, higher precedence).</t>

</section>
<section anchor="known-local-ula-known-local-ula-preferred-over-gua-gua"><name>Known-local ULA - Known-local ULA preferred over GUA-GUA</name>

<t>As described in the previous case, this document elevates preference for use of ULAs over GUAs in cases where the ULA prefix(es) in use can be determined to be local to a site or organization.</t>

<t>By only adapting this behavior for known-local ULAs, a node will not select a ULA source to talk to a non-local ULA destination and will instead correctly use GUA-GUA.</t>

<t>Nodes not yet implementing this RFC will continue to use GUA-GUA over ULA-ULA for all cases.</t>

<t>As an example, consider a site that uses prefixes ULA1::/48, ULA2::/48 and GUA1::/48.</t>

<t>Host A has address ULA1::1 and GUA1:1::1
Host B has address ULA2::1 and GUA1:2::1</t>

<t>Both ULA prefixes have been determined to be known-local through RIOs.
Perhaps ULA2 is reachable within the site, but its prefix is not in direct use at host A.</t>

<t>If host A sends to host B the candidate pairs are ULA1::1 - ULA2::1 and GUA1::1::1 - GUA1:2::1.</t>

<t>In this case ULA1::1 - ULA2::1 wins because of matching labels (both 14) and higher precedence than GUA (45 vs 40).</t>

<t>If host A were to send to a host C with addresses ULA3::1 (where ULA3::/48 has not been learned to be a known-local prefix) and GUA2:1::1, host A would use the GUA address pair for the communication as the GUAs have matching labels (both 1) where the known-local ULA and general ULA do not (14 and 13 respectively).</t>

</section>
<section anchor="known-local-ula-ula-preferred-over-ipv4-ipv4"><name>Known-local ULA-ULA preferred over IPv4-IPv4</name>

<t>This update changes previous behavior for this case. RFC 6724 as originally defined would lead to IPv4 being preferred over ULAs, which is contrary to the spirit of the IPv6 GUA preference over IPv4, and to the goal of removing evidenced use of IPv4 in a dual-stack site before transitioning to IPv6-only.</t>

<t>This document elevates the precedence of known-local ULAs above IPv4, so known-local ULA-ULA address pairs will be chosen over IPv4-IPv4 pairs (matching label, higher precedence).</t>

</section>
<section anchor="ipv4-ipv4-preferred-over-ula-gua"><name>IPv4-IPv4 preferred over ULA-GUA</name>

<t>An IPv6 ULA address will only be preferred over an IPv4 address if both IPv6 ULA source and destination addresses are available. With Rule 5 of Section 6 of RFC 6724 and the ULA-specific label added in <xref target="RFC6724"/> (which was not present in <xref target="RFC3484"/>) an IPv4 source and destination will be preferred over an IPv6 ULA source and an IPv6 GUA destination address, even though generally known-local IPv6 ULA addresses are preferred over IPv4 in the policy table as proposed in this update. The IPv4 matching label trumps ULA-GUA.</t>

</section>
</section>
<section anchor="discussion-of-ula-source-with-gua-or-remote-ula-destination"><name>Discussion of ULA source with GUA or remote ULA destination</name>

<t>In this section we present a discussion on the scenarios where a ULA source may be communicating with a GUA or ULA destination.</t>

<t>A potential problem exists when a ULA source attempts to communicate with GUA or remote ULA destinations. In these scenarios, the ULA source as stated earlier is by default intended for communication only with the local network, meaning an individual site, several sites that are part of the same organization, or multiple sites across cooperating organizations, as detailed in <xref target="RFC4193"/>. As a result, most GUA and ULA destinations are not attached to the same local network as the ULA source and are, therefore, not reachable from the ULA source.</t>

<t>Scenario 1: ULA source and GUA destination</t>

<t>When only a ULA source is available for communication with GUA destinations, this generally implies no connectivity to the IPv6 Internet is available. Otherwise, a GUA source would have been made available and selected for use with GUA destinations. As a result, the ULA source will typically fail when it attempts to communicate with most GUA destinations. However, corner cases exist where the ULA source will not fail, such as when GUA destinations are attached to the same local network as the ULA source.</t>

<t>Scenario 2: ULA source and remote ULA destination</t>

<t>Receiving a DNS response for a ULA destination that is not attached to the local network, in other words, a remote ULA destination, is considered a misconfiguration in most cases, or at least this contradicts the operational guidelines provided in Section 4.4 of RFC 4193. Nevertheless, this can occur, and the ULA source will typically fail when it attempts to communicate with ULA destinations that are not attached to the same local network as the ULA source. This case provides a rationale for implementing support for known-local ULA prefix insertion in the policy table, such that differential behavior can be applied for known-local versus general ULA prefixes.</t>

<t>The remainder of this section discusses several complementary mechanisms involved with these scenarios.</t>

<section anchor="the-ula-label-and-its-precedence"><name>The ULA Label and its Precedence</name>

<t>RFC 6724 added (in obsoleting RFC 3484) a separate label for ULAs (the whole range, under fc00::/7), whose default precedence is raised by this update. This separate label interacts with Rule 5 of Section 6 of RFC 6724, which says:</t>

<figure><artwork><![CDATA[
Rule 5: Prefer matching label.

If Label(Source(DA)) = Label(DA) and Label(Source(DB)) <> Label(DB), 
then prefer DA.

Similarly, if Label(Source(DA)) <> Label(DA) and Label(Source(DB)) = 
Label(DB), then prefer DB.
]]></artwork></figure>

<t>In the first scenario, the ULA source label, whether known-local or not, will not match the GUA destination label. Therefore, an IPv4 destination, if available, will be preferred over a GUA destination with a ULA source, even though the GUA destination has higher precedence than the IPv4 destination in the policy table. This means the IPv4 destination will be moved up in the list of destinations over the GUA destination with the ULA source.</t>

<t>If the ULA (fc00::/7) label is removed from the policy table, a GUA destination with a ULA source will be preferred over an IPv4 destination, as GUA and ULA will be part of the same label (for ::/0).</t>

<t>In the second scenario, if the ULA source has been recognized as being within a known-local prefix that has been inserted into the address selection policy table, then the known-local ULA source and general ULA destination will have different labels, and therefore IPv4 communication will be preferred.</t>

<t>If the ULA source has not been recognized as known-local, e.g., if the insertion of known-local prefixes into the policy table has been administratively disabled, its general ULA label will match the general ULA destination label and therefore, whether part of the local network or not, the ULA destination will be preferred over an IPv4 destination.</t>

</section>
<section anchor="happy-eyeballs"><name>Happy Eyeballs</name>

<t>Regardless of the preference resulting from the above discussion, Happy Eyeballs version 1 <xref target="RFC6555"/> or version 2 <xref target="RFC8305"/>, if implemented, will try both the GUA or ULA destination with the ULA source and the IPv4 destination and source pairings.
The ULA source will typically fail to communicate with most GUA or remote ULA destinations, and IPv4 will be preferred if IPv4 connectivity is available unless the GUA or ULA destinations are attached to the same local network as the ULA source.</t>

</section>
<section anchor="try-the-next-address"><name>Try the Next Address</name>

<t>As stated in Section 2 of RFC 6724:</t>

<t>"Well-behaved applications <bcp14>SHOULD NOT</bcp14> simply use the first address returned from an API such as getaddrinfo() and then give up if it fails. For many applications, it is appropriate to iterate through the list of addresses returned from getaddrinfo() until a working address is found. For other applications, it might be appropriate to try multiple addresses in parallel (e.g., with some small delay in between) and use the first one to succeed."</t>

<t>Therefore, when an IPv4 destination is preferred over GUA or ULA destinations, IPv4 will likely succeed if IPv4 connectivity is available, and the GUA or ULA destination may only be tried if Happy Eyeballs is implemented.</t>

<t>On the other hand, if the GUA or ULA destination with the ULA source is preferred, the ULA source will typically fail to communicate with GUA or ULA destinations that are not connected to the same local network. However, if the operational guidelines in Section 4.3 of RFC 4193  are followed, recognizing this failure can be accelerated, and transport layer timeouts (e.g., TCP) can be avoided. The guidelines will cause a Destination Unreachable ICMPv6 Error to be received by the source device, signaling the next address in the list to be tried, as discussed above.</t>

</section>
</section>
<section anchor="following-ula-operational-guidelines-in-rfc-4193"><name>Following ULA operational guidelines in RFC 4193</name>

<t>This section re-emphasizes two important operational requirements stated in <xref target="RFC4193"/> that should be followed by operators.</t>

<section anchor="filtering-ula-source-addresses-at-site-borders"><name>Filtering ULA-source addresses at site borders</name>

<t>Section 4.3 states "Site border routers and firewalls should be configured to not forward
any packets with Local IPv6 source or destination addresses outside the site, unless they have been explicitly configured with routing information about specific /48 or longer Local IPv6 prefixes".</t>

<t>And further that "Site border routers should respond with the appropriate ICMPv6 Destination Unreachable message to inform the source that the packet was not forwarded".</t>

<t>As stated in the above discussion, such ICMPv6 messages can assist in fast failover for TCP connections.</t>

</section>
<section anchor="avoid-using-ula-addresses-in-the-global-dns"><name>Avoid using ULA addresses in the global DNS</name>

<t>Section 4.3 of RFC 4193 states that "AAAA and PTR records for locally assigned local IPv6 addresses are not recommended being installed in the global DNS."</t>

<t>This is particularly important given the general method presented in this document elevates the priority for ULAs above IPv4. However, where support for insertion of known-local prefixes is implemented, such "rogue" ULAs in the global DNS are no longer a concern for address selection as they would have the lowest precedence.</t>

</section>
</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using the introduction of RFC 6724 as a measuring stick, the updates defined in this document will likely take several years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC 6724 has been published but we continue to see existing commercial and open source operating systems exhibiting RFC 3484 (or other) behavior.</t>

<t>While it should be noted that RFC 6724 defines a solution to adjust the address preference selection table that is functional theoretically, operationally the solution is operating system dependent and in practice policy table changes cannot be signaled by any currently deployed network mechanism. While RFC 7078 defines such a DHCPv6 option, there are few if any implementations. This lack of an intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually, renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

</section>
<section anchor="limitations-of-rfc-6724"><name>Limitations of RFC 6724</name>

<t>The procedures defined in RFC 6724 do not give optimal results for all scenarios. As stated in the introduction, the aim of this update is to improve the behavior for the most common scenarios.</t>

<t>It is widely recognized in the IETF 6man WG that the whole 3484/6724/getaddrinfo() model is fundamentally inadequate for optimal address selection.  A model that considers address pairs directly, rather than sorting on destination addresses with the best source for that address, would be preferable, but beyond the scope of this document.</t>

<t>To simplify address selection, operators may instead look to deploy IPv6-only and/or may choose to only use GUA addresses and no ULA addresses. Other approaches to reduce the use of IPv4, e.g., through use of DHCPv4 Option 108 as defined in <xref target="RFC8925"/> as part of an "IPv6 Mostly" deployment model, also helps simplify address selection for nodes.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including (in alphabetic order) Erik Auerswald, Dale Carder, Brian Carpenter, Tom Coffeen, Lorenzo Colitti, Chris Cummings, David Farmer (in particular for the ULA to GUA/ULA discussion text, and discussion of using the specific fd00::/8 prefix for known-locals), Bob Hinden, Scott Hogg, Ed Horley, Ted Lemon, Jen Linkova, Michael Richardson, Kyle Rose, Nathan Sherrard, Ole Troan, Eduard Vasilenko, Eric Vyncke, Paul Wefel, Timothy Winters, and XiPeng Xiao.</t>

</section>
<section anchor="implementation-status"><name>Implementation Status</name>

<t>This section should be removed before publication as an RFC.</t>

<t>There are two known implementations of the ULA known-local preference mechanism.
The first implementation was created by Lorenzo Colitti at Google as a prototype solution, with public code available for reference on their android platform available to the public <xref target="ANDROID"/>. It was last updated in April of 2024, and does not include the capability to listen for RIO/PIO changes, but does support adding the ULA prefix learned on the interface to the known-local preference.</t>

<t>The second implementation was written by Jeremy Duncan at Tachyon Dynamics and made available as open source, reference prototype code available <xref target="RAIO-ULA-PY"/>. This implementation includes a full implementation written in python, including the capability to listen to RIO and PIO on the wire and adjust ULA known-local prefixes as needed. It was last updated in May of 2024.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RFC 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC 1918 addresses are used instead.</t>

<t>The requirements of RFC 4193, stated earlier in this document, should be followed for optimal behavior.</t>

<t>Operators should be mindful of cases where communicating nodes have differing behaviors for address selection, e.g., RFC3484 behavior, RFC6724, the updated RFC6724 behavior defined here, some other non-IETF-standardized behavior, or even no mechanism. There may thus be inconsistent behavior for communications initiated in each direction between two nodes. Ultimately all nodes should be made compliant to the updated specification described in this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="summary-of-changes-and-additional-text-since-rfc-6724"><name>Summary of changes and additional text since RFC 6724</name>
<t>This section should be removed before publication as an RFC.</t>

<t><list style="symbols">
  <t>Introduced concept of known-locals and rules for their insertion/removal in the table.</t>
  <t>Changed default policy table to move fc00::/7 to precedence 30, above legacy IPv4.</t>
  <t>Changed default policy table to move the 6to4 address block 2002::/16 to the same precedence as the Teredo prefix.</t>
  <t>Changed ::ffff:0:0/96 to precedence 20.</t>
  <t>Changed Rule 5.5 to a <bcp14>MUST</bcp14> support.</t>
  <t>Defined the concept of known-local ULA prefixes for currently defined RFC 4193 ULAs with L=1 under fd00::/8, how they may be learnt, and the <bcp14>MUST</bcp14> requirement to insert them into the policy table.</t>
  <t>Added text clarifying intended behaviors.</t>
  <t>Added text discussing ULA to GUA/ULA case.</t>
  <t>Added text for the security section.</t>
  <t>Added text to account for SNAC bit.</t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC6724;
&RFC8028;
&RFC4861;
&RFC2119;
&RFC4191;
&RFC4193;
&RFC7526;
<reference anchor="SNACBIT" target="https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml#icmpv6-parameters-11">
  <front>
    <title>IPv6 ND Router Advertisement Flags</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ANDROID" target="https://r.android.com/3046000">
  <front>
    <title>Optionally prefer known-local ULAs in Android</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="RAIO-ULA-PY" target="https://github.com/jeremy-duncan/raio_ula">
  <front>
    <title>Python known-local ULA implementation</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC8174;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&RFC1918;
&RFC6555;
&RFC8305;
&RFC3587;
&RFC8925;
&RFC3484;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAFeBkmcAA7V963LbSJbmfz5FjnoiRqogKVGSZZe2q6dlq6rLNS7Za8lT
2zExMQECSRJtEODgIhWro+ZZ9ln2yfZc8wKAKk93jH7YEgkgM0+ePOc7V8xm
s0mbt4W9Nh/qvKrzNv8lL9fmc1k9lbOiSpPCvP3weGU+vbtpTLupq269MUmW
1bZpTGMLm7Z5VZpdVeTpfpIsl7V9fOZZ9Ji8NB+/e2OuXp5fTrIqLZMtDJ/V
yaqd5bZdza62STmrVyleMOt2WdLa2eLlJE3aa9O02aTpltu8aWDcdr+DW99+
+/DdJN/V16atu6Y9Pzv7+ux8ktQ2ge/KdvK0vjZXP97cTT4/0Qe2Lm07u8UB
J/z45ppnM0m6dlPV1xNDPzP538CU4ZK7uXnd1cm6yCv3BU/+Lk8/D7+rahj4
29LW6725T3NbprYxd7Z9qurP7iK7TfLi2izl5j+uqvopqTMg3K5ISjuHqY7P
5mFu3myAsr2pPOTb3uc0jR/yJu2PCZfO6dI//gW+nSfpvPs8PtYPc3PblWnS
H+wHW9vtvv8dDfiQpJs9cMbtHi7N06Y/+F8yuumPLV+XyWXztNpOJmVVb5M2
f7S4E8AruDny66uz81fy6+Wrq4X8er5YfK2fLr5e+F8v5NeXL86v8Nf7u5s3
r98+8A63Sb22wFRHm7bdNdenp09PT/M8KZM5LOE0ARZbl1tbts1pnm53j1ez
XVLDuoGBRj6Z/7xpt8XvBp/PFosjHo3PGR2nu1vzserga3OTPdq6zRuLA5nv
imSNpLq5u/34/u3tgWnW86TM6irPkFqnF2eXV2dnZ9Eg73d4LJOi2JtdbVcw
ztgpvOGnIIVu3r6fwcezD38+MOY6bzfdkgb8C+36jDfwtE7y6j+6IonG/7CH
c1T2BzX5dlfQQhOSGmaSl6veVsPu6f5evXjxQnf94kx/vXjx6qV++vW5+/Ty
FXDIZDabmWTZtHWStpPJwyZvDEiYjmgLEuapMTBsY4HkMKO9TWr4YGWqHfzN
BDP2Z/iDzqppK8PiwYmrqcnsKi9RqrUba9IKLtu1+IijYKlHtFake/6zRamZ
tMaWybKw+MWsrZDScPN225V5SgM35gnoC1uyys7Orq9PX+HgSwvXWNnA2mam
gnmbZdVukIkuZ/iPAU4wf/pET4X/DJDTML27xs7NA8zSEwDnThOyZmsTGHS5
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
kYkAAA==

-->

</rfc>

