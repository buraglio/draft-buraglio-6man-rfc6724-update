<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.33 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7078 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7078.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
]>


<rfc ipr="trust200902" docName="draft-buraglio-6man-rfc6724-update-01" category="std" consensus="true" submissionType="IETF" updates="6724">
  <front>
    <title abbrev="Prefer ULAs over RFC1918 addresses">Preference for ULAs over RFC1918 addresses in RFC6724</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2023" month="July" day="10"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 44?>

<t>This document updates RFC 6724 based on operational experience gained since its publication over ten years ago. In particular it updates the preference of Unique Local Addresses (ULAs) in the default address selection policy table, which as originally defined by RFC 6724 has lower precedence than legacy IPv4 addressing. The update places both IPv6 Global Unicast Addresses (GUAs) and ULAs ahead of all IPv4 addresses on the policy table to better suit operational deployment and management of ULAs in production. This document also updates requirements on configurability of the policy table and preference for using ddresses from a prefix advertised by a next-hop router, and demotes the preference for 6to4 addresses in the default policy table. These changes to default behavior improve supportability of common use cases such as, but not limited to, automatic / unmanaged scenarios. It is recognized that some less common deployment situations may require explicit confioguration or custom changes to acheive desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 48?>

<section anchor="introduction"><name>Introduction</name>

<t>When <xref target="RFC6724"/> was published in 2012 it was expected that the default policy table may need to be updated from operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, including Section 10.6 which considers a ULA example.</t>

<t>This document is written on the basis of operational experience, in particular for scenarios where ULAs are used within a site. The current default policy table in RFC 6724 leads to preference for IPv6 GUAs over IPv4 globals, which is widely considered to be preferential behaviour to support greater use of IPv6 in dual-stack environments, and to allow sites to phase out IPv4 as its use becomes ever lower.</t>

<t>However, the  default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses. For many site operators this behavior will be counter-intuitive, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addressing is used in certain IPv4/IPv6 dual-stack network scenarios. The expected prioritization of IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addressing, will not happen for ULAs.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC 1918 addressing, and may or may not use some form of NAT. This document makes no comment or recommendation on how ULAs are used, or on NAT, but notes that operationally where GUAs and ULAs are used alongside RFC 1918 addressing, an IPv6 GUA would be selected to reach an IPv6 GUA destination, but where only ULAs and RFC1918 addressing are used, RFC 1918 addresses will be preferred.</t>

<t>This document updates the default policy table to elevate the preference for ULAs such that ULAs will be preferred over all IPv4 addresses, providing more consistent and less confusing behaviour for operators.</t>

<t>Note that ULAs must never be used across site boundaries as if they were under unregistered global prefixes. Nothing in this document pertains to such misuse.</t>

<t>The emergence of this issue also reinforces the need for the original RFC 6724 address slection policy table to be configurable. RFC 6724 Section 2.1 states that the table <bcp14>SHOULD</bcp14> be configurable; this document proposes elevating that requirement to <bcp14>MUST</bcp14>, to ensure that any device can have its policy table tuned for the scenario in which it is deployed. Section 10 of RFC 6724 gives other examples of why configurability is important.</t>

<t>This document aims to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. Sites using DHCPv6 for host configuration management can make use of implementations of <xref target="RFC7078"/> to apply changes to the RFC 6724 policy table.</t>

<t>It has also become clearer from operational experience that the heuristic to prefer addresses drawn from a prefix advertised by a next-hop router is a valuable one to use.  This text therefore also proposes elevating that requirement in Section 5.5 from <bcp14>SHOULD</bcp14> to <bcp14>MUST</bcp14>.</t>

<t>These updates are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

<t>Authors' note for the -00 version: this draft also captures some of the meta discussion around not only the proposed changes but other suggestions drawn from 6man WG list discussions.  These elements will be removed if there is consensus to move the document forward on the proposed path.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

</section>
<section anchor="unintended-operational-issues-regarding-ipv6-preference-and-ulas"><name>Unintended Operational Issues Regarding IPv6 Preference and ULAs</name>

<t>The preference for use of IPv6 addressing over IPv4 addressing in <xref target="RFC6724"/> is inconsistent. As written, RFC 6724 section 10.3 states:</t>

<figure><artwork><![CDATA[
"The default policy table gives IPv6 addresses higher precedence than
IPv4 addresses.  This means that applications will use IPv6 in
preference to IPv4 when the two are equally suitable.  An
administrator can change the policy table to prefer IPv4 addresses by
giving the ::ffff:0.0.0.0/96 prefix a higher precedence".
]]></artwork></figure>

<t>The expected behavior would be that ULA address space would be preferred over legacy IPv4, however this is not the case. This presents an issue with any environment that will use ULA addressing alongside legacy IPv4, whether global or RFC 1918. This is counter to the standard expectations for legacy IPv4 / IPv6 dual-stack behavior in preferring IPv6, which is the case for GUA addressing.</t>

<section anchor="operational-implications"><name>Operational Implications</name>

<t>There are demonstrated and easily repeatable uses cases of ULA not being preferred in some OS and network equipment over legacy IPv4 that necessitate an update to RFC 6724 to better reflect the original intent of the RFC.</t>

<t>Below is an example of a gai.conf file from a modern Linux installation as of 25 May 2023:</t>

<figure><artwork><![CDATA[
# Configuration for getaddrinfo(3).
#
# So far only configuration for the destination address sorting is needed.
# RFC 3484 governs the sorting.  But the RFC also says that system
# administrators should be able to overwrite the defaults.  This can be
# achieved here.
#
# All lines have an initial identifier specifying the option followed by
# up to two values.  Information specified in this file replaces the
# default information.  Complete absence of data of one kind causes the
# appropriate default information to be used.  The supported commands include:
#
# reload  <yes|no>
#    If set to yes, each getaddrinfo(3) call will check whether this file
#    changed and if necessary reload.  This option should not really be
#    used.  There are possible runtime problems.  The default is no.
#
# label   <mask>   <value>
#    Add another rule to the RFC 3484 label table.  See section 2.1 in
#    RFC 3484.  The default is:
#
#label ::1/128       0
#label ::/0          1
#label 2002::/16     2
#label ::/96         3
#label ::ffff:0:0/96 4
#label fec0::/10     5
#label fc00::/7      6
#label 2001:0::/32   7
#
#    This default differs from the tables given in RFC 3484 by handling
#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.
#    The reason for this difference is that these addresses are never
#    NATed while IPv4 site-local addresses most probably are.  Given
#    the precedence of IPv6 over IPv4 (see below) on machines having only
#    site-local IPv4 and IPv6 addresses a lookup for a global address would
#    see the IPv6 be preferred.  The result is a long delay because the
#    site-local IPv6 addresses cannot be used while the IPv4 address is
#    (at least for the foreseeable future) NATed.  We also treat Teredo
#    tunnels special.
#
# precedence  <mask>   <value>
#    Add another rule to the RFC 3484 precedence table.  See section 2.1
#    and 10.3 in RFC 3484.  The default is:
#
#precedence  ::1/128       50
#precedence  ::/0          40
#precedence  2002::/16     30
#precedence ::/96          20
#precedence ::ffff:0:0/96  10
#
#    For sites which prefer IPv4 connections change the last line to
#
#precedence ::ffff:0:0/96  100

#
# scopev4  <mask>  <value>
#    Add another rule to the RFC 6724 scope table for IPv4 addresses.
#    By default the scope IDs described in section 3.2 in RFC 6724 are
#    used.  Changing these defaults should hardly ever be necessary.
#    The defaults are equivalent to:
#
#scopev4 ::ffff:169.254.0.0/112  2
#scopev4 ::ffff:127.0.0.0/104    2
#scopev4 ::ffff:0.0.0.0/96       14
]]></artwork></figure>

<t>The legacy IPv4 address range in the gai.conf file is "scopev4" and the prefix ::ffff:0.0.0.0/96 which has a higher precedence (35) in RFC 6724 than the ULA prefix of fc00::/7 (3). This results in legacy IPv4 being preferred over IPv6 ULA. While not inherently undesirable, the operational outcome when utilizing dual-stack with ULA is inconsistent and imparts unnecessary difficulty for both troubleshooting and creating the requisite baseline of the expected behavior which are both requirements for supportable production deployments. Depending on the host implementation, security baseline expectations can be inconsistent at best and haphazard at worst.</t>

<t>As the gai.conf file, or an equivalent within a given operating system, is referenced it dictates the
behavior of the getaddrinfo() or analogous process. More specifically, where getaddrinfo() or a comparable API is used, the sorting behavior should take into account both
the source address of the requesting host as well as the destination addresses returned and sort according to both source and destination addresses, i.e, when a ULA address is
returned, the source address selection should return and use a ULA address if available. Similarly, if a GUA address is returned the source address selection should return a GUA source address if available.</t>

<t>However, there are clearly evidenced example of three failure scenarios:</t>

<t><list style="numbers">
  <t>ULA per RFC 6724 is less preferred (the Precedence value is lower) than all legacy IPv4 (represented by ::ffff:0:0/96 in the aforementioned table).</t>
  <t>Because of the lower Precedence value of fc00::/7, if a host has legacy IPv4 enabled, it will use legacy IPv4 before using ULA.</t>
  <t>A dual-stacked client will source the traffic from the legacy IPv4 address, meaning it will require a corresponding legacy IPv4 destination address.</t>
</list></t>

<t>For scenario number 3, when a host resolves through DNS a destination with A and AAAA DNS records, the host will choose the A record to get an legacy IPv4 address for the destination, meaning ULA IPv6 is rendered unused.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default.</t>

</section>
</section>
<section anchor="configurability-of-the-default-policy-table"><name>Configurability of the Default Policy Table</name>

<t>In principle the above problem would not be an issue were the RFC 6724 default policy table readily configurable in all systems. Section 10.6 states that ULAs can be preferred by adding a site-specific entry to the default policy table. In practice, this is currently not always possible.</t>

<t>While conceptually the intent was for a configurable, longest-match table to be adjusted as needed. In practice, modifying the prefix policy table remains difficult across platforms, and in some cases impossible. Embedded, proprietary, closed source, and IoT devices are especially difficult to adjust, and are in many cases incapable of any adjustment. Large scale manipulation of the policy table also remains out of the realm of realistic support for small and medium scale operators due to lack of ability to manipulate all the hosts and systems, or a lack of tooling and access.</t>

<t>Operational experience suggests that the default policy table needs to be as configurable as possible in as many systems as possible. This update therefore proposes that the requirement that IPv6 implementations support configurable address selection via a mechanism at least as powerful as the policy table be elevated from a <bcp14>SHOULD</bcp14> to a <bcp14>MUST</bcp14>.</t>

<t>Authors' note for the -00 version: of course we state above that for some platforms, the ability to implement such a method is challenging.  The question for the 6man WG is how to ensure configurability is as widespread as possible.</t>

</section>
<section anchor="next-hop-router-heuristic"><name>Next-hop router heuristic</name>

<t>The heuristic for address selection defined in Section 5.5 of RFC 6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.  RFC 6724 does not state any requirement for <bcp14>SHOULD</bcp14> or <bcp14>MUST</bcp14> for this heuristic to be used; this update therefore proposes stating that the application of the heuristic be a <bcp14>MUST</bcp14>.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addressing has further declined to the point where it is generally not seen and can be considered to all intents and purposes deprecated in use.  This document therefore demotes the preference of the 6to4 prefix in the policy table to the same minimum preference as carried by the deprecated site local and 6bone address prefixes.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>Rule 2.1 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
IPv6 implementations SHOULD support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies as more experience is gained.  Sections 10.3
through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
IPv6 implementations MUST support configurable address selection
via a mechanism at least as powerful as the policy tables defined
here.  It is important that implementations provide a way to change
the default policies to ensure operational supportability and flexibility in deployment.
Sections 10.3 through 10.7 provide examples of the kind of changes that might be
needed.
]]></artwork></figure>

<t>Rule 2.1 of RFC 6724 further states:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      ::ffff:0:0/96         35     4
      2002::/16             30     2
      2001::/32              5     5
      fc00::/7               3    13
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This document updates RFC 6724 section 2.1 to the following:</t>

<figure><artwork><![CDATA[
If an implementation is not configurable or has not been configured,
   then it SHOULD operate according to the algorithms specified here in
   conjunction with the following default policy table:


      Prefix        Precedence Label
      ::1/128               50     0
      ::/0                  40     1
      fc00::/7              30    13
      ::ffff:0:0/96         20     4
      2001::/32              5     5
      2002::/16              1     2
      ::/96                  1     3
      fec0::/10              1    11
      3ffe::/16              1    12
]]></artwork></figure>

<t>This preference table update moves 2002::/16 to de-preference its status in line with RFC 7526 and changes the default address selection to move fc00::/7 above legacy IPv4, with ::ffff:0:0/96 now set to precedence 20.</t>

<t>Rule 5.5 of RFC 6724 states:</t>

<figure><artwork><![CDATA[
Rule 5.5: Prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [RFC4861] and Section 3 of [RFC4191]
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

<t>This document updates RFC 6724 section 5.5 to the following:</t>

<figure><artwork><![CDATA[
Rule 5.5: Hosts MUST prefer addresses in a prefix advertised by the next-hop.
If SA or SA's prefix is assigned by the selected next-hop that will
be used to send to D and SB or SB's prefix is assigned by a different
next-hop, then prefer SA.  Similarly, if SB or SB's prefix is
assigned by the next-hop that will be used to send to D and SA or
SA's prefix is assigned by a different next-hop, then prefer SB.
Discussion: An IPv6 implementation is not required to remember
which next-hops advertised which prefixes.  The conceptual models
of IPv6 hosts in Section 5 of [RFC4861] and Section 3 of [RFC4191]
have no such requirement.  Hence, Rule 5.5 is only applicable to
implementations that track this information.
]]></artwork></figure>

</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using RFC 6724
itself as a measuring stick, the updates defined in this document will likely take between 8-20 years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC 6724
has been published but we continue to see existing commercial and open source operating systems exhibiting <xref target="RFC3484"/>
behavior.</t>

<t>While it should be noted that RFC 6724 defines a solution that is functional theoretically, operationally the solution of adjusting the address preference selection table
is both operating system dependent and unable to be signaled by any network mechanism such as within a router advertisement or DHCPv6 option (while <xref target="RFC7078"/> defines such a DHCPv6 option, it is not by any means widely implemented). This lack of an
intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually
renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

<t>In practice this means that network operators and those who design networks need to keep these considerations in mind.  One workaround should the ULA and IPv4 preference issue be of concern is to use IPv6-only networking, and to simply not deploy dual-stack. Another is to use GUA IPv6 addresses, which are preferred by defaul over all IPv4 addresses.</t>

</section>
<section anchor="notes-on-the-6man-working-group-list-discussion"><name>Notes on the 6Man Working Group list discussion</name>

<t>Authors' note for the -00 version: this section captures some interesting suggestions from the 300 or so emails in the past few months in the 6man WG on this topic. These are noted, and captured here to inform discussion of the draft should it move forward in the WG.</t>

<t><list style="symbols">
  <t>The suggestion to automatically insert an observed ULA /48 into the policy table to elevate a locally used ULA above IPv4 and GUA addresses was quite popular, though kernel implementation may be challenging for all platforms. This would be supported by changing the â<bcp14>MAY</bcp14>" in Section 2.1 and the âmightâ in Section 10.6 of RFC 6724 to â<bcp14>SHOULD</bcp14>â (or even a <bcp14>MUST</bcp14>). The case for a <bcp14>MUST</bcp14> is greater in order to allow for maximum network operator flexibility if the source selection table is not modified by the operating system. This could be an acceptable compromise, but requires two additional additions to an IPv6 ULA network: router manufacturers must now implement this new feature that is not a standard option in IPv6 Router Advertisements (RAs) and operators must know that the capability to add a tag for ULA prefixes in the source selection table is an operational possibility and now part of an architectural consideration. Network operators using managed addressing may have not considered using a tagged ULA prefix in RA as an option.</t>
  <t>The list discussed handling of corner cases, though what constitutes a corner case is in itself not wholly clear. The above suggestion for example would not cover the case where two sites using ULAs merged, and multiple ULA prefixes needed to be considered local. The open question is how deeply we consider corner cases; is some requirement for explicit configuration of certain cases inevitable? Is improving the current situation sufficient?</t>
  <t>A suggestion to use an RA PIO with A=0 and L=0, based on an interpretation of Section 2.1 of RFC 8028, was proposed but considered something of a stretch. That said, it could be an RA-based starting point to give some configurability for non-DHCPv6 networks.</t>
</list></t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including Brian Carpenter, XiPeng Xiao, Eduard Vasilenko, David Farmer, Bob Hinden, Ed Horley, Tom Coffeen, Scott Hogg, and Chris Cummings.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RFC 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC 1918 addresses are used instead.</t>

<t>When using the updated ULA source address selection defined in this document, network operators <bcp14>MUST</bcp14> follow Section 4.3 of <xref target="RFC4193"/> for firewall/packet filtering as "routers be configured by default to keep any packets with Local
IPv6 addresses from leaking outside of the site and to keep any site prefixes from being advertised outside of their site." Following this security practice is critical when ULAs have more broad reachability.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="appendix-a-changes-since-rfc6724"><name>Appendix A. Changes since RFC6724</name>

<t><list style="symbols">
  <t>Update to default preference table moving 6to4 address block 2002::/16 to de-preference status in line with <xref target="RFC7526"/></t>
  <t>Change the default address selection to move fc00::/7 to preference 35, above legacy IPv4,</t>
  <t>Change ::ffff:0:0/96 to preference 30.</t>
  <t>Change section 5.5 Prefer addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14></t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC2119;
&RFC4193;
&RFC7078;
&RFC7526;
&RFC8174;


    </references>

    <references title='Informative References'>

&RFC6724;
&RFC1918;
&RFC3484;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAAENrGQAA+1c63Ibx5X+P0/RK/2IlAIhgqQoiXHsQKRsMaXbitR6U6n8
GMw0gDYHM8hcSMGJt/Igu1X7LPsoeZI93zmne3oAyJG9ldrdqtBVFjDo6cvp
c75z7T44OEha1xb2zLyr7dzWtsysmVe1+fBq2pjq1tbm/dfnk2eTpybN89o2
jW2MK/Hw9MnRSZLOZrW99W//2FtJXmVluqKR8jqdtwezrk4XhasOTldpeVDP
M/R30K3ztLUHh5MkS9sz07R50nSzlWsaV5XtZk2vX764/jpx6/rMtHXXtEeH
h88Oj5K0tin9VrbJ3eLMnL6evklu7viBrUvbHlxg0ES6b6gBJp8kadcuq/os
Mfx3oP8aWiG1eTM2z3WS4QdZwRuX3ez+VtU08ovS1ouNucocSNmYN7a9q+qb
0MiuUlecGb/63xCt79I6d+ViXaSlHdNc98/memzOl9VduTWVa7faes7T+K1r
su0xqemYm/7mO/p1nGbj7mb/WL8dm4uuzNLtwX5LDLLabP/GA16n2XJTleZi
Q01d1mwP/l3OL/2mlXa5Nhtn1SpJyqpepa27tdgJ4pyjyeSZfjyZPDvWj08O
nzz1Hx8fnZ6h9yRx5XzrbeytfgQL6sfjk6d4muCdg4MDk86atk6zNkmul64x
xJ3dypatURbBK8wlZpY2Nje0tGptaxqnKtPC2I/0hbfYLFJXUoPG4YtrG7Pu
ZoXLuKXIQmtLs7Fp3Zh0UY2JJ806rVuXdUVa0xthyHZpzboXw2puPpTuj501
r6qMxpwGAXwAOXsIOcQruZ2nXdF6UTONLWzGo68rmsjGtOmssCNzt3TZ0qQk
oLVbOFpFscG7PPvZpl/wkpoU1R1NnCaT2Zwn0y7T0hR2kVJ/l+9uT/xoxLhj
c02zkEUY4mKw/axql2h3ar4pqhlNnlaSpU0bL+KbD1hEWuYCG+nSpjkWTRMb
DEFtK1lpvB7TVmZmWxJv03RExHh3crsuqg1vJ7ongEkXlr+CphiMSLeuq7xj
OmEBMQukRVOFTantHztX89s8j6wq525B4jtzhWs36HFnahh0PcTTDpQyYUHz
ulqZlBu5j7RQYpPWNbIRqSntx/ZgWa1NXXW0wBF3mNtVtYdL0PlpW50M8Tnm
i3hqvFeNNRlt5wKdVaHZzC7TW0e9uRWR5tYSWdfrqm6jhZKwrogEHTpIMVLT
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

-->

</rfc>

