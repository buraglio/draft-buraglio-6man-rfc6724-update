<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC6724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6724.xml">
<!ENTITY RFC8028 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8028.xml">
<!ENTITY RFC4861 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml">
<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4191 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4191.xml">
<!ENTITY RFC4193 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4193.xml">
<!ENTITY RFC7526 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7526.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC1918 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.1918.xml">
<!ENTITY RFC6555 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6555.xml">
<!ENTITY RFC8305 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC3587 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3587.xml">
<!ENTITY RFC8925 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8925.xml">
<!ENTITY RFC3484 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3484.xml">
<!ENTITY RFC4862 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC3493 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.3493.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-6man-rfc6724-update-19" category="std" consensus="true" submissionType="IETF" updates="6724">
  <front>
    <title abbrev="Prioritizing known-local ULA in RFC 6724">Prioritizing known-local IPv6 ULAs through address selection policy</title>

    <author initials="N." surname="Buraglio" fullname="Nick Buraglio">
      <organization>Energy Sciences Network</organization>
      <address>
        <email>buraglio@forwardingplane.net</email>
      </address>
    </author>
    <author initials="T." surname="Chown" fullname="Tim Chown">
      <organization>Jisc</organization>
      <address>
        <email>Tim.Chown@jisc.ac.uk</email>
      </address>
    </author>
    <author initials="J." surname="Duncan" fullname="Jeremy Duncan">
      <organization>Tachyon Dynamics</organization>
      <address>
        <email>jduncan@tachyondynamics.com</email>
      </address>
    </author>

    <date year="2025" month="April" day="17"/>

    <area>Int</area>
    <workgroup>6MAN</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 57?>

<t>This document draws on several years of operational experience to update the recommended process of Default Address Selection for Internet Protocol Version 6 (IPv6) defined in RFC6724, defining the concept of "known-local" Unique Local Address (ULA) prefixes that enable ULA-to-ULA communications within fd00::/8 to become preferred over both IPv4-IPv4 and GUA-to-GUA (Global Unicast Addresses) for local use. The document defines the means by which nodes can both identify and insert such prefixes into their address selection policy table. It also clarifies the mandatory, unconditional requirement for support for Rule 5.5 defined in Section 5 of RFC6724 and demotes the preference for 6to4 addresses. These changes to default behavior improve supportability of common use cases, including automatic / unmanaged scenarios, and makes preference for IPv6 over IPv4 consistent in local site networks for both ULA and GUA prefixes. It is recognized that some less common deployment scenarios may require explicit configuration or custom changes to achieve desired operational parameters.</t>



    </abstract>



  </front>

  <middle>


<?line 61?>

<section anchor="introduction"><name>Introduction</name>

<t>Since its publication in 2012, Default Address Selection for Internet Protocol Version 6 (IPv6) <xref target="RFC6724"></xref> has become an important mechanism by which nodes can perform address selection, deriving the most appropriate source and destination address pair to use from a candidate set by following the procedures defined in the RFC. Part of the process involves the use of a policy table, where the precedence and labels for address prefixes are listed, and for which a default policy table is defined.</t>

<t>It was always expected that the default policy table may need to be changed based on operational experience; section 2.1 says "It is important that implementations provide a way to change the default policies as more experience is gained" and points to the examples in Section 10, which include Section 10.6 where a ULA example is presented.</t>

<t>This document is written on the basis of such operational experience, in particular for scenarios where ULAs are used for their intended purpose as stated in <xref target="RFC4193"/>, i.e., they are designed to be routed within a local site and by default not advertised, used or received from external locations to that site. The document defines how preference for ULAs may be elevated for appropriate, common scenarios.</t>

<t>To support the preference to use ULA address pairs over both IPv4 and GUA address pairs for local intra-site scenarios, the concept of a "known-local" ULA address is introduced. This document describes the means for nodes to determine ULA prefixes that are known to be local to the site they are operating in and to insert those prefixes into their policy table with a label that differs from general ULA prefixes. This capability allows nodes to prefer ULA-ULA communication locally, but still use GUA-GUA address pairs for external communication, and importantly avoid selecting a ULA source to talk to a non-local ULA destination.</t>

<t>This document also reinforces the text in Section 5 of RFC6724 to require support for Rule 5.5.</t>

<t>RFC4193 defines ULAs within fc00::/7, where the L bit, as detailed in Section 3.1, is set to 1 for locally assigned (generated) prefixes, with L=0 as yet undefined. The use of known-locals as described in this document therefore applies to the currently used ULA prefixes under fd00::/8, where the prefixes conform to the definition in Section 3.1 of <xref target="RFC4193"/>.</t>

<t>The overall goal of this update is to improve behavior for common scenarios, and to assist in the phasing out of use of IPv4, while noting that some specific scenarios may still require explicit configuration.</t>

<t>An IPv6 deployment, whether enterprise, residential or other, may use combinations of IPv6 GUAs, IPv6 ULAs, IPv4 globals, IPv4 RFC1918 addresses, and may or may not use some form of NAT. However, this document makes no comment or recommendation on how ULAs are used, or on the use of NAT in an IPv6 network.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>GUA: Global Unicast Addresses as defined in <xref target="RFC3587"/></t>

<t>ULA: Unique Local Addresses as defined in <xref target="RFC4193"/></t>

<t>Known-local ULA: A ULA prefix that an individual organization/site has determined to be local to a given node/network</t>

<t>RA: IPv6 Router Advertisement as defined in <xref target="RFC4861"/></t>

<t>PIO: IPv6 Prefix Information Option as defined in <xref target="RFC4861"/></t>

<t>SLAAC: IPv6 Stateless Address Auto-configuration <xref target="RFC4862"/></t>

</section>
<section anchor="operational-issues-regarding-preference-for-ipv4-addresses-over-ulas"><name>Operational Issues Regarding Preference for IPv4 addresses over ULAs</name>

<t>With multi-addressing being the norm for IPv6, more so where nodes are dual-stack, the ability for a node to pick an appropriate address pair for communication is very important.</t>

<t>Where getaddrinfo() as referenced in <xref target="RFC3493"/>, or a comparable API is used, the sorting behavior should take into account both
the source addresses of the requesting node as well as the destination addresses returned, and sort the candidate address pairs following the procedures defined in RFC6724.</t>

<t>The current default policy table leads to preference for use of IPv6 GUAs over IPv4 globals, which is widely considered preferential behavior to support greater use of IPv6 in dual-stack environments. This helps in allowing sites to phase out IPv4 as its evidenced use becomes ever lower.</t>

<t>However, there are two issues with preference, or rather non-preference, for ULAs as originally defined in RFC6724.</t>

<t>One is that the same default policy table also puts IPv6 ULAs below all IPv4 addresses, including <xref target="RFC1918"/> addresses, such that IPv4-IPv4 address pairs are favored over ULA-ULA address pairs. For many site operators this behavior will be counter-intuitive, given the IPv6 GUA preference, and may create difficulties with respect to planning, operational, and security implications for environments where ULA addresses are used in IPv4/IPv6 dual-stack network scenarios. The expected default prioritization of known-local IPv6 traffic over IPv4 by default, as happens with IPv6 GUA addresses, does not happen for ULAs.</t>

<t>As a result, the use of ULAs is not a viable option for dual-stack networking transition planning, large scale network modeling, network lab environments or other modes of large scale networking that run both IPv4 and IPv6 concurrently with the expectation that IPv6 will be preferred by default. Local preference of ULAs over IPv4 is thus important to assist operators in phasing out IPv4 from dual-stack environments and is an important enabler for sites seeking to move from dual-stack to IPv6-only networking.</t>

<t>The other issue is that where nodes in a dual-stack site are addressed from both ULA and GUA prefixes, RFC6724 will see GUA-GUA address pairs chosen over ULA-ULA. One goal of ULA addresses was to allow local communications to be independent of the availability of external connectivity and addresses, such that persistent ULAs can be used even when the global prefix made available to a site is withdrawn or changes.</t>

<t>This document therefore introduces two changes to RFC6724 to support a node implementing elevated or differential preference for  known-local ULAs, i.e., ULAs within a common local network, over both IPv4 and IPv6 GUAs.</t>

<t>The first change is an update to the default policy table to elevate the preference for ULAs prefixes such that ULAs, like GUAs, carry a higher precedence than all IPv4 addresses, making IPv6 precedence over IPv4 consistent for both ULAs and GUAs.</t>

<t>The second change is the introduction of the concept of known-local ULAs. RFC6724 includes a method by which nodes <bcp14>MAY</bcp14> provide more fine-grained support for further elevating the preference for specific ULA prefixes, while leaving other general ULA prefixes at the precedence described in the previous paragraph. This document elevates the requirement for specific ULA prefixes to be inserted into the policy table to be a <bcp14>MUST</bcp14>, but only for observed prefixes that are known to be local, i.e., known-local ULAs. Nodes implementing this behavior will see ULA prefixes known to be local to the node's site having precedence over IPv4 addresses and also over IPv6 GUA addresses, such that they can use ULA addresses independently of global prefixes within their site and continue to use GUA-GUA address pairs to talk to destinations external to their site.</t>

<t>These changes aim to improve the default handling of address selection for common cases, and unmanaged / automatic scenarios rather than those where DHCPv6 is deployed. The changes are discussed in more detail in the following sections, with a further section providing a summary of the proposed updates.</t>

</section>
<section anchor="preference-of-6to4-addresses"><name>Preference of 6to4 addresses</name>

<t>The anycast prefix for 6to4 relays was formally deprecated by <xref target="RFC7526"/> in 2015, and since that time the use of 6to4 addresses has further declined, with very little evidence of its use on the public internet. Note that RFC7526 does not deprecate the 6to4 IPv6 prefix 2002::/16, it only deprecates the 6to4 Relay IPv4 prefix.</t>

<t>This document therefore demotes the precedence of the 6to4 prefix in the policy table to the same precedence as carried by the Teredo prefix. Leaving this entry in the default table will cause no problems and will help if any deployments still exist, and ensure 6to4 prefixes are differentiated from general GUAs.</t>

<t>The discussion regarding the adding of 6to4 site prefixes in section 10.7 of RFC6724 remains valid.</t>

</section>
<section anchor="adjustments-to-rfc-6724"><name>Adjustments to RFC 6724</name>

<t>This document makes three specific changes to RFC6724: first to update the default policy table, second to change Rule 5.5 on preferring addresses in a prefix advertised by the next-hop to a <bcp14>MUST</bcp14>, and third to require that nodes <bcp14>MUST</bcp14> insert observed known-local ULA prefixes into their policy table.</t>

<section anchor="policy-table-update"><name>Policy Table Update</name>

<t>This update alters the default policy table listed in Rule 2.1 of RFC 6724.</t>

<t>It should be noted the order of rows in the policy table is of no consequence and only the precedence value is relevant.</t>

<t>The table below reflects the current RFC6724 state on the left, and the updated state defined by this RFC on the right:</t>

<figure><artwork><![CDATA[
                    RFC6724                               Updated                  
Prefix       Precedence Label        Prefix        Precedence Label              
::1/128              50     0        ::1/128               50     0
                                     $known_local/48       45    14 (**)
::/0                 40     1        ::/0                  40     1
::ffff:0:0/96        35     4        ::ffff:0:0/96         20     4 (*)
2002::/16            30     2        2002::/16              5     2 (*)
2001::/32             5     5        2001::/32              5     5
fc00::/7              3    13        fc00::/7              30    13 (*)
::/96                 1     3        ::/96                  1     3
fec0::/10             1    11        fec0::/10              1    11
3ffe::/16             1    12        3ffe::/16              1    12

(*) value(s) changed in update
(**) $known_local = the ULA Known-Local /48 IPv6 prefix(es) (if any) 
with precedence and labels per the rules in Sec 5.3

]]></artwork></figure>

<t>The update moves 2002::/16 to de-preference its status in line with <xref target="RFC7526"/> and moves the precedence of fc00::/7 above legacy IPv4, with ::ffff:0:0/96 now set to precedence 20.</t>

</section>
<section anchor="rule-55"><name>Rule 5.5</name>

<t>The heuristic for address selection defined in Rule 5.5 of Section 5 of RFC6724 to prefer addresses in a prefix advertised by a next-hop router has proven to be very useful.</t>

<t>The text in RFC6724 states that the Rules <bcp14>MUST</bcp14> be followed in order, but also includes a discussion note under Rule 5.5 that says that an IPv6 implementation is not required to remember which next-hops advertised which prefixes and thus that Rule 5.5 is only
applicable to implementations that track this information.</t>

<t>This document removes that exception and elevates the requirement to prefer addresses in a prefix advertised by a next-hop router to a <bcp14>MUST</bcp14> for all nodes.</t>

<t>This change means that an IPv6 implementation will need to remember which next-hops advertised which prefixes
<xref target="RFC8028"/>, despite the conceptual models of IPv6 hosts in Section 5 of <xref target="RFC4861"/> and Section 3 of <xref target="RFC4191"/>
having no such requirement.</t>

</section>
<section anchor="automatic-insertion-of-known-local-ula-prefixes-into-the-policy-table"><name>Automatic insertion of known-local ULA prefixes into the policy table</name>

<t>Section 2.1 of RFC6724 states that "an implementation <bcp14>MAY</bcp14> automatically add additional site-specific rows to the default table based on its configured addresses, such as for Unique Local Addresses (ULAs)", but it provides no detail on how such behavior might be implemented.</t>

<t>If a node can determine which ULA prefix(es) are known to be local, it can provide differential treatment for those over general ULAs, and insert these into the policy table at a higher precedence than GUAs while keeping all general ULA prefixes to a lower precedence.</t>

<t>This document thus elevates the <bcp14>MAY</bcp14> requirement above for insertion to a <bcp14>MUST</bcp14> for the specific case of known-local ULAs.</t>

<t>These known-local ULA prefixes are inferred from ULA addresses assigned to interfaces or learned from Prefix Information Options (PIOs) in Router Advertisements (RAs) <xref target="RFC4861"/> received on any interface regardless of how the PIO flags are set. Further, they are learned from Route Information Options (RIOs) in RAs received on any interface by Type C hosts that process RIOs, as defined in <xref target="RFC4191"/>.</t>

<t>Section 3.1 of RFC4193 only defines ULA prefixes where the L-bit is set to 1, i.e., prefixes under fd00::/8 where the prefix is locally assigned or generated. The use of ULAs where L=0, i.e., prefixes under fc00::/8, is currently undefined.</t>

<t>The following rules define how the learnt known-local ULA prefixes under fd00::/8 are inserted into the address selection policy table for a node, through a conceptual list of known-local prefixes.</t>

<t><list style="numbers">
  <t>Any RIO or PIO that is delivered in an RA in which the "SNAC Router" RA header flag bit <xref target="SNACBIT"/> is set <bcp14>MUST</bcp14> be ignored when considering the following rules.</t>
  <t>RIOs from within fd00::/8 are considered the preferred information source for determining known-local ULAs and should override other conflicting information or assumptions from other sources, including PIOs.</t>
  <t>RIOs within fd00::/8 that are of length /40 or longer <bcp14>MUST</bcp14> be added to the known-local ULA list. RIOs for shorter prefixes <bcp14>MUST NOT</bcp14> be used to insert known-local ULA entries in the address selection policy table</t>
  <t>PIOs received within fd00::/8 that are not already in the nodes known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48, regardless of how the PIO flags are set.</t>
  <t>ULA interface addresses from within fd00::/8, particularly ones not created by SLAAC, and not already covered by the known-local ULA list <bcp14>MUST</bcp14> be added to the list with an assumed prefix length of /48. However, as with rule 1, if the ULA interface address was generated on the basis of a PIO that has only been seen in RAs in which the SNAC router flag bit is set, this ULA prefix <bcp14>MUST NOT</bcp14> be used as described in this rule (rule 5).</t>
  <t>Regardless of their length or how the PIO flags are set, other PIOs from within fd00::/8 that are not already covered by the known-local ULA list <bcp14>MAY</bcp14> be added to the list, but only with the advertised prefix length.</t>
  <t>When inserting known-local ULA entries into the policy table, they <bcp14>MUST</bcp14> have a label of 14 (rather than the default ULA label of 13) and a precedence of 45.</t>
  <t>Entries <bcp14>MUST</bcp14> be removed from the known-local ULA list and the Policy Table when the announced RIOs or PIOs are deprecated, or an interface address is removed, and there is no covering RIO or PIO.</t>
</list></t>

<t>When support is added for the insertion of known-local ULA prefixes into the current policy table it <bcp14>MUST</bcp14> default to on, but a mechanism <bcp14>SHOULD</bcp14> be supported to administratively toggle the behavior off and on.</t>

<t>Tools that display a node's current policy table <bcp14>MUST</bcp14> show all currently inserted known-local ULA prefixes.</t>

<t>The identification and insertion of known-local prefixes under fc00::/8 is currently not defined.</t>

<t>Note that a practical limit exists on the number of RIOs and PIOs that can be placed into a single RA. Therefore, there is a practical limit to the number of known-local ULAs that can be expressed on a single network and the number of ULA prefixes that can automatically be preferred over IPv4 and GUA prefixes within the policy table. This limit is unlikely to impact most networks, especially residential and other small unmanaged networks that automatically generate ULA prefixes.</t>

<t>Section 4 of RFC4191 says "Routers <bcp14>SHOULD NOT</bcp14> send more than 17 Route Information Options in Router Advertisements per link. This arbitrary bound is meant to reinforce that relatively few and carefully selected routes should be advertised to hosts." The exact limit will depend on other Options that are used. So while this is not the practical limit discussed above, operators <bcp14>MUST</bcp14> take extra care not to cause the RA size to exceed the MTU when filling the RA with RA Options when exceeding this limit.</t>

<t>Note that in the case of Rule 2 above it would be expected that ULA prefixes being included in the known-local prefix
list be compliant with Section 3 of RFC4193 (i.e., /48 in size) but the above rule is pragmatic in that it allows
the use of ULA prefixes from /48 to /40 in length.
Most networks use ("are expected to use") /48 prefixes as per
RFC4193. However, it is possible that in some circumstances a
larger managed enterprise may wish to use a shorter prefix (e.g., to simplify management, filtering
rules, etc, and to overcome the issue with the number of RIOs an RA
can carry as described in the above paragraph). However, such
non-compliant use of ULAs may be problematic in other ways, e.g., carrying an increased risk of collision with other
ULA prefixes, where you might be using someone else's compliant prefix because shorter prefixes have a lower chance to be globally unique.</t>

</section>
</section>
<section anchor="configuration-of-the-default-policy-table"><name>Configuration of the default policy table</name>

<t>As stated in Section 2.1 of RFC6724 "IPv6 implementations <bcp14>SHOULD</bcp14> support configurable address selection via a mechanism at least as powerful as the policy tables defined here".</t>

<t>Based on operational experience to date, it is important that node policy tables can be changed once deployed to support future emerging use cases. This update thus re-states the importance of such configurability.</t>

</section>
<section anchor="intended-behaviors"><name>Intended behaviors</name>

<t>In this section we review the intended default behaviors after this update is applied.</t>

<section anchor="gua-gua-preferred-over-ipv4-ipv4"><name>GUA-GUA preferred over IPv4-IPv4</name>

<t>This is the current behavior, and remains unaltered. The rationale is to promote use of IPv6 GUAs in dual-stack environments.</t>

</section>
<section anchor="gua-gua-preferred-over-ula-ula"><name>GUA-GUA preferred over ULA-ULA</name>

<t>This is the current behavior, and remains unaltered for the general case.</t>

<t>However, where a ULA prefix is determined to be local, and added as a known-local ULA prefix to a node's address selection policy table, communications to addresses in other known-local ULA prefixes will prefer ULA-ULA address pairs to GUA-GUA (matching label, higher precedence).</t>

</section>
<section anchor="known-local-ula-known-local-ula-preferred-over-gua-gua"><name>Known-local ULA - Known-local ULA preferred over GUA-GUA</name>

<t>As described in the previous case, this document elevates preference for use of ULAs over GUAs in cases where the ULA prefix(es) in use can be determined to be local to a site or organization.</t>

<t>By only adapting this behavior for known-local ULAs, a node will not select a ULA source to talk to a non-local ULA destination and will instead correctly use GUA-GUA.</t>

<t>Nodes not yet implementing this RFC will continue to use GUA-GUA over ULA-ULA for all cases.</t>

<t>As an example, consider a site that uses prefixes ULA1::/48, ULA2::/48 and GUA1::/48.</t>

<t>Host A has address ULA1::1 and GUA1:1::1
Host B has address ULA2::1 and GUA1:2::1</t>

<t>Both ULA prefixes have been determined to be known-local through RIOs.
Perhaps ULA2 is reachable within the site, but its prefix is not in direct use at host A.</t>

<t>If host A sends to host B the candidate pairs are ULA1::1 - ULA2::1 and GUA1::1::1 - GUA1:2::1.</t>

<t>In this case ULA1::1 - ULA2::1 wins because of matching labels (both 14) and higher precedence than GUA (45 vs 40).</t>

<t>If host A were to send to a host C with addresses ULA3::1 (where ULA3::/48 has not been learned to be a known-local prefix) and GUA2:1::1, host A would use the GUA address pair for the communication as the GUAs have matching labels (both 1) where the known-local ULA and general ULA do not (14 and 13 respectively).</t>

</section>
<section anchor="known-local-ula-ula-preferred-over-ipv4-ipv4"><name>Known-local ULA-ULA preferred over IPv4-IPv4</name>

<t>This update changes previous behavior for this case. RFC6724 as originally defined would lead to IPv4 being preferred over ULAs, which is contrary to the spirit of the IPv6 GUA preference over IPv4, and to the goal of removing evidenced use of IPv4 in a dual-stack site before transitioning to IPv6-only.</t>

<t>This document elevates the precedence of known-local ULAs above IPv4, so known-local ULA-ULA address pairs will be chosen over IPv4-IPv4 pairs (matching label, higher precedence).</t>

</section>
<section anchor="ipv4-ipv4-preferred-over-ula-gua"><name>IPv4-IPv4 preferred over ULA-GUA</name>

<t>An IPv6 ULA address will only be preferred over an IPv4 address if both IPv6 ULA source and destination addresses are available. With Rule 5 of Section 6 of RFC6724 and the ULA-specific label added in <xref target="RFC6724"/> (which was not present in <xref target="RFC3484"/>) an IPv4 source and destination will be preferred over an IPv6 ULA source and an IPv6 GUA destination address, even though generally known-local IPv6 ULA addresses are preferred over IPv4 in the policy table as proposed in this update. The IPv4 matching label trumps ULA-GUA.</t>

</section>
</section>
<section anchor="discussion-of-ula-source-with-gua-or-remote-ula-destination"><name>Discussion of ULA source with GUA or remote ULA destination</name>

<t>In this section we present a discussion on the scenarios where a ULA source may be communicating with a GUA or ULA destination.</t>

<t>A potential problem exists when a ULA source attempts to communicate with GUA or remote ULA destinations. In these scenarios, the ULA source as stated earlier is by default intended for communication only with the local network, meaning an individual site, several sites that are part of the same organization, or multiple sites across cooperating organizations, as detailed in <xref target="RFC4193"/>. As a result, most GUA and ULA destinations are not attached to the same local network as the ULA source and are, therefore, not reachable from the ULA source.</t>

<t>Scenario 1: ULA source and GUA destination</t>

<t>When only a ULA source is available for communication with GUA destinations, this generally implies no connectivity to the IPv6 Internet is available. Otherwise, a GUA source would have been made available and selected for use with GUA destinations. As a result, the ULA source will typically fail when it attempts to communicate with most GUA destinations. However, corner cases exist where the ULA source will not fail, such as when GUA destinations are attached to the same local network as the ULA source.</t>

<t>Scenario 2: ULA source and remote ULA destination</t>

<t>Receiving a DNS response for a ULA destination that is not attached to the local network, in other words, a remote ULA destination, is considered a misconfiguration in most cases, or at least this contradicts the operational guidelines provided in Section 4.4 of RFC4193. Nevertheless, this can occur, and the ULA source will typically fail when it attempts to communicate with ULA destinations that are not attached to the same local network as the ULA source. This case provides a rationale for implementing support for known-local ULA prefix insertion in the policy table, such that differential behavior can be applied for known-local versus general ULA prefixes.</t>

<t>The remainder of this section discusses several complementary mechanisms involved with these scenarios.</t>

<section anchor="the-ula-label-and-its-precedence"><name>The ULA Label and its Precedence</name>

<t>RFC6724 added (in obsoleting RFC3484) a separate label for ULAs (the whole range, under fc00::/7), whose default precedence is raised by this update. This separate label interacts with Rule 5 of Section 6 of RFC6724, which says:</t>

<figure><artwork><![CDATA[
Rule 5: Prefer matching label.

If Label(Source(DA)) = Label(DA) and Label(Source(DB)) <> Label(DB), 
then prefer DA.

Similarly, if Label(Source(DA)) <> Label(DA) and Label(Source(DB)) = 
Label(DB), then prefer DB.
]]></artwork></figure>

<t>In the first scenario, the ULA source label, whether known-local or not, will not match the GUA destination label. Therefore, an IPv4 destination, if available, will be preferred over a GUA destination with a ULA source, even though the GUA destination has higher precedence than the IPv4 destination in the policy table. This means the IPv4 destination will be moved up in the list of destinations over the GUA destination with the ULA source.</t>

<t>If the ULA (fc00::/7) label is removed from the policy table, a GUA destination with a ULA source will be preferred over an IPv4 destination, as GUA and ULA will be part of the same label (for ::/0).</t>

<t>In the second scenario, if the ULA source has been recognized as being within a known-local prefix that has been inserted into the address selection policy table, then the known-local ULA source and general ULA destination will have different labels, and therefore IPv4 communication will be preferred.</t>

<t>If the ULA source has not been recognized as known-local, e.g., if the insertion of known-local prefixes into the policy table has been administratively disabled, its general ULA label will match the general ULA destination label and therefore, whether part of the local network or not, the ULA destination will be preferred over an IPv4 destination.</t>

</section>
<section anchor="happy-eyeballs"><name>Happy Eyeballs</name>

<t>Regardless of the preference resulting from the above discussion, Happy Eyeballs version 1 <xref target="RFC6555"/> or version 2 <xref target="RFC8305"/>, if implemented, will try both the GUA or ULA destination with the ULA source and the IPv4 destination and source pairings.
The ULA source will typically fail to communicate with most GUA or remote ULA destinations, and IPv4 will be preferred if IPv4 connectivity is available unless the GUA or ULA destinations are attached to the same local network as the ULA source.</t>

</section>
<section anchor="try-the-next-address"><name>Try the Next Address</name>

<t>As stated in Section 2 of RFC6724:</t>

<t>"Well-behaved applications <bcp14>SHOULD NOT</bcp14> simply use the first address returned from an API such as getaddrinfo() and then give up if it fails. For many applications, it is appropriate to iterate through the list of addresses returned from getaddrinfo() until a working address is found. For other applications, it might be appropriate to try multiple addresses in parallel (e.g., with some small delay in between) and use the first one to succeed."</t>

<t>Therefore, when an IPv4 destination is preferred over GUA or ULA destinations, IPv4 will likely succeed if IPv4 connectivity is available, and the GUA or ULA destination may only be tried if Happy Eyeballs is implemented.</t>

<t>On the other hand, if the GUA or ULA destination with the ULA source is preferred, the ULA source will typically fail to communicate with GUA or ULA destinations that are not connected to the same local network. However, if the operational guidelines in Section 4.3 of RFC4193  are followed, recognizing this failure can be accelerated, and transport layer timeouts (e.g., TCP) can be avoided. The guidelines will cause a Destination Unreachable ICMPv6 Error to be received by the source device, signaling the next address in the list to be tried, as discussed above.</t>

</section>
</section>
<section anchor="following-ula-operational-guidelines-in-rfc4193"><name>Following ULA operational guidelines in RFC4193</name>

<t>This section re-emphasizes two important operational requirements stated in <xref target="RFC4193"/> that should be followed by operators.</t>

<section anchor="filtering-ula-source-addresses-at-site-borders"><name>Filtering ULA-source addresses at site borders</name>

<t>Section 4.3 states "Site border routers and firewalls should be configured to not forward
any packets with Local IPv6 source or destination addresses outside the site, unless they have been explicitly configured with routing information about specific /48 or longer Local IPv6 prefixes".</t>

<t>And further that "Site border routers should respond with the appropriate ICMPv6 Destination Unreachable message to inform the source that the packet was not forwarded".</t>

<t>As stated in the above discussion, such ICMPv6 messages can assist in fast failover for TCP connections.</t>

</section>
<section anchor="avoid-using-ula-addresses-in-the-global-dns"><name>Avoid using ULA addresses in the global DNS</name>

<t>Section 4.3 of RFC4193 states that "AAAA and PTR records for locally assigned local IPv6 addresses are not recommended being installed in the global DNS."</t>

<t>This is particularly important given the general method presented in this document elevates the priority for ULAs above IPv4. However, where support for insertion of known-local prefixes is implemented, such "rogue" ULAs in the global DNS are no longer a concern for address selection as they would have the lowest precedence.</t>

</section>
</section>
<section anchor="the-practicalities-of-implementing-address-selection-support"><name>The practicalities of implementing address selection support</name>

<t>As with most adjustments to standards, and using the introduction of RFC6724 as a measuring stick, the updates defined in this document will likely take several years to become common enough for consistent behavior within most operating systems. At the time of writing, it has been over 10 years since RFC6724 has been published but we continue to see existing commercial and open source operating systems exhibiting RFC3484 (or other) behavior.</t>

<t>While it should be noted that RFC6724 defines a solution to adjust the address preference selection table that is functional theoretically, operationally the solution is operating system dependent and in practice policy table changes cannot be signaled by any currently deployed network mechanism. While RFC7078 defines such a DHCPv6 option, there are few if any implementations. This lack of an intra-protocol or network-based ability to adjust address selection preference, along with the inability to adjust a notable number of operating systems either programmatically or manually, renders operational scalability of such a mechanism challenging.</t>

<t>It is especially important to note this behavior in the long lifecycle equipment that exists in industrial control and operational technology environments due to their very long mean time to replacement/lifecycle.</t>

</section>
<section anchor="limitations-of-rfc6724"><name>Limitations of RFC6724</name>

<t>The procedures defined in RFC6724 do not give optimal results for all scenarios. As stated in the introduction, the aim of this update is to improve the behavior for the most common scenarios.</t>

<t>It is widely recognized in the IETF 6man WG that the whole 3484/6724/getaddrinfo() model is fundamentally inadequate for optimal address selection.  A model that considers address pairs directly, rather than sorting on destination addresses with the best source for that address, would be preferable, but beyond the scope of this document.</t>

<t>To simplify address selection, operators may instead look to deploy IPv6-only and/or may choose to only use GUA addresses and no ULA addresses. Other approaches to reduce the use of IPv4, e.g., through use of DHCPv4 Option 108 as defined in <xref target="RFC8925"/> as part of an "IPv6 Mostly" deployment model, also helps simplify address selection for nodes.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors would like to acknowledge the valuable input and contributions of the 6man WG including (in alphabetic order) Erik Auerswald, Dale Carder, Brian Carpenter, Tom Coffeen, Lorenzo Colitti, Chris Cummings, David Farmer (in particular for the ULA to GUA/ULA discussion text, and discussion of using the specific fd00::/8 prefix for known-locals), Bob Hinden, Scott Hogg, Ed Horley, Ted Lemon, Jen Linkova, Michael Richardson, Kyle Rose, Nathan Sherrard, Ole Troan, Eduard Vasilenko, Eric Vyncke, Paul Wefel, Timothy Winters, and XiPeng Xiao.</t>

</section>
<section anchor="implementation-status"><name>Implementation Status</name>

<t>This section should be removed before publication as an RFC.</t>

<t>There are two known implementations of the ULA known-local preference mechanism.
The first implementation was created by Lorenzo Colitti at Google as a prototype solution, with public code available for reference on their android platform available to the public <xref target="ANDROID"/>. It was last updated in April of 2024, and does not include the capability to listen for RIO/PIO changes, but does support adding the ULA prefix learned on the interface to the known-local preference.</t>

<t>The second implementation was written by Jeremy Duncan at Tachyon Dynamics and made available as open source, reference prototype code available <xref target="RAIO-ULA-PY"/>. This implementation includes a full implementation written in python, including the capability to listen to RIO and PIO on the wire and adjust ULA known-local prefixes as needed. It was last updated in May of 2024.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>There are no direct security considerations in this document.</t>

<t>The mixed preference for IPv6 over IPv4 from the default policy table in RF 6724 represents a potential security issue, given an operator may expect ULAs to be used when in practice RFC1918 addresses are used instead.</t>

<t>The requirements of RFC4193, stated earlier in this document, should be followed for optimal behavior.</t>

<t>Operators should be mindful of cases where communicating nodes have differing behaviors for address selection, e.g., RFC3484 behavior, RFC6724, the updated RFC6724 behavior defined here, some other non-IETF-standardized behavior, or even no mechanism. There may thus be inconsistent behavior for communications initiated in each direction between two nodes. Ultimately all nodes should be made compliant to the updated specification described in this document.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>None.</t>

</section>
<section anchor="summary-of-changes-and-additional-text-since-rfc6724"><name>Summary of changes and additional text since RFC6724</name>
<t>This section should be removed before publication as an RFC.</t>

<t><list style="symbols">
  <t>Introduced concept of known-locals and rules for their insertion/removal in the table.</t>
  <t>Changed default policy table to move fc00::/7 to precedence 30, above legacy IPv4.</t>
  <t>Changed default policy table to move the 6to4 address block 2002::/16 to the same precedence as the Teredo prefix.</t>
  <t>Changed ::ffff:0:0/96 to precedence 20.</t>
  <t>Changed Rule 5.5 to a <bcp14>MUST</bcp14> support.</t>
  <t>Defined the concept of known-local ULA prefixes for currently defined RFC4193 ULAs with L=1 under fd00::/8, how they may be learnt, and the <bcp14>MUST</bcp14> requirement to insert them into the policy table.</t>
  <t>Added text clarifying intended behaviors.</t>
  <t>Added text discussing ULA to GUA/ULA case.</t>
  <t>Added text for the security section.</t>
  <t>Added text to account for SNAC bit.</t>
</list></t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC6724;
&RFC8028;
&RFC4861;
&RFC2119;
&RFC4191;
&RFC4193;
&RFC7526;
<reference anchor="SNACBIT" target="https://datatracker.ietf.org/doc/draft-ietf-6man-snac-router-ra-flag/">
  <front>
    <title>SNAC Router Flag in ICMPv6 Router Advertisement Messages</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="ANDROID" target="https://r.android.com/3046000">
  <front>
    <title>Optionally prefer known-local ULAs in Android</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="RAIO-ULA-PY" target="https://github.com/jeremy-duncan/raio_ula">
  <front>
    <title>Python known-local ULA implementation</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC8174;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

&RFC1918;
&RFC6555;
&RFC8305;
&RFC3587;
&RFC8925;
&RFC3484;
&RFC4862;
&RFC3493;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAFASAWgAA7V96XLbWHrofz4FriZVV+oiqV12605PRrbsaXVsybHk6TuV
SqUOgUMJYxDgYJGa3eU8S54lT5ZvPQsAqj3TFf2wJfLgLN/59g2z2WzS5m1h
z5MPdV7VeZv/nJf3yeeyeipnRZWaIrn68HiWfHp30STtQ1119w+JybLaNk3S
2MKmbV6Vyboq8nQzMYtFbR+fmQumSfIy+fj2dXL24uhkklVpaVawelabZTvL
bbucna1MOauXKQ6YdevMtHZ2+O0kNe150rTZpOkWq7xpYNl2s4ZHr97cvZ3k
6/o8aeuuaY8ODr49OJqY2hr4rmwnT/fnydn7i+vJ5yf6wNalbWeXuOCEp2/O
eTcT07UPVX0+SehnJv8nsGUYcj1PXnW1uS/yyn3Bm7/O08/D76oaFn5T2vp+
k9ymuS1T2yTXtn2q6s9ukF2ZvDhPFvLwH5dV/WTqDOC2Lkxp57DV8d3czZPX
DwDY3lbu8lXvc9rGD3mT9teEoXMa+se/wrdzk867z+Nr/TBPLrsyNf3FfrC1
XW3639GCdyZ92ABiXG5gaJ42/cX/mtFDf2x5XCbD5mm1mkzKql6ZNn+0eBOA
K3g58uvLg6OX8uvJy7ND+fXo8PBb/fTw20P/67H8+uL06Ax/vb2+eP3q6o5v
uDX1vQWk2nlo23Vzvr8PuGDa2qSfbT1HVJzDUfYBRff72NmUJp0BLQAuzWoz
Wxbmfn+H52RiwnWSjzQgeQvfItJfvX6PlCSfXmSPtm7zxq5s2SbvgZzMvUUw
XVxffry5utyyxXpuyqyu8gwhtX98cHJ2cHAQLX2zRoo0RbFJ1rVdwlI9Amxw
Mxc8C0Ln4upmBh/PPvxly5r3efvQLWjBv9KNz/jy9muTV//RFSZa/8MGaKgc
Uv1qXdBZDTGMZJKXy941w83p3Z6dnp7qjR8f6K/Hpy9f6KffHrlPT16eeJQ4
cp/i5U9ms1liFg3eajuZ3D3kTQIX2hHQ4VafmgQ201i4C9jnxpoaPlgm1Rr+
ZjAm9if4g6g3aauEGQZwQpvUFiACE2U2A0hXKXJEePbSLk1XtHDBzCRvHZOE
8zr+Ayyyaqu0KpI/2xp5WXKW7CKn3Usyu8xLmJP5JOL+lD9DZooLpxVsZt3i
YjsBmHeST2X+t84m7wjouv4uQH+PUCH/ySIPN21iS7MoLN7LrK3w8hM8Slfm
KZ26SZ7gymH9ZXZwcH6+/xJPvsDjWsGpGvZXAdCSRdU+oIQ4meE/CSBn8qdP
NCv8l+z+qagWiAA4c+NgYps9AgZjR9fYeXIH5/IXQxBo6LAra2A/i03y9JCn
D0lZZfAFIB+vnGcwPl9uaGHgVUBSSdPBOHfevIS9w0R5vVVsAcYDNObJVZuY
oqmStDB1vsx1AzC1aat6M00A64FV5YIYtf1bl9dMv3iapluvq5p//9gBeE/n
p+Fl3sqip3hxcrO078yuqlZWY/AStuE8Z211ovu2DYGpAQR4MOU9PlDh/IRt
C/tgHkHoIp3VcDO6G7PIi7zd4JJ4xbB8hxMYmG0Km0qLDmVNAoKvQlpMk304
JRwZmFGWNCkgCohyGIr7XJnPsGhvh6QdECoQAgCAmrxpESZwZL7gJgeKKVnw
NfQQ3R2ineCLuy66BKBRpK37Mv8ZNkEI2yDqFXh5corMrotqQ7B3u4QNbvRW
kGzhbvMWd7TM7zumZxBOSQpKQrUKgQgyKAcWAJM2OWF2QP5rU4OsA6Jt5sBY
iJ+s8iwr7GTyO6Tmuso6utfJ5DZHoOQtwKhbFEJLCIajg8Oj6W9nDP8mSPPv
yYNplB6BEuDK8aYBFCuLp8qb1RjBwKGQ4w7JANlLnT8qe1lVQKlmDWi0rnNk
dk3V1akVVG3avOSD6TxrA7SFrBEQa1kDZA0ul+XEKBs4EexlWRVF9aQrELfM
Ong6pA/8Bk44Tz6YmpibG9ogGT9WxaMQCa4E35uIfqdwYMBLpSJYgHAUd12Y
hS0Y89ymlT+AnpgUiLEZIzkOYsgZR1zhMoidsun5ZALY+gR3YYons2lIVKSt
4ixuZHQGRNPS4jDkqoKIWbIAosxQHI1Ln/8HsGR0OZofJg2ut8PE4u+f1o0l
LR61egQ+CeeBTeKavOBwf8jx4DCrislHpR6scG/wvDsEoHUFLJXIBiewPxlc
rgkZ3OHBVEDIDMYG38zP5JoM0b88jmvAjTSwaQJrLKfh9yewJoCpIHRwVQBV
TsKWeP04vJC9IfUCUwMVpWYW7VgFb4K0IcSADkGPI1hSwAlFrnf1ugJsA7A0
AE9G1F9+EeXyyxdYZG7nU3xsQxMhC7kv3d2SjpipODUhQ0RYAmXoDZQVEJ3q
hICLtCPYEGIyqEgZk5b9CbkETIET8fXSRSCLhEm3yFFQ8vtsm06OiAibBD7w
SGcjAvGEP1Vm68CGV1M5QdeTV8ICiK0HrKHpKQqO58eDvD4AwAedmmAUCKCe
4mP6qk+wak5SnxgzYFPSU/psk9b5ItIucG3mkyRRAcQrgBvNGetNeMO0rFwv
b1hIgXbsEEGQsiTVH48Mo0RBAf24saMaSsQmEGkQZZB58fJZvgRgN4wK97Yk
pTXcpRw2NWuV+wb5buNPJyYBan4DtY+PU4Cis+gAn9q8IOWMFLrxC3PoGM3D
jNRxJTBEzCPYGipwUN2gXYtcwdOb4jMJYthoaDQE4mbAFUhVqy2ZEalcZwsb
2qpqtZVTDsZUNVhAyNrRDRGJqsIpqcIvQjHzLlnk7RSZAyANmLWxnnc8P5wi
LqIIhLUPPYojRBrhE7t8j0B+Xkmf8t2/++4A597A812pMocoXARgQAEN74Jx
W8RpCK0WN71Ezg4EXuTWMfC0A2WeLok4ToTzuGrtjICegOUhqF2hUiGzsZ2i
ek8ACdxuwDfpNi1xBgBHcl/BhZPEhz2LiZXTFlWddfotArHPlqZKYAjVplVl
Yg1qEmIb8GCcXICGPIjkE1w7MF3WSVTFbECAg+qf9pRKpoXnVUs40kXJ6rBX
TglmCPsERVsNfLUBtgpUxIYLnrpOKhwwpYVIOa9WC0H6RjZ8hjQIx3SuuCmz
0nsyr/QvMaG9vaBq+wZXIa0DhAwuQWele4P5ry/u5sn31RMawdMe2rDKX1YJ
m7qtSCS2e0WjLkm+RKJ0SscqQ2UNVmFOyIcQcwCABmr0HTHcqqjuN4wXn4GJ
wtcZqDjvP93e7Uz5/+T6hn7/+OZfP119fHOJv99+f/HunftlIiNuv7/59O7S
/+affH3z/v2b60t+GD5Noo8mO+8v/rLDcNu5+XB3dXN98W5nSE54UBYBOd+r
RflpmklEgq9ef/jv/zo8AcT/P+Kk+vJF/nh5+OIE/gDsEHZZlcVG/kQZMgEy
taYmkAHqAUfPW7pp1ETQaZcgLQL4vvk3hMy/nye/X6Trw5M/yAd44OhDhVn0
IcFs+MngYQbiyEcjyzhoRp/3IB3v9+Iv0d8K9+DD3/9zgRJ5dvjyn/8AKAPU
cJ5s8y0wJ3RmBXEd9Bx9+TKZAJaej7pJxh9jZjWZ/EvszDpPLgJGKaoBcrwM
rKisI6q+BzvsZ6KQfVIMHlhKsGqR9fUHk9yDkleSnN4X2gB5BCtdbfUZju33
5dkh7vfD1Y08+YG3eKXONiBKdhA+9/jtu4uL1zLBLaq9ZHmr3XrRtdUstqr1
6SN8Ggj6JtDIr5qmA+h+tPfs16YtxQ6EwMXByiIyk8nkRxSCK1CO85l8j48v
rJqR6CZ2Pogp2y2gE7CUYo2HVHK4kBlo7+ln1iJVNSJtl8aRYoQ+fLjE0PCN
LFwVPF5dAoYAm914TQfI8Uda/B7UAXgWdZPdPYS0O3KAkidsQNAuYGJ0NKDa
d/HhCmdmNkp6JUzOBxcRCPTfFYBCwJtZeTRpWnWAEahjT/gRttg9VJfisgTE
b2g2Ojfs7MkCezGNSO+BdW9x721Xl2ofN6r5exu/rxf+uqkvKploAaKCjBvL
hTVZoLk6tPHSnIVj4INyUlGMUNThMgvslZxToNKQw5ZnIxnsINt64+a+tgZp
LlwHdu6RCST6Y15XJdKiKt4Ptlg3wrMZBkj7vH1gAJZUEUb4hhxFFi1zQgtc
h106+KlFTfHJ1gChQDKT3YyS5wkUIyYrUhQ9aAidgPRQ40BVOvzGmX2wdlXn
9zkHCUav5aZkBUz9GI1ZbXFmkBq+7uAsPk4IBgtoBCi3YuIOPY5EA6iugBQM
BpBBT8sGTuUIvxAASzAonAtabZlo2Dx5SzpPuWG7jM2xqm5YkLsbf0LFDp0w
SEC2ngE9dTnGJKbCkfH0imQRoFW1SglRyDZDT0Ob663AZtAdRJdfmBLd99PQ
VyH0ZAH9kR2h28b538m4CvDL+ysCwnSOi5yUqpN9Vj49hoogCex3sh6cm8pd
qIZrRaNbDuO/YJLj+QIq874LUkoeUGGRyIEHWHCzWUWaZCsjHTqi3gxnQXDR
XIHOyMEqfsokjzkhXLV2PtPhUYnt1GDTsw3i4V5gUAsAYQrnigaBAVyBvtVP
wNaOwa7aOY0lNjoykTMh6q7s+TkIEOi2cFYWwad1t8AQV4Q/c/jowyweznNR
WQJOqEDy10JU20VOQWcXeSJA11hgHdGT5FXYwt/Yom9ibzNHkcSzRnyusZah
UQHAHu1gSvgcTzkjZddDT61BgjQxNsd8QmFOHrRgNnaj1V7OiZNsa3Rh6nwB
BGbY7RbfRooemjJiL/MEeaIaqjEhogsYoYxMX3S6XjxNbQWwDNGxWDr/tnk0
eREEaQKPSlmi+fxIXhw4yCiTXGOMgMMthAcUGBOuYJF9oUVBC7FQVJV1ZTK3
dmFZAyVw5kzBGBrlYAlHSQbeF+9PcK62huRSEFYJHC8qVUXfci5qRBbnfkSK
Jg+XiOWexB/EsdX5GrppjDoHeJjg2HTMB+lUh3nC+LeEq2/VO87IruFe590Y
CkD4Tk4wFsCjvTlvib843n+Rf7Zi2qemBlXSJA/5PVJBEMGA8eWoMAXjHOFH
5wjGjwbjwqhbo4TRCOGBDKrgE39yPEgexLYUWwMHbP8y5u66xemPPH1l24cq
6wejwN5zQQlS2lEBmd3XFGSIfHPLrmbnCQHY65QRiJ3PJvRdqYcH1EcKbDFv
GfOZJsZ5shWCPT8afQfaQtdQNBA2un7ou5UFBRqnZkeR4bEdOp6APmFaSrCs
j10LDJagTc9+WeKdOGu1gCcfRZf9FR+1ksrw1q6ZtYYEOaIhIauMNr/VC45X
/H+bRGxegv0obgZqDDI31CL1y4Hq4MmG3OvI5HqRBpIOjrkWxEojjmcdh2BP
uwvBAErDoTsXvhgXCIGPOjCSGs+unQufwjBEVkGg3uSr0JkZ8hIYkRWEocuR
BIXA2ykxe9yzj9DvB5F777IUA4AYBwcbWIxefv+azJhGPJTqTnbbRGs5b9Ku
Ea2SqJN920oK3ryTcKR6q42jVo1TMo2zv7/pVitTb4KwLsbVMmGwyIh+FzoG
YFic+sCMCtR58vWIFHMZErUtMB6Kcpj8HGzXIN6RYAH+Q+YGZoGBucER+VPR
v3PhsYBc+cqG6me8A/Lg6BEzm6JDKpOzkxsARHgLFKsmHc6AJh5NJmyE0gLY
ZQiSCYmvlbVld15LdtunJ2kryujx6EcHB0fn5/uHZ0DZwhPcE41/5CMChgmO
H3xGkPfSUBzJLv10srhyxR6jcoZiGH5vSLLlfAs44g7t70q3k7wTBk1MBzaE
/pQyohCNhpEbFKFZ4tMVfLhi5kFfoemd5EtEkcD/3ojr3v4EcpAvHIyUro7O
4zDf6R6tqpIqMAJhKQSCCF47nxapclkmdExzE4cJgnyOLA4P5i/CuFSNKZHA
Sx5NkWdECBfZX7um5f2zHiX5qXcjzvn2obZB4GKof52LYhNnr43pMlPVBHyS
gEtkInomm4QIOmC7mIfBeOHj13rZJTDI2UO1Zg2ThRjFah7yOgsjckQEoh6g
+1pCpU7G9dMJfy16inAEjsKf3HG2Gx1egCiQMAVm9mxX7jgzhHwjCIgjDmTp
hXACiLjjFhROouQPIJoaI2cwtMbo6xi9cP4CRVbgqH/rXLIK0XKPBgE12Caq
Sc8gTyPiIk/F7hYACEqNJozqORyj5AVlQ4VdtnoNViCRyRD1BtH9wYJ4VHms
Bs20PZ9M/tP9uKTe8EeXfP7nk6w6+JmIx5p/PngYvKM4uP/cD9o6SmY8Pz/c
Pzx6GX96ekD/Hejfo4PcqNGTDn7+ibD0PwhL9090rpNT/PfwJNn95ps92Mz+
weDBE/7o0G9mZJAbBXMs4ef84Pxg/9sz/fb4lAf5OUYGgdyQUbuwFydEwlWO
ecSRf2JkEEBGRsk8hzDk+GhkxGkwz8ggHTXR+Hr87TEd+Fj/3DLoQEbtMny/
7W01Uci6ecYH6ajJ0qa4zOHB8NtDd0fjg3TU5BiEyRBs/K0DwfggHTWZwIGY
9nebPZcnlqtZOkGEipAu+Y4oFRkkh6zYYYS4GCgPu5h/u8uyci+ZqAt5JGNu
TVokkH7nU7xAGhxHTIA4kfBT9Po0AcqQvhx4oUkjQk7T0XQU1KP1Q/2MPKvV
46gq4jDALFCTLkACpxuN6eNEMdoDEDT/Ipjn6IDFgwo3PsKD7Wpg9yBDw0RB
r4uHjnInFZdbc00k0+ZrJKXxcpKLCkjXJFtBbSzSMEH5WXaF8n7JdYlYfOCy
/0h3RsJ0oWo7756EExuTZHcFBnug3KAwkwwQd1xOlEBVW2OeHBeJc/vFYyui
XcT8yq4WVlMr9bhNCAj+yqtkJJ86WcptAeUmSMgJpbGkqnr2cx4ZCjX5HB8o
H8zFP+dJ0lekYHeCbpgb/xO6OCgEhtriNrv+t96wU4gY20BHJe1H9XNRvzg/
7Tlgk/Kr2aR/P5gnRHhYVYOxSNjAWrLY1NeD0WxylPtcFLAo2yjh89Rn91AE
mSDnkn/C1B8ML4tXoKzYrg+AylR54SxaVgJHQhKjGmCkX00mt0G2bECZIZns
sDs7BCf6ppxJzZlaGfleNesf1fqZ07ZJvet5B0Up02xe5HgaLbdDNy6brNty
ErB4o9nbYWLNW3WbUUqO2OWSf0OTOafNCnU1ci/p8ThdeakeWPSh+ExHxgkP
VZIQ2xxJLWeTiwMv8ti2GAtzbi92PZBXJ3C8iQ/D5UKin2Tc94VIv80fSiFf
dvF9tnZNNgkmko05+IjUKJwaTDNiCAOvicgdcSEkeRY5eDKPmDEZkwXsLDEz
yNLTgBd7h7ZitCG3usR/yA7tBf4an2RMzoSlQfc7phdag6F6fmhr7gfg1Yer
G7hiFB8jqSXw/UdAu4ikXR4yMcaNX1es4ELKnxAXEQywQIJ1cXyaBr0db9l5
EmRLR9ulnYzv9qPb7UXzzE6A0d5t1jZ5LSyKQyRSQYBzTLck+RxSRmIvXVGz
QcW54lJCA4+izwSdLfI2TPZUh+uWXMpBKiU+O8gNrZRw2l7iJ0c8aIp33x1s
WyvVvE2UJz7Ns/TlC3eRQ4+1PP7W3SNdUbsdV3vnYtTtu7Sfr7wKMnEQN6TG
OBRABUUvY1JyOc+TyeE8uQBEgBtGkCHmcSEEHqYAVKn5tg3iD/7C7A43thMU
au7gtw/W0HmwZhOv9JdfpGQU/YZ8vapSwR1REgKF2DS1RJ1BPajCJo/mhIKM
6/36OgRbkJ3ioxy8dU8SktlD0W9h3yM11qw9iWMCGXCNrJpjICiLAPaSmu5n
xjtomm4lNEfb5Cd4zSh7A9kHnOlYzjQoF9RABAbMbXkPevk+WK+U/wxqTe1g
CIjBbAxP3McxvHUFGqc91S3zcEY9zXN0EU+fYt+fCh2LuXWemOfxEeu8TuZ0
Rs9sth6RkhMKEHyZ81yyH2vsOOMHp2/YiV7yJbiojoIPAAlW3PSrme1kcjqX
anvljl5+jKHgNKiVwfhJKX5oTm8hJZbSAll6h4dOK6Ywcfn9Lxw7SE82mlyD
9gBy2aWzeAcnpXiAY6CD2iHjOQWaW8TmF9aio9aWKmwibkHMQvR3xyGYK0ji
dJAVOsDO0QR9Oscu/Xu6B7d2NpdMSb1idm0qOOrtVz4Vav2wlcmMouxX3R4o
QmOXFwQkXVpLYGlEVwlnezFPfnwg0JL2NNIawpPpiD4oegPBFdRc62pjAEro
XYujXl4fp2O4gcd7HHDs+RVOsP4DEO2N7EARlk1D0VC2Akh9qZG/2aVemLKs
OkryI15WyR1xuZgGqTgRtBzBYnL70i6c07a2bGTz7SEkvezjJNTSxdExkYEu
ThXUv9OqUldy7L0WknY2T5Vg3Q+5FIIqVEkSX7iKG8Yfk6HYwqJ8zLRDd3d1
f1+wOuRMmGq5FH84VZ1VhehzWd6sMahlNNQ8ukHaHSbKc/q8036cbrLt4KIV
SWG5pvp6i2UEblv0rljt4pieKl4+8IeIaFIyNgGXVnnLsapG2VXZkUGP+igh
DWyEsIcelnQfgEeq6hbm8ZQIzI8XpDJycG/qsWa4oEbu3UoDbSJczP60lmQr
hIuuphl0Sgl+smEVHU4U29iLQV+BqFJwJITfK90nU45Pg8GdEhNrCK/QAIbT
clGz1qBPE0rNzGntsBiH8I11HgwiB4F2V77OlxbtXkVMH4/Unjjx1oQW7rLG
2SS+igJYOLk9azFwD188YxBttdvQYVvk5WeBiKlBQtUYd18AB6IMPvQotewr
ktI5PhKG0IUal/aJUyOAQy07PCHrSQAGEn5NEPIK2D3MSWbXfEeyTBHufCfk
pOL0DCpwJhDrYZxYQik5T24rsevZccdaCCvEMdr6TAUyzKdBeiNRP+XH25/g
/HQSnqeSGDJ5SC8Ae3/mDK6fUit69/u7T8y6l7BpVedhKEk4+F+3TWP4ORe/
po1F5C3Yqr4AjiKKJwEBo3CMS8cjmuGCB3HSupSkIQOakCiiXGZMJcZrpj1H
jjg1anfZZMTIAIamAQx7xL1JXtHuSCehumxzr+44OVMrZaWTIFki2jJJS5wb
QIuKP7r6RQt4HxIiPby7Y+oQAJSHs7NHz3uXCOG2VmgGCiFT/LoCm5l8wQJ0
qnBL8zrtVk1rqPWSmVDuLmWFE037kjxK5H7KmwfNAjI9ayPZtfN7rPOuAFYI
3eVGpuEqP8CVlgTxhMw9YDBt6qoSkaFRrwaSvpTe6tSlAXsHFJsgg5R8wIHO
qNfjMtH2AmCgE3CCef8eBUKPgdR7S/KE3ilTIzYwgG3TKWltcqmhPoIWAFIZ
AOoz9xEBumjY94w6KT4+6efeobDZVJ13RHaUbIzXAqZFYouGRLfbpoB5YZk8
B7aeKnzkxUP1ItXcOE7zIscGulApgeJ13PNjuTXAT7nnvrJ/i894Z8Tx7ni3
6lmuIopclwMD8zE3kWoEaFpYzGVCzMZTAafVOpxwh95fhTDdgeO9er5PBMXc
qHo/H+sOQd7feAER7BpfrDgFkhPEwuTdZddi5gzAoL7Hy3SdZETauOySDjXW
mfO0W7cH1rXJVe3BRbnPc2mnwm0XVAlsJpMrMZQ0e+YJdfLH3D6JLitP9Pvg
ACktKcwSVxRz8XPGgQZN9RtRPajwRDzEeZxSoSsweWvyTldSKon66fRetIwZ
SG5F8bR+1dIzJUXP7VGS0v+hHTpDQJ3leIdhoVHYoMN7J8eLF6eam84Grtmi
V2txPynsz3tfpiO581GIjfnVVsOFdI1em4NBMqeCdRe4YPqAyEwW4nQYbtjj
e+hVgCazwSe9G5IViMFszydG0Pdrrl0MYrzizdd7KAIRDQYe5V4cJ9eeT0Tl
z9WgcqVUHVWvIsPZsI1vMrMeSRDGvQ1T8yXOxOFJ0Lz4sv+Rzg8+xw/QuLUG
c3YBzqn0LFBIk9qVidcKeyYMc5oxmYnzCLck/Ub1ZBqXZRbHVUqldqyZOnet
wo24a9fYIN0fZsGUF/Tbwa9H9KsaNfwFkR0WL5MLStGUnzv0Q/EvHviqP/Ao
Goh/wYVpAUwsPsm5Nbj/8OrU+f6R3LsfbP1g1rwKeyEMyAhtTSKojGfX8GQT
sAu8BWRuOd4U61Qt2QfJBQci+Xcyexq1HeB4bVRa6kv+FCaz4aHP5QsHgbkX
G6R4D599Qo6oygYQVcwGmmSXaiUOT9hZtD0GmeyenCaPTXJysBed6slygwAy
6gi96YvX4u507Az2c4z72XX1fceMJXjLCEK6Mw2TaTHAUPffU2gcETCmbh9k
X6jB089rd5IgrmsWLYTYCyHOFujsBTynz45xO2EwNqvoOLuHbNUfHmt5JJmc
40x2NsJW+8JZRLtmvTrGGnEnhwm+SGW8BpbBhSXHUqp2ItbXUPyG5cXITsjK
1iTodV7nrsRrpHrUn8UZCSSQpbqM3H1UGhWVB0vzkvE6uAUncfviR6nDc/V2
g4B3FOuOvaHDcBLZHLzhpup/PyJjXV1tUEnnK3p5zFcL3+DBoRrEQrZ05cfe
+49bEK9+/0FOpvGlxfnSFYedhRJqS887idG7Arp5Qr0KOEkpTAo76/d6FPns
M0jYM80KlEakcfSXL8gUEMGehBWsuUFa0EDgJYzac2fZsuVhRWkAgcFh9WPE
15GDT7mqsH0gMSEEDhAe6xfdA9aYg28sMZoz37g6RKMkTOWsWtODMeZg4+cV
CyrRBH6XXPpMNvFOyCmJA5Owr4nQxG8XHHbU6FDoRzly4qPtt5WLlBwxugMW
C9uWihnZxrDVFTCLqnVlkGSuq1+Y/E7RCqZt7WrNtQJ+ma85KfbbLCUHp9dr
LZzfmcggh8B8whrdsHWdM8KGLTLi2FCvJhNdkc7L4FqnsEKhLXmlf4K6CNdB
a0gqNQlVVQqhUL8QbCnIT5q0rqhrqO/HFj7SDLp3hU2qkqgwnVzIJELLbABI
H1drsaW1j5PRLqODq3ztU57z0rPDnlMoVeNy8Sf/FHqY5c6Sw/P+dD0ClqAQ
6/HhWDSKXR3w8AIdDoWHFYvFkz+5xLRRVFC3LDAgjuAanIYrzpMbPPITtcVi
elAyJVHs9dZexTK3ThCvtFpHo5vt3WIP8sQd281aXPlLzKgjCsvb5+nKYUO8
ljOiwUYp0VVFthmRbs9CCzeAd41L+5xA2kN/ehY6/wCChahyNECVbVzwI+U+
cP3e5fUtaWxYrCL5On0zTXNuxqigR/ne64hNvqZ0PWN7mIp2pXkxJlkB842c
e1SliGXbXB6JO1PPGqt9pJtluVbGhE6z+y6nDhDWNUmNvIAn8yByczxPrvFm
YY6CBKEolXCSNO3qaSjdfzNyDbhLHLr/RzBAO0NS50lJIjWBn2rJvaO9xRzW
YW9x6viI6IggD8t2oyRRp5qLR0J8coOFANhN14z3ueQgLbu2pNIqEtgaG2qc
ICFXM7tvQVF3fljXWThzYiqUhax/3gkoubiIYsFwcb7qiDpHsopHetwu4vei
qQpLkBRdbQ89BRb99nDNrLe4DgG7CL2nB3gCrgQsmWkcS36xh9YGZtP6li1O
X0fL3Piiu0hdIpBES1J+gUFqePp1lVVtHAxaxpVf/Ny51Oz29DE2hQlau7eE
fruXF3t7yXfyGfxBUIxHvIIRv/+DDnkFR8b4kpYdJpeo193mq5wSlCjzZ7iC
f37rEt8lk2CJaIVX86iu5Uoqnql6UlFiIEHEdtE+jyEGU1tZ7AGpPJ7A5Ezx
kHky3MKAvar1MTtcehk43araD2YXddPvOtbjxzaEDogtfo9WtfBw/PawvNYw
jDykB+Acm26ts2i+Z8QD6WxjW3X6ZSTwrnxm2K4jIyWCZpjYE/Our4Dh85ZV
7+IAmqHq6B7t67O8v11kDFgEuDd3aCiluR4Pg9Q32RC3hbdl2D7faADZNUgZ
eo8SlwS3sC4/6+vzd4WKxtxAgZYReYP6OEB6npMS4mcK0p3ItyE9TWL1tHcF
8cUHcHHOtBg2wYY1+ilw/fV0n/GqBQfGQZYTCCUckU1JfITw4Funw3gWsQ1g
hZNCgbWg7CdEqFglUGaksPlqH8FJzzYFgfg9yOxN8mZjMfLaoKbYS1kMfV2s
eSMKOlpjd5I3pKe9GUn2U628OEROT0+/fMEj6BdH/AW+HIa6sC/DShfhjC3l
vbSevw1N7THe4TS5Abvi/oc0Bj1YcCRQEO4eflXne9Z+2G6cT7VN0cnIBeVL
1+PH21uRMdeVdCHbD/+b7AlUi2rOGb3GSkSpWdoWUA+UClAkdn60RTEjRRDJ
cB10vgszovBKN857zXJYWZF2pZRXTpTUN1Otp17/Tb7Pkjr6kZTBzhx0NWGf
wHAbGjwPu4FiMlnLiV4aJwll1bBhpraQCPfSgQ5c4KsYpG9ckOS5xBQt3g8b
R4MNuWSK3rYQ0Z3fI4qVoupXFChRmLcR6nGna0pwy6g/SI56ePsETIuBFUMc
8zUoCyDFXKf5DuneAd8px/iEvNGhFxEdQ8JpgOGStidL/TqOe6trC3lT72tx
AbfUhQTm7PGavOlVyd2wLONLwP48Tib8HUwkPP9XeR2ecd49bw4KdJ6j4DBf
avmcGRxZv1HCGPfdlCriqZOiLraKZ8DsEDXq4AYLTryXS8LABBmUgHGoyOUr
W2HbUMHMu9cf9tzD+LoATaUIdhf0gDHJZXABn0rvKZPXrL2pa27oSkncUsQh
Se5yC5l9zFEVxmor41L9sGjWk2Wgj/JchEXsNYzzD8nr/NaV/eCdbQeyQFVC
Mmq11nZmV9SX8WfppueTd8K5gqLELe8lYQzxaZqu/Bsg4NIkmYu/1dQ1jkv0
OwfLm0VAkGLVeBNktQJ+SIrPzq0fIfURnKkMDMQ+EZH5rQS1sC0HBeWdhxNk
wmt8+54ap+98PEH2RWVPY+EYRCWscfIhaS/+NoEbUXv3czdg3QiXlMAc/aIo
uFl8FYYGazAy64uYgu2pTrhDbwHIXJ8oLjMeA48AhH1q3vkQsXZB5W2YvuKX
BnLZE7+FwSO36wPAEHVRJAG2zXbmPVk9rpiRSJWNyILs9vLvWliisw3pn9g8
mi5AzI5po1uU67rpJSCcBxiHh/KoReXl9W2MZQEXiqq3L+CHE+LvPhJDwhcG
jL5kIwhMxUEpdrL79/hpri2sUxQeLH5nLP445yoqmPKU6vsGqwYvbRDX+oYj
F9faFouldryboGOzC78GnJzdyaGb7itMlibWk+l2d+rqvrM7vNTgxAInRXqp
y6zLLV0yjJBc4L9nW+TJNqHbitjlXZjWnVPr5GoZuyGHK8iJCXu9Km3inlmY
9JsZdi6XinWSMRi1tQwSAjA90zQd8ULsAyL94qVFXfyqsvDyQtWFks7j90m2
7t2J0snPlqQ8crDFdegMGi6SoU6n8lGrZgPDVhjNYLKmZnWwf3wzFvUwzgML
ngjx8EA2wC3u9KBuEHWja1Dzx+ydJxtlRWHDR4pa4NpEH3XqKiSwfbMy5P4G
4amHfJGHjs9kV1XaPXdKqlLKuZJo2EDL+M5VWnhtYMWiczX3dNuRbyKwOD2u
SG86iUwsuzIVEQpPgv4qFRxRW+5CdQRZDYsFe4dMfBtfLgxSJO65AjQrJcUK
MFLcWdWQniAg7nx9kEu4dd2p1UWNVXMIKWyQc/DipYMIGzva1JHbYodd4rGM
Qxri9VKXtV4Gk0fQcqGqs9rM1vrqQfQV8DZm3MdCOxR70I+4hMLm6MgtvFAD
6TWcAG+bwORz4EewKWe3BrCo2qx8zQ0bbR3fXo2XUTeRjoQduoO+ygIsn38N
/xdYk4Dtp7EjDL9KL6gLihpol1zQEaY9qmqIBy3ypU03KXZ/BM1sLf0kjKvl
yinCDaeuc27tDDzI0ZLbcgub47fgxL23s07bK+a1tJrERdGvKj0rsZqHisDw
gX23G+Kx77Amxb9NSOiKAyjPvp1Bc7bIakb0WpHqic6cxiVHBq3lB8pEyGrl
1Rv56vnXPOGgXuqWvJBy5FV0fGXybofArSfL43vBE3xdc/Ljn7w6xEEWZEv7
eMj92DynTjfCKjJDFEO4UJoMbhb3S513BRgDGgBMupA5uNJNQpdNLzuKsyIJ
dYOiVX3RB/WaGlNyHT0tUJYGrQDYHtQUHVdUxBTJhjLy+IXdVGIvNylgnrsL
FWXyfj+tcBl5U6ivsVqR44ATcouqkt64yMSCHu+A4vvy7qn0ocIAFlWK+szd
Xh9g0DMi1VDyA1grRjdVw8iO/cZZOIcv9ZIaHXHOyFfEH0/0rTeHBy/HeoDg
66Sxb1HjHKhwH1z2gQVLxWYnaCrKNzzl5ln8yo/tIPMvF+TWninqZSABuHJI
+9rSe+cbzT/EruDIKP1YOit2guPq23Ldta57cZ0vOkfeOE5x3rdr2KVXkoBl
uUCRxw3A9sBEzj8nFx2gJ9hooAxeYhz4teHuYK+AVZX415rKpMBAr1bJ62q5
tPiKqncgPMufK/gAu97m0+T1Qw149LpbrdArinM9grL/1tSgONDyvTdxqkOE
c/H3ycPh86qwtxkrblmUxuXVOGeSuer2oCdw+F68PThKtUi+xzgxbPw2rdoW
dOh70JjeZPBLXVggwzvAhXd2hRj+Ayg37/Lyc/Vopsn7HOQEUPNH/B+0SRzw
LxsUxhVmrFwbItxbQNEavp4mN/DVHWBqibN38FHyZ7DmQc58rqYI7zT586YE
e2yafDBdkfwI9AmIdJevQD3aJD9ScFZU1v+ffwDxBP+Ziotj4kZVt9REr+dA
8JqUhrckLTR8IbHhMrO3r+fiyXPvlOFuT/06p8rHU/o2hehbXlUJ+uj3+5Rh
J2DfS6KHQOhm+FNV3XP+H5YogybSYi8f1cPEdyktlNMqygZakhPdJddqk2/D
L7nH+uiWX30cvvGATC2e7pdfLq4vP95cXWLSl7zTt0CrVpujAgJfgFlG2blH
B0eStuuaNet7bltKXl8Hyg41kGUm8PHqZh+7NohWyCyZpnBvR8hcM+Egy0Kz
vysnVaVBwEjbFH8pcWv/kcvQV+rCZfwAj6w2ySWox2jYt8kdsFoQFcnlpjSr
PG3kZTdxBlYTGgLTAP7+8nrXBKz24uoGs4VnH/6CoGZLutc90HcjxOLjwdZl
28hSNsA1y7AtzVb4YzdkAL1Uzyson7DzMNcvkUo6huJafYot9tAluQU73puN
4gZR662+1ue1qABMTCHFYQs3ro5w7wBKo8EDS1PudAV7ykL6G3kPuwu1jb/D
Guk/ke7T4pYgsnNJp/61RFivqi9DMqVTAEimc9Gu9AioXKcTznEKrKLBmynD
dxeRCuEyegLPpvf7TAcJqD3ITMd8naGqFtidN06F8c+A1MqwABPLW4Nqqjhp
l9v6BKHq8K1szbg/RJUSNYV9bZ5LsfE+hsyp3k4HDos/pxy54bgElkuhhjtT
Twepvn56fIEUv1EwtCQZ+/DqqEqT3j8x5oMYJIIiMubSGR2Ajz5IwV4kSoke
kRBhXSf5VCDgW1TNXXPLEODITHz5r7Ay14tapDuT/PbX2rJgvLi+GJDZdVWy
+XPrXzzgXnNQRh0dqZFq5CP5jUL1G8x1lddPb3llCm+CG66Frx0X/90+rWTc
Sxekpfk3oGZxje62N9HwW5e0R27c9fb4YDrsmvvVk5JiGbwQIVnAQT7HrX5d
8Cl+AQB+HHf9DxaN+/UO+/T6kb4Lreu5KIITR10KoZAI2PqamqBFAWJ44H3h
p9XP/ElfKZS8++5w8B5k6cG00dx+7pHng5G0t16zWN/vcjWeOIKHuOAOS4iQ
KWjKYFCwO7pfFt0bq0qyONYDnZpLe6PBrk+lcnjB896w1r9WEp+g1lcLam4x
m82SBdgmk/8BqElsxD2MAAA=

-->

</rfc>

